{"version":3,"file":"js/about.093b7eea.js","mappings":"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","sources":["webpack://front/./src/views/Setting.vue","webpack://front/src/views/Setting.vue","webpack://front/./src/views/Setting.vue?cc17","webpack://front/./src/views/Setting.vue?9f9b"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"desc_text\"},[_vm._v(\" The following settings are only retained locally in your browser. See \"),_c('a',{attrs:{\"href\":_vm.github_url,\"target\":\"_blank\"}},[_vm._v(\"Github\")]),_vm._v(\" for setup instructions. \")]),_c('h1',[_vm._v(\"Open AI\")]),_c('div',{staticClass:\"desc_text\"},[_vm._v(\"To use GPT, you need an API Key from the \"),_c('a',{attrs:{\"href\":_vm.open_ai_api_url,\"target\":\"_blank\"}},[_vm._v(\"Open AI\")])]),_c('div',[_c('el-input',{attrs:{\"placeholder\":\"sk-xxxx\"},on:{\"change\":function($event){return _vm.onKeyChange('openai_key')}},model:{value:(_vm.openai_key),callback:function ($$v) {_vm.openai_key=$$v},expression:\"openai_key\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"API Key:\")])],2)],1),_c('div',{staticClass:\"separator\"},[_vm._v(\" GPT Model: \"),_c('el-radio-group',{on:{\"change\":function($event){return _vm.onKeyChange('gpt_model')}},model:{value:(_vm.gpt_model),callback:function ($$v) {_vm.gpt_model=$$v},expression:\"gpt_model\"}},[_c('el-radio',{attrs:{\"label\":\"gpt-3.5-turbo\"}}),_c('el-radio',{attrs:{\"label\":\"gpt-4\"}})],1)],1),_c('div',{staticClass:\"separator\"},[_c('div',{staticClass:\"desc_text\"},[_vm._v(\"GPT Prompt:\")]),_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"You can setup custom prompt here\",\"rows\":5},on:{\"change\":function($event){return _vm.onKeyChange('gpt_system_prompt')}},model:{value:(_vm.gpt_system_prompt),callback:function ($$v) {_vm.gpt_system_prompt=$$v},expression:\"gpt_system_prompt\"}})],1),_c('h1',[_vm._v(\"Azure Speech Recognition\")]),_c('div',{staticClass:\"desc_text\"},[_vm._v(\" We use Microsoft Azure's speech recognition service. You can apply for a free Azure token by referring to \"),_c('a',{attrs:{\"href\":_vm.azure_application_url,\"target\":\"_blank\"}},[_vm._v(\"this tutorial\")]),_vm._v(\": \")]),_c('el-input',{attrs:{\"placeholder\":\"Input Your Azure Speech Resource Token (KEY 1)\"},on:{\"change\":function($event){return _vm.onKeyChange('azure_token')}},model:{value:(_vm.azure_token),callback:function ($$v) {_vm.azure_token=$$v},expression:\"azure_token\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"Azure token:\")])],2),_c('div',{staticClass:\"separator\"}),_c('el-input',{attrs:{\"placeholder\":\"e.g. eastasia\"},on:{\"change\":function($event){return _vm.onKeyChange('azure_region')}},model:{value:(_vm.azure_region),callback:function ($$v) {_vm.azure_region=$$v},expression:\"azure_region\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"Location/Region\")])],2),_c('div',{staticClass:\"separator\"}),_c('el-input',{attrs:{\"placeholder\":\"e.g. en-US\"},on:{\"change\":function($event){return _vm.onKeyChange('azure_language')}},model:{value:(_vm.azure_language),callback:function ($$v) {_vm.azure_language=$$v},expression:\"azure_language\"}},[_c('template',{slot:\"prepend\"},[_vm._v(\"Recognition Language\")])],2),_c('div',{staticClass:\"desc_text\"},[_c('span',{staticStyle:{\"text-decoration\":\"gray\"}},[_vm._v(\"zh-CN\")]),_vm._v(\" for Chinese, See \"),_c('a',{attrs:{\"href\":_vm.full_language_codec_url,\"target\":\"_blank\"}},[_vm._v(\"here\")]),_vm._v(\" for other language codes \")])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n\n    <div class=\"desc_text\">\n      The following settings are only retained locally in your browser.\n      See <a :href=\"github_url\" target=\"_blank\">Github</a> for setup instructions.\n    </div>\n\n    <h1>Open AI</h1>\n    <div class=\"desc_text\">To use GPT, you need an API Key from the <a :href=\"open_ai_api_url\" target=\"_blank\">Open\n      AI</a>\n    </div>\n\n    <div>\n      <el-input placeholder=\"sk-xxxx\" v-model=\"openai_key\" @change=\"onKeyChange('openai_key')\">\n        <template slot=\"prepend\">API Key:</template>\n      </el-input>\n    </div>\n\n    <div class=\"separator\">\n      GPT Model:\n      <el-radio-group v-model=\"gpt_model\" @change=\"onKeyChange('gpt_model')\">\n        <el-radio label=\"gpt-3.5-turbo\"></el-radio>\n        <el-radio label=\"gpt-4\"></el-radio>\n      </el-radio-group>\n    </div>\n\n    <div class=\"separator\">\n      <div class=\"desc_text\">GPT Prompt:</div>\n      <el-input type=\"textarea\" placeholder=\"You can setup custom prompt here\" :rows=\"5\"\n                v-model=\"gpt_system_prompt\" @change=\"onKeyChange('gpt_system_prompt')\"/>\n    </div>\n\n\n    <h1>Azure Speech Recognition</h1>\n    <div class=\"desc_text\">\n      We use Microsoft Azure's speech recognition service. You can apply for a free Azure token by referring to <a\n        :href=\"azure_application_url\" target=\"_blank\">this tutorial</a>:\n    </div>\n    <el-input placeholder=\"Input Your Azure Speech Resource Token (KEY 1)\" v-model=\"azure_token\"\n              @change=\"onKeyChange('azure_token')\">\n      <template slot=\"prepend\">Azure token:</template>\n    </el-input>\n    <div class=\"separator\"></div>\n    <el-input placeholder=\"e.g. eastasia\" v-model=\"azure_region\" @change=\"onKeyChange('azure_region')\">\n      <template slot=\"prepend\">Location/Region</template>\n    </el-input>\n    <div class=\"separator\"></div>\n    <el-input placeholder=\"e.g. en-US\" v-model=\"azure_language\" @change=\"onKeyChange('azure_language')\">\n      <template slot=\"prepend\">Recognition Language</template>\n    </el-input>\n\n    <div class=\"desc_text\">\n      <span style=\"text-decoration: gray\">zh-CN</span> for Chinese, See <a :href=\"full_language_codec_url\"\n                                                                           target=\"_blank\">here</a> for\n      other language codes\n    </div>\n\n<!--    <div>-->\n<!--      <el-button @click=\"toDef\">set all setting to default</el-button>-->\n<!--    </div>-->\n\n  </div>\n</template>\n\n<script>\nimport config_util from \"../utils/config_util\"\n\nexport default {\n  name: 'HelloWorld',\n  props: {},\n  data() {\n    return {\n      openai_key: \"\",\n      gpt_model: \"gpt-3.5-turbo\",\n      gpt_system_prompt: \"\",\n      azure_token: \"\",\n      azure_region: \"\",\n      azure_language: \"\",\n      open_ai_api_url: \"https://platform.openai.com/api-keys\",\n      github_url: \"https://github.com/interview-copilot/Interview-Copilot\",\n      azure_application_url: \"https://github.com/interview-copilot/Interview-Copilot/blob/main/docs/azure_speech_service_tutorial.md\",\n      full_language_codec_url: \"https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt#speech-to-text\"\n    }\n  },\n  mounted() {\n    this.openai_key = localStorage.getItem(\"openai_key\")\n    this.gpt_system_prompt = config_util.gpt_system_prompt()\n    this.gpt_model = config_util.gpt_model()\n    this.azure_token = localStorage.getItem(\"azure_token\")\n    this.azure_region = config_util.azure_region()\n    this.azure_language = config_util.azure_language()\n  },\n  methods: {\n    onKeyChange(key_name) {\n      console.log(\"setItem\", key_name, this[key_name])\n      localStorage.setItem(key_name, this[key_name])\n    },\n    toDef() {\n      localStorage.clear();\n    }\n  }\n\n\n}\n\n\n</script>\n<style scoped>\n\n.separator {\n  margin-top: 10px;\n}\n\n.desc_text {\n  color: gray;\n  font-size: small;\n  margin-bottom: 3px;\n}\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Setting.vue?vue&type=template&id=02aa43b1&scoped=true\"\nimport script from \"./Setting.vue?vue&type=script&lang=js\"\nexport * from \"./Setting.vue?vue&type=script&lang=js\"\nimport style0 from \"./Setting.vue?vue&type=style&index=0&id=02aa43b1&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"02aa43b1\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","github_url","open_ai_api_url","on","$event","onKeyChange","model","value","openai_key","callback","$$v","expression","slot","gpt_model","gpt_system_prompt","azure_application_url","azure_token","azure_region","azure_language","staticStyle","full_language_codec_url","staticRenderFns","name","props","data","mounted","localStorage","getItem","config_util","methods","key_name","console","log","setItem","toDef","clear","component"],"sourceRoot":""}