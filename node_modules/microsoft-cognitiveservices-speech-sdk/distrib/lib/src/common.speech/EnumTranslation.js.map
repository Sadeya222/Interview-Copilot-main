{"version":3,"sources":["src/common.speech/EnumTranslation.ts"],"names":[],"mappings":"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","file":"EnumTranslation.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    ResultReason\r\n} from \"../sdk/Exports.js\";\r\nimport { RecognitionStatus } from \"./Exports.js\";\r\n\r\nexport class EnumTranslation {\r\n    public static implTranslateRecognitionResult(recognitionStatus: RecognitionStatus): ResultReason {\r\n        let reason = ResultReason.Canceled;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n                reason = ResultReason.RecognizedSpeech;\r\n                break;\r\n            case RecognitionStatus.NoMatch:\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.EndOfDictation:\r\n                reason = ResultReason.NoMatch;\r\n                break;\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = ResultReason.Canceled;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelResult(recognitionStatus: RecognitionStatus): CancellationReason {\r\n        let reason = CancellationReason.EndOfStream;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Success:\r\n            case RecognitionStatus.EndOfDictation:\r\n            case RecognitionStatus.NoMatch:\r\n                reason = CancellationReason.EndOfStream;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n            case RecognitionStatus.BabbleTimeout:\r\n            case RecognitionStatus.Error:\r\n            case RecognitionStatus.BadRequest:\r\n            case RecognitionStatus.Forbidden:\r\n            default:\r\n                reason = CancellationReason.Error;\r\n                break;\r\n        }\r\n        return reason;\r\n    }\r\n\r\n    public static implTranslateCancelErrorCode(recognitionStatus: RecognitionStatus): CancellationErrorCode {\r\n        let reason: CancellationErrorCode = CancellationErrorCode.NoError;\r\n        switch (recognitionStatus) {\r\n            case RecognitionStatus.Error:\r\n                reason = CancellationErrorCode.ServiceError;\r\n                break;\r\n            case RecognitionStatus.TooManyRequests:\r\n                reason = CancellationErrorCode.TooManyRequests;\r\n                break;\r\n            case RecognitionStatus.BadRequest:\r\n                reason = CancellationErrorCode.BadRequestParameters;\r\n                break;\r\n            case RecognitionStatus.Forbidden:\r\n                reason = CancellationErrorCode.Forbidden;\r\n                break;\r\n            default:\r\n                reason = CancellationErrorCode.NoError;\r\n                break;\r\n        }\r\n\r\n        return reason;\r\n\r\n    }\r\n\r\n    public static implTranslateErrorDetails(cancellationErrorCode: CancellationErrorCode): string {\r\n        let errorDetails: string = \"The speech service encountered an internal error and could not continue.\";\r\n        switch (cancellationErrorCode) {\r\n            case CancellationErrorCode.Forbidden:\r\n                errorDetails = \"The recognizer is using a free subscription that ran out of quota.\";\r\n                break;\r\n            case CancellationErrorCode.BadRequestParameters:\r\n                errorDetails = \"Invalid parameter or unsupported audio format in the request.\";\r\n                break;\r\n            case CancellationErrorCode.TooManyRequests:\r\n                errorDetails = \"The number of parallel requests exceeded the number of allowed concurrent transcriptions.\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return errorDetails;\r\n    }\r\n\r\n}\r\n"]}