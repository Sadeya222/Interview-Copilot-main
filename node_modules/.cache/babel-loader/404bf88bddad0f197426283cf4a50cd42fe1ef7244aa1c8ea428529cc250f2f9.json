{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { InvalidOperationError } from \"../common/Error.js\";\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState.js\";\nexport class DialogServiceTurnStateManager {\n  constructor() {\n    this.privTurnMap = new Map();\n    return;\n  }\n  StartTurn(id) {\n    if (this.privTurnMap.has(id)) {\n      throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\n    }\n    const turnState = new DialogServiceTurnState(this, id);\n    this.privTurnMap.set(id, turnState);\n    return this.privTurnMap.get(id);\n  }\n  GetTurn(id) {\n    return this.privTurnMap.get(id);\n  }\n  CompleteTurn(id) {\n    if (!this.privTurnMap.has(id)) {\n      throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\n    }\n    const turnState = this.privTurnMap.get(id);\n    turnState.complete();\n    this.privTurnMap.delete(id);\n    return turnState;\n  }\n}","map":{"version":3,"names":["InvalidOperationError","DialogServiceTurnState","DialogServiceTurnStateManager","constructor","privTurnMap","Map","StartTurn","id","has","turnState","set","get","GetTurn","CompleteTurn","complete","delete"],"sources":["src/common.speech/DialogServiceTurnStateManager.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { InvalidOperationError } from \"../common/Error.js\";\r\nimport { DialogServiceTurnState } from \"./DialogServiceTurnState.js\";\r\n\r\nexport class DialogServiceTurnStateManager {\r\n    private privTurnMap: Map<string, DialogServiceTurnState>;\r\n\r\n    public constructor() {\r\n        this.privTurnMap = new Map<string, DialogServiceTurnState>();\r\n        return;\r\n    }\r\n\r\n    public StartTurn(id: string): DialogServiceTurnState {\r\n        if (this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: There is already a turn with id:\" + id);\r\n        }\r\n        const turnState: DialogServiceTurnState = new DialogServiceTurnState(this, id);\r\n        this.privTurnMap.set(id, turnState);\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public GetTurn(id: string): DialogServiceTurnState {\r\n        return this.privTurnMap.get(id);\r\n    }\r\n\r\n    public CompleteTurn(id: string): DialogServiceTurnState {\r\n        if (!this.privTurnMap.has(id)) {\r\n            throw new InvalidOperationError(\"Service error: Received turn end for an unknown turn id:\" + id);\r\n        }\r\n        const turnState = this.privTurnMap.get(id);\r\n        turnState.complete();\r\n        this.privTurnMap.delete(id);\r\n        return turnState;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,qBAAqB,QAAQ,oBAAoB;AAC1D,SAASC,sBAAsB,QAAQ,6BAA6B;AAEpE,OAAM,MAAOC,6BAA6B;EAGtCC,YAAA;IACI,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,EAAkC;IAC5D;EACJ;EAEOC,SAASA,CAACC,EAAU;IACvB,IAAI,IAAI,CAACH,WAAW,CAACI,GAAG,CAACD,EAAE,CAAC,EAAE;MAC1B,MAAM,IAAIP,qBAAqB,CAAC,iDAAiD,GAAGO,EAAE,CAAC;;IAE3F,MAAME,SAAS,GAA2B,IAAIR,sBAAsB,CAAC,IAAI,EAAEM,EAAE,CAAC;IAC9E,IAAI,CAACH,WAAW,CAACM,GAAG,CAACH,EAAE,EAAEE,SAAS,CAAC;IACnC,OAAO,IAAI,CAACL,WAAW,CAACO,GAAG,CAACJ,EAAE,CAAC;EACnC;EAEOK,OAAOA,CAACL,EAAU;IACrB,OAAO,IAAI,CAACH,WAAW,CAACO,GAAG,CAACJ,EAAE,CAAC;EACnC;EAEOM,YAAYA,CAACN,EAAU;IAC1B,IAAI,CAAC,IAAI,CAACH,WAAW,CAACI,GAAG,CAACD,EAAE,CAAC,EAAE;MAC3B,MAAM,IAAIP,qBAAqB,CAAC,0DAA0D,GAAGO,EAAE,CAAC;;IAEpG,MAAME,SAAS,GAAG,IAAI,CAACL,WAAW,CAACO,GAAG,CAACJ,EAAE,CAAC;IAC1CE,SAAS,CAACK,QAAQ,EAAE;IACpB,IAAI,CAACV,WAAW,CAACW,MAAM,CAACR,EAAE,CAAC;IAC3B,OAAOE,SAAS;EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}