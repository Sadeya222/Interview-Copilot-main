{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/**\n * Allows additions of new phrases to improve speech recognition.\n *\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\n * to the speech service.\n */\nexport class PhraseListGrammar {\n  constructor(recogBase) {\n    this.privGrammerBuilder = recogBase.dynamicGrammar;\n  }\n  /**\n   * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\n   * @param recognizer The recognizer to add phrase lists to.\n   */\n  static fromRecognizer(recognizer) {\n    const recoBase = recognizer.internalData;\n    return new PhraseListGrammar(recoBase);\n  }\n  /**\n   * Adds a single phrase to the current recognizer.\n   * @param phrase Phrase to add.\n   */\n  addPhrase(phrase) {\n    this.privGrammerBuilder.addPhrase(phrase);\n  }\n  /**\n   * Adds multiple phrases to the current recognizer.\n   * @param phrases Array of phrases to add.\n   */\n  addPhrases(phrases) {\n    this.privGrammerBuilder.addPhrase(phrases);\n  }\n  /**\n   * Clears all phrases added to the current recognizer.\n   */\n  clear() {\n    this.privGrammerBuilder.clearPhrases();\n  }\n}","map":{"version":3,"names":["PhraseListGrammar","constructor","recogBase","privGrammerBuilder","dynamicGrammar","fromRecognizer","recognizer","recoBase","internalData","addPhrase","phrase","addPhrases","phrases","clear","clearPhrases"],"sources":["src/sdk/PhraseListGrammar.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    DynamicGrammarBuilder,\r\n    ServiceRecognizerBase,\r\n} from \"../common.speech/Exports.js\";\r\nimport {\r\n    ConversationTranscriber,\r\n    MeetingTranscriber,\r\n    Recognizer\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Allows additions of new phrases to improve speech recognition.\r\n *\r\n * Phrases added to the recognizer are effective at the start of the next recognition, or the next time the SpeechSDK must reconnect\r\n * to the speech service.\r\n */\r\nexport class PhraseListGrammar {\r\n    private privGrammerBuilder: DynamicGrammarBuilder;\r\n\r\n    private constructor(recogBase: ServiceRecognizerBase) {\r\n        this.privGrammerBuilder = recogBase.dynamicGrammar;\r\n    }\r\n\r\n    /**\r\n     * Creates a PhraseListGrammar from a given speech recognizer. Will accept any recognizer that derives from @class Recognizer.\r\n     * @param recognizer The recognizer to add phrase lists to.\r\n     */\r\n    public static fromRecognizer(recognizer: Recognizer | ConversationTranscriber | MeetingTranscriber): PhraseListGrammar {\r\n        const recoBase = recognizer.internalData as ServiceRecognizerBase;\r\n        return new PhraseListGrammar(recoBase);\r\n    }\r\n\r\n    /**\r\n     * Adds a single phrase to the current recognizer.\r\n     * @param phrase Phrase to add.\r\n     */\r\n    public addPhrase(phrase: string): void {\r\n        this.privGrammerBuilder.addPhrase(phrase);\r\n    }\r\n\r\n    /**\r\n     * Adds multiple phrases to the current recognizer.\r\n     * @param phrases Array of phrases to add.\r\n     */\r\n    public addPhrases(phrases: string[]): void {\r\n        this.privGrammerBuilder.addPhrase(phrases);\r\n    }\r\n\r\n    /**\r\n     * Clears all phrases added to the current recognizer.\r\n     */\r\n    public clear(): void {\r\n        this.privGrammerBuilder.clearPhrases();\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAYA;;;;;;AAMA,OAAM,MAAOA,iBAAiB;EAG1BC,YAAoBC,SAAgC;IAChD,IAAI,CAACC,kBAAkB,GAAGD,SAAS,CAACE,cAAc;EACtD;EAEA;;;;EAIO,OAAOC,cAAcA,CAACC,UAAqE;IAC9F,MAAMC,QAAQ,GAAGD,UAAU,CAACE,YAAqC;IACjE,OAAO,IAAIR,iBAAiB,CAACO,QAAQ,CAAC;EAC1C;EAEA;;;;EAIOE,SAASA,CAACC,MAAc;IAC3B,IAAI,CAACP,kBAAkB,CAACM,SAAS,CAACC,MAAM,CAAC;EAC7C;EAEA;;;;EAIOC,UAAUA,CAACC,OAAiB;IAC/B,IAAI,CAACT,kBAAkB,CAACM,SAAS,CAACG,OAAO,CAAC;EAC9C;EAEA;;;EAGOC,KAAKA,CAAA;IACR,IAAI,CAACV,kBAAkB,CAACW,YAAY,EAAE;EAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}