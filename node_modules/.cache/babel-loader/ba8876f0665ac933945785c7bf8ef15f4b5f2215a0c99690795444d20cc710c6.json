{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class TurnStatusResponsePayload {\n  constructor(json) {\n    this.privMessageStatusResponse = JSON.parse(json);\n  }\n  static fromJSON(json) {\n    return new TurnStatusResponsePayload(json);\n  }\n  get interactionId() {\n    return this.privMessageStatusResponse.interactionId;\n  }\n  get conversationId() {\n    return this.privMessageStatusResponse.conversationId;\n  }\n  get statusCode() {\n    // Payloads may contain a limited set of textual representations or a numeric status\n    // code. The textual values are here converted into numeric ones.\n    switch (this.privMessageStatusResponse.statusCode) {\n      case \"Success\":\n        return 200;\n      case \"Failed\":\n        return 400;\n      case \"TimedOut\":\n        return 429;\n      default:\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return this.privMessageStatusResponse.statusCode;\n    }\n  }\n}","map":{"version":3,"names":["TurnStatusResponsePayload","constructor","json","privMessageStatusResponse","JSON","parse","fromJSON","interactionId","conversationId","statusCode"],"sources":["src/common.speech/ServiceMessages/TurnStatusPayload.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nexport interface ITurnStatusResponsePayload {\r\n    interactionId: string;\r\n    conversationId: string;\r\n    statusCode: any;\r\n}\r\n\r\nexport class TurnStatusResponsePayload implements ITurnStatusResponsePayload {\r\n    private privMessageStatusResponse: ITurnStatusResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privMessageStatusResponse = JSON.parse(json) as ITurnStatusResponsePayload;\r\n    }\r\n\r\n    public static fromJSON(json: string): TurnStatusResponsePayload {\r\n        return new TurnStatusResponsePayload(json);\r\n    }\r\n\r\n    public get interactionId(): string {\r\n        return this.privMessageStatusResponse.interactionId;\r\n    }\r\n\r\n    public get conversationId(): string {\r\n        return this.privMessageStatusResponse.conversationId;\r\n    }\r\n\r\n    public get statusCode(): any {\r\n        // Payloads may contain a limited set of textual representations or a numeric status\r\n        // code. The textual values are here converted into numeric ones.\r\n        switch (this.privMessageStatusResponse.statusCode) {\r\n            case \"Success\":\r\n                return 200;\r\n            case \"Failed\":\r\n                return 400;\r\n            case \"TimedOut\":\r\n                return 429;\r\n            default:\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n                return this.privMessageStatusResponse.statusCode;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAQA,OAAM,MAAOA,yBAAyB;EAGlCC,YAAoBC,IAAY;IAC5B,IAAI,CAACC,yBAAyB,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAA+B;EACnF;EAEO,OAAOI,QAAQA,CAACJ,IAAY;IAC/B,OAAO,IAAIF,yBAAyB,CAACE,IAAI,CAAC;EAC9C;EAEA,IAAWK,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACJ,yBAAyB,CAACI,aAAa;EACvD;EAEA,IAAWC,cAAcA,CAAA;IACrB,OAAO,IAAI,CAACL,yBAAyB,CAACK,cAAc;EACxD;EAEA,IAAWC,UAAUA,CAAA;IACjB;IACA;IACA,QAAQ,IAAI,CAACN,yBAAyB,CAACM,UAAU;MAC7C,KAAK,SAAS;QACV,OAAO,GAAG;MACd,KAAK,QAAQ;QACT,OAAO,GAAG;MACd,KAAK,UAAU;QACX,OAAO,GAAG;MACd;QACI;QACA,OAAO,IAAI,CAACN,yBAAyB,CAACM,UAAU;;EAE5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}