{"ast":null,"code":"import config_util from \"../utils/config_util\";\nexport default {\n  name: 'HelloWorld',\n  props: {},\n  data() {\n    return {\n      openai_key: \"\",\n      gpt_model: \"gpt-3.5-turbo\",\n      gpt_system_prompt: \"\",\n      azure_token: \"\",\n      azure_region: \"\",\n      azure_language: \"\",\n      open_ai_api_url: \"https://platform.openai.com/api-keys\",\n      github_url: \"https://github.com/interview-copilot/Interview-Copilot\",\n      azure_application_url: \"https://github.com/interview-copilot/Interview-Copilot/blob/main/docs/azure_speech_service_tutorial.md\",\n      full_language_codec_url: \"https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt#speech-to-text\"\n    };\n  },\n  mounted() {\n    this.openai_key = localStorage.getItem(\"openai_key\");\n    this.gpt_system_prompt = config_util.gpt_system_prompt();\n    this.gpt_model = config_util.gpt_model();\n    this.azure_token = localStorage.getItem(\"azure_token\");\n    this.azure_region = config_util.azure_region();\n    this.azure_language = config_util.azure_language();\n  },\n  methods: {\n    onKeyChange(key_name) {\n      console.log(\"setItem\", key_name, this[key_name]);\n      localStorage.setItem(key_name, this[key_name]);\n    },\n    toDef() {\n      localStorage.clear();\n    }\n  }\n};","map":{"version":3,"names":["config_util","name","props","data","openai_key","gpt_model","gpt_system_prompt","azure_token","azure_region","azure_language","open_ai_api_url","github_url","azure_application_url","full_language_codec_url","mounted","localStorage","getItem","methods","onKeyChange","key_name","console","log","setItem","toDef","clear"],"sources":["src/views/Setting.vue"],"sourcesContent":["<template>\n  <div>\n\n    <div class=\"desc_text\">\n      The following settings are only retained locally in your browser.\n      See <a :href=\"github_url\" target=\"_blank\">Github</a> for setup instructions.\n    </div>\n\n    <h1>Open AI</h1>\n    <div class=\"desc_text\">To use GPT, you need an API Key from the <a :href=\"open_ai_api_url\" target=\"_blank\">Open\n      AI</a>\n    </div>\n\n    <div>\n      <el-input placeholder=\"sk-xxxx\" v-model=\"openai_key\" @change=\"onKeyChange('openai_key')\">\n        <template slot=\"prepend\">API Key:</template>\n      </el-input>\n    </div>\n\n    <div class=\"separator\">\n      GPT Model:\n      <el-radio-group v-model=\"gpt_model\" @change=\"onKeyChange('gpt_model')\">\n        <el-radio label=\"gpt-3.5-turbo\"></el-radio>\n        <el-radio label=\"gpt-4\"></el-radio>\n      </el-radio-group>\n    </div>\n\n    <div class=\"separator\">\n      <div class=\"desc_text\">GPT Prompt:</div>\n      <el-input type=\"textarea\" placeholder=\"You can setup custom prompt here\" :rows=\"5\"\n                v-model=\"gpt_system_prompt\" @change=\"onKeyChange('gpt_system_prompt')\"/>\n    </div>\n\n\n    <h1>Azure Speech Recognition</h1>\n    <div class=\"desc_text\">\n      We use Microsoft Azure's speech recognition service. You can apply for a free Azure token by referring to <a\n        :href=\"azure_application_url\" target=\"_blank\">this tutorial</a>:\n    </div>\n    <el-input placeholder=\"Input Your Azure Speech Resource Token (KEY 1)\" v-model=\"azure_token\"\n              @change=\"onKeyChange('azure_token')\">\n      <template slot=\"prepend\">Azure token:</template>\n    </el-input>\n    <div class=\"separator\"></div>\n    <el-input placeholder=\"e.g. eastasia\" v-model=\"azure_region\" @change=\"onKeyChange('azure_region')\">\n      <template slot=\"prepend\">Location/Region</template>\n    </el-input>\n    <div class=\"separator\"></div>\n    <el-input placeholder=\"e.g. en-US\" v-model=\"azure_language\" @change=\"onKeyChange('azure_language')\">\n      <template slot=\"prepend\">Recognition Language</template>\n    </el-input>\n\n    <div class=\"desc_text\">\n      <span style=\"text-decoration: gray\">zh-CN</span> for Chinese, See <a :href=\"full_language_codec_url\"\n                                                                           target=\"_blank\">here</a> for\n      other language codes\n    </div>\n\n<!--    <div>-->\n<!--      <el-button @click=\"toDef\">set all setting to default</el-button>-->\n<!--    </div>-->\n\n  </div>\n</template>\n\n<script>\nimport config_util from \"../utils/config_util\"\n\nexport default {\n  name: 'HelloWorld',\n  props: {},\n  data() {\n    return {\n      openai_key: \"\",\n      gpt_model: \"gpt-3.5-turbo\",\n      gpt_system_prompt: \"\",\n      azure_token: \"\",\n      azure_region: \"\",\n      azure_language: \"\",\n      open_ai_api_url: \"https://platform.openai.com/api-keys\",\n      github_url: \"https://github.com/interview-copilot/Interview-Copilot\",\n      azure_application_url: \"https://github.com/interview-copilot/Interview-Copilot/blob/main/docs/azure_speech_service_tutorial.md\",\n      full_language_codec_url: \"https://learn.microsoft.com/en-us/azure/ai-services/speech-service/language-support?tabs=stt#speech-to-text\"\n    }\n  },\n  mounted() {\n    this.openai_key = localStorage.getItem(\"openai_key\")\n    this.gpt_system_prompt = config_util.gpt_system_prompt()\n    this.gpt_model = config_util.gpt_model()\n    this.azure_token = localStorage.getItem(\"azure_token\")\n    this.azure_region = config_util.azure_region()\n    this.azure_language = config_util.azure_language()\n  },\n  methods: {\n    onKeyChange(key_name) {\n      console.log(\"setItem\", key_name, this[key_name])\n      localStorage.setItem(key_name, this[key_name])\n    },\n    toDef() {\n      localStorage.clear();\n    }\n  }\n\n\n}\n\n\n</script>\n<style scoped>\n\n.separator {\n  margin-top: 10px;\n}\n\n.desc_text {\n  color: gray;\n  font-size: small;\n  margin-bottom: 3px;\n}\n\n</style>\n"],"mappings":"AAkEA,OAAAA,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,SAAA;MACAC,iBAAA;MACAC,WAAA;MACAC,YAAA;MACAC,cAAA;MACAC,eAAA;MACAC,UAAA;MACAC,qBAAA;MACAC,uBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAV,UAAA,GAAAW,YAAA,CAAAC,OAAA;IACA,KAAAV,iBAAA,GAAAN,WAAA,CAAAM,iBAAA;IACA,KAAAD,SAAA,GAAAL,WAAA,CAAAK,SAAA;IACA,KAAAE,WAAA,GAAAQ,YAAA,CAAAC,OAAA;IACA,KAAAR,YAAA,GAAAR,WAAA,CAAAQ,YAAA;IACA,KAAAC,cAAA,GAAAT,WAAA,CAAAS,cAAA;EACA;EACAQ,OAAA;IACAC,YAAAC,QAAA;MACAC,OAAA,CAAAC,GAAA,YAAAF,QAAA,OAAAA,QAAA;MACAJ,YAAA,CAAAO,OAAA,CAAAH,QAAA,OAAAA,QAAA;IACA;IACAI,MAAA;MACAR,YAAA,CAAAS,KAAA;IACA;EACA;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}