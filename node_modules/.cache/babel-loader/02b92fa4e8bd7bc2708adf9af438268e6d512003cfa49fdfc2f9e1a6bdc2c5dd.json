{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\n/**\n * Defines a coordinate in 2D space.\n * @class Coordinate\n * Added in version 1.33.0\n */\nexport class Coordinate {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n/**\n * Defines the avatar output video format.\n * @class AvatarVideoFormat\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nexport class AvatarVideoFormat {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} codec - The video codec.\n   * @param {number} bitrate - The video bitrate.\n   * @param {number} width - The video width.\n   * @param {number} height - The video height.\n   */\n  constructor(codec = \"H264\", bitrate = 2000000, width = 1920, height = 1080) {\n    this.codec = codec;\n    this.bitrate = bitrate;\n    this.width = width;\n    this.height = height;\n  }\n  /**\n   * Sets the video crop range.\n   */\n  setCropRange(topLeft, bottomRight) {\n    this.cropRange = {\n      bottomRight,\n      topLeft\n    };\n  }\n}","map":{"version":3,"names":["Coordinate","constructor","x","y","AvatarVideoFormat","codec","bitrate","width","height","setCropRange","topLeft","bottomRight","cropRange"],"sources":["src/sdk/AvatarVideoFormat.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\n/**\r\n * Defines a coordinate in 2D space.\r\n * @class Coordinate\r\n * Added in version 1.33.0\r\n */\r\nexport class Coordinate {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines the avatar output video format.\r\n * @class AvatarVideoFormat\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change in the future.\r\n */\r\nexport class AvatarVideoFormat {\r\n    /**\r\n     * Defines the video codec.\r\n     * @default \"H264\"\r\n     */\r\n    public codec: string;\r\n    /**\r\n     * Defines the video bitrate.\r\n     * @default 2000000\r\n     */\r\n    public bitrate: number;\r\n    /**\r\n     * Defines the video width.\r\n     * @default 1920\r\n     */\r\n    public width: number;\r\n    /**\r\n     * Defines the video height.\r\n     * @default 1080\r\n     */\r\n    public height: number;\r\n\r\n    /**\r\n     * Sets the video crop range.\r\n     */\r\n    public setCropRange(topLeft: Coordinate, bottomRight: Coordinate): void {\r\n        this.cropRange = {\r\n            bottomRight,\r\n            topLeft,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Defines the video crop range.\r\n     * @default undefined\r\n     * @internal\r\n     */\r\n    public cropRange: {\r\n        topLeft: Coordinate;\r\n        bottomRight: Coordinate;\r\n    };\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} codec - The video codec.\r\n     * @param {number} bitrate - The video bitrate.\r\n     * @param {number} width - The video width.\r\n     * @param {number} height - The video height.\r\n     */\r\n    public constructor(codec: string = \"H264\",\r\n                       bitrate: number = 2000000,\r\n                       width: number = 1920,\r\n                       height: number = 1080,\r\n    ) {\r\n        this.codec = codec;\r\n        this.bitrate = bitrate;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA;AAEA;;;;;AAKA,OAAM,MAAOA,UAAU;EAInBC,YAAmBC,CAAS,EAAEC,CAAS;IACnC,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EACd;;AAGJ;;;;;;;AAOA,OAAM,MAAOC,iBAAiB;EA0C1B;;;;;;;;EAQAH,YAAmBI,KAAA,GAAgB,MAAM,EACtBC,OAAA,GAAkB,OAAO,EACzBC,KAAA,GAAgB,IAAI,EACpBC,MAAA,GAAiB,IAAI;IAEpC,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EArCA;;;EAGOC,YAAYA,CAACC,OAAmB,EAAEC,WAAuB;IAC5D,IAAI,CAACC,SAAS,GAAG;MACbD,WAAW;MACXD;KACH;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}