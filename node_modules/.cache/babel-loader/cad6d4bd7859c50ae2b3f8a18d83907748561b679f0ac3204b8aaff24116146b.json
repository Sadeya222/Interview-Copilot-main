{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Runs extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.steps = new StepsAPI.Steps(this._client);\n  }\n  /**\n   * Create a run.\n   */\n  create(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a run.\n   */\n  retrieve(threadId, runId, options) {\n    return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a run.\n   */\n  update(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  list(threadId, query = {}, options) {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, {}, query);\n    }\n    return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Cancels a run that is `in_progress`.\n   */\n  cancel(threadId, runId, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * When a run has the `status: \"requires_action\"` and `required_action.type` is\n   * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n   * tool calls once they're all completed. All outputs must be submitted in a single\n   * request.\n   */\n  submitToolOutputs(threadId, runId, body, options) {\n    return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\nexport class RunsPage extends CursorPage {}\n(function (Runs) {\n  Runs.RunsPage = RunsAPI.RunsPage;\n  Runs.Steps = StepsAPI.Steps;\n  Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs || (Runs = {}));","map":{"version":3,"names":["APIResource","isRequestOptions","RunsAPI","StepsAPI","CursorPage","Runs","constructor","steps","Steps","_client","create","threadId","body","options","post","headers","retrieve","runId","get","update","list","query","getAPIList","RunsPage","cancel","submitToolOutputs","RunStepsPage"],"sources":["../../../../src/resources/beta/threads/runs/runs.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}