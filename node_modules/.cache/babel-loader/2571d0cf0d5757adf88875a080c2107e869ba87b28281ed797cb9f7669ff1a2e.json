{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SpeechHypothesis {\n  constructor(json) {\n    this.privSpeechHypothesis = JSON.parse(json);\n  }\n  static fromJSON(json) {\n    return new SpeechHypothesis(json);\n  }\n  get Text() {\n    return this.privSpeechHypothesis.Text;\n  }\n  get Offset() {\n    return this.privSpeechHypothesis.Offset;\n  }\n  get Duration() {\n    return this.privSpeechHypothesis.Duration;\n  }\n  get Language() {\n    return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\n  }\n  get LanguageDetectionConfidence() {\n    return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\n  }\n  get SpeakerId() {\n    return this.privSpeechHypothesis.SpeakerId;\n  }\n}","map":{"version":3,"names":["SpeechHypothesis","constructor","json","privSpeechHypothesis","JSON","parse","fromJSON","Text","Offset","Duration","Language","PrimaryLanguage","undefined","LanguageDetectionConfidence","Confidence","SpeakerId"],"sources":["src/common.speech/ServiceMessages/SpeechHypothesis.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IPrimaryLanguage } from \"./SimpleSpeechPhrase.js\";\r\n\r\n// speech.hypothesis\r\nexport interface ISpeechHypothesis {\r\n    Text: string;\r\n    Offset: number;\r\n    Duration: number;\r\n    PrimaryLanguage?: IPrimaryLanguage;\r\n    SpeakerId?: string;\r\n}\r\n\r\nexport class SpeechHypothesis implements ISpeechHypothesis {\r\n    private privSpeechHypothesis: ISpeechHypothesis;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechHypothesis = JSON.parse(json) as ISpeechHypothesis;\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechHypothesis {\r\n        return new SpeechHypothesis(json);\r\n    }\r\n\r\n    public get Text(): string {\r\n        return this.privSpeechHypothesis.Text;\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechHypothesis.Offset;\r\n    }\r\n\r\n    public get Duration(): number {\r\n        return this.privSpeechHypothesis.Duration;\r\n    }\r\n\r\n    public get Language(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Language;\r\n    }\r\n\r\n    public get LanguageDetectionConfidence(): string {\r\n        return this.privSpeechHypothesis.PrimaryLanguage === undefined ? undefined : this.privSpeechHypothesis.PrimaryLanguage.Confidence;\r\n    }\r\n\r\n    public get SpeakerId(): string {\r\n        return this.privSpeechHypothesis.SpeakerId;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAaA,OAAM,MAAOA,gBAAgB;EAGzBC,YAAoBC,IAAY;IAC5B,IAAI,CAACC,oBAAoB,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAsB;EACrE;EAEO,OAAOI,QAAQA,CAACJ,IAAY;IAC/B,OAAO,IAAIF,gBAAgB,CAACE,IAAI,CAAC;EACrC;EAEA,IAAWK,IAAIA,CAAA;IACX,OAAO,IAAI,CAACJ,oBAAoB,CAACI,IAAI;EACzC;EAEA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACL,oBAAoB,CAACK,MAAM;EAC3C;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACN,oBAAoB,CAACM,QAAQ;EAC7C;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACP,oBAAoB,CAACQ,eAAe,KAAKC,SAAS,GAAGA,SAAS,GAAG,IAAI,CAACT,oBAAoB,CAACQ,eAAe,CAACD,QAAQ;EACnI;EAEA,IAAWG,2BAA2BA,CAAA;IAClC,OAAO,IAAI,CAACV,oBAAoB,CAACQ,eAAe,KAAKC,SAAS,GAAGA,SAAS,GAAG,IAAI,CAACT,oBAAoB,CAACQ,eAAe,CAACG,UAAU;EACrI;EAEA,IAAWC,SAASA,CAAA;IAChB,OAAO,IAAI,CAACZ,oBAAoB,CAACY,SAAS;EAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}