{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SpeechRecognitionResult } from \"./Exports.js\";\n/**\n * Translation text result.\n * @class TranslationRecognitionResult\n */\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {Translations} translations - The translations.\n   * @param {string} resultId - The result id.\n   * @param {ResultReason} reason - The reason.\n   * @param {string} text - The recognized text.\n   * @param {number} duration - The duration.\n   * @param {number} offset - The offset into the stream.\n   * @param {string} language - Primary Language detected, if provided.\n   * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\n   * @param {string} errorDetails - Error details, if provided.\n   * @param {string} json - Additional Json, if provided.\n   * @param {PropertyCollection} properties - Additional properties, if provided.\n   */\n  constructor(translations, resultId, reason, text, duration, offset, language, languageDetectionConfidence, errorDetails, json, properties) {\n    super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\n    this.privTranslations = translations;\n  }\n  static fromSpeechRecognitionResult(result) {\n    return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\n  }\n  /**\n   * Presents the translation results. Each item in the dictionary represents\n   * a translation result in one of target languages, where the key is the name\n   * of the target language, in BCP-47 format, and the value is the translation\n   * text in the specified language.\n   * @member TranslationRecognitionResult.prototype.translations\n   * @function\n   * @public\n   * @returns {Translations} the current translation map that holds all translations requested.\n   */\n  get translations() {\n    return this.privTranslations;\n  }\n}","map":{"version":3,"names":["SpeechRecognitionResult","TranslationRecognitionResult","constructor","translations","resultId","reason","text","duration","offset","language","languageDetectionConfidence","errorDetails","json","properties","undefined","privTranslations","fromSpeechRecognitionResult","result"],"sources":["src/sdk/TranslationRecognitionResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection, ResultReason, SpeechRecognitionResult, Translations } from \"./Exports.js\";\r\n\r\n/**\r\n * Translation text result.\r\n * @class TranslationRecognitionResult\r\n */\r\nexport class TranslationRecognitionResult extends SpeechRecognitionResult {\r\n    private privTranslations: Translations;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {Translations} translations - The translations.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} text - The recognized text.\r\n     * @param {number} duration - The duration.\r\n     * @param {number} offset - The offset into the stream.\r\n     * @param {string} language - Primary Language detected, if provided.\r\n     * @param {string} languageDetectionConfidence - Primary Language confidence (\"Unknown,\" \"Low,\" \"Medium,\" \"High\"...), if provided.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {string} json - Additional Json, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(translations: Translations, resultId?: string, reason?: ResultReason,\r\n                       text?: string, duration?: number, offset?: number, language?: string,\r\n                       languageDetectionConfidence?: string, errorDetails?: string,\r\n                       json?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, text, duration, offset, language, languageDetectionConfidence, undefined, errorDetails, json, properties);\r\n\r\n        this.privTranslations = translations;\r\n    }\r\n\r\n    public static fromSpeechRecognitionResult(result: SpeechRecognitionResult): TranslationRecognitionResult {\r\n        return new TranslationRecognitionResult(undefined, result.resultId, result.reason, result.text, result.duration, result.offset, result.language, result.languageDetectionConfidence, result.errorDetails, result.json, result.properties);\r\n    }\r\n\r\n    /**\r\n     * Presents the translation results. Each item in the dictionary represents\r\n     * a translation result in one of target languages, where the key is the name\r\n     * of the target language, in BCP-47 format, and the value is the translation\r\n     * text in the specified language.\r\n     * @member TranslationRecognitionResult.prototype.translations\r\n     * @function\r\n     * @public\r\n     * @returns {Translations} the current translation map that holds all translations requested.\r\n     */\r\n    public get translations(): Translations {\r\n        return this.privTranslations;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAA2CA,uBAAuB,QAAsB,cAAc;AAEtG;;;;AAIA,OAAM,MAAOC,4BAA6B,SAAQD,uBAAuB;EAGrE;;;;;;;;;;;;;;;EAeAE,YAAmBC,YAA0B,EAAEC,QAAiB,EAAEC,MAAqB,EACpEC,IAAa,EAAEC,QAAiB,EAAEC,MAAe,EAAEC,QAAiB,EACpEC,2BAAoC,EAAEC,YAAqB,EAC3DC,IAAa,EAAEC,UAA+B;IAC7D,KAAK,CAACT,QAAQ,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,2BAA2B,EAAEI,SAAS,EAAEH,YAAY,EAAEC,IAAI,EAAEC,UAAU,CAAC;IAEjI,IAAI,CAACE,gBAAgB,GAAGZ,YAAY;EACxC;EAEO,OAAOa,2BAA2BA,CAACC,MAA+B;IACrE,OAAO,IAAIhB,4BAA4B,CAACa,SAAS,EAAEG,MAAM,CAACb,QAAQ,EAAEa,MAAM,CAACZ,MAAM,EAAEY,MAAM,CAACX,IAAI,EAAEW,MAAM,CAACV,QAAQ,EAAEU,MAAM,CAACT,MAAM,EAAES,MAAM,CAACR,QAAQ,EAAEQ,MAAM,CAACP,2BAA2B,EAAEO,MAAM,CAACN,YAAY,EAAEM,MAAM,CAACL,IAAI,EAAEK,MAAM,CAACJ,UAAU,CAAC;EAC7O;EAEA;;;;;;;;;;EAUA,IAAWV,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACY,gBAAgB;EAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}