{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { SynthesisResult } from \"./Exports.js\";\n/**\n * Defines the avatar WebRTC connection result.\n * @class AvatarWebRTCConnectionResult\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change in the future.\n */\nexport class AvatarWebRTCConnectionResult extends SynthesisResult {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\n   * @param {string} resultId - The result id.\n   * @param {ResultReason} reason - The reason.\n   * @param {string} errorDetails - Error details, if provided.\n   * @param {PropertyCollection} properties - Additional properties, if provided.\n   */\n  constructor(SDPAnswer, resultId, reason, errorDetails, properties) {\n    super(resultId, reason, errorDetails, properties);\n    this.privSDPAnswer = SDPAnswer;\n  }\n  /**\n   * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\n   * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\n   * @function\n   * @public\n   * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\n   */\n  get SDPAnswer() {\n    return this.privSDPAnswer;\n  }\n}","map":{"version":3,"names":["SynthesisResult","AvatarWebRTCConnectionResult","constructor","SDPAnswer","resultId","reason","errorDetails","properties","privSDPAnswer"],"sources":["src/sdk/AvatarWebRTCConnectionResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    ResultReason,\r\n    PropertyCollection,\r\n    SynthesisResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines the avatar WebRTC connection result.\r\n * @class AvatarWebRTCConnectionResult\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change in the future.\r\n */\r\nexport class AvatarWebRTCConnectionResult extends SynthesisResult {\r\n    private readonly privSDPAnswer: RTCSessionDescriptionInit;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {RTCSessionDescriptionInit} SDPAnswer - The SDP answer of WebRTC connection.\r\n     * @param {string} resultId - The result id.\r\n     * @param {ResultReason} reason - The reason.\r\n     * @param {string} errorDetails - Error details, if provided.\r\n     * @param {PropertyCollection} properties - Additional properties, if provided.\r\n     */\r\n    public constructor(SDPAnswer?: RTCSessionDescriptionInit, resultId?: string, reason?: ResultReason, errorDetails?: string, properties?: PropertyCollection) {\r\n        super(resultId, reason, errorDetails, properties);\r\n        this.privSDPAnswer = SDPAnswer;\r\n    }\r\n\r\n    /**\r\n     * Specifies SDP (Session Description Protocol) answer of WebRTC connection.\r\n     * @member AvatarWebRTCConnectionResult.prototype.SDPAnswer\r\n     * @function\r\n     * @public\r\n     * @returns {RTCSessionDescriptionInit} Specifies the SDP answer of WebRTC connection.\r\n     */\r\n    public get SDPAnswer(): RTCSessionDescriptionInit {\r\n        return this.privSDPAnswer;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAGIA,eAAe,QACZ,cAAc;AAErB;;;;;;;AAOA,OAAM,MAAOC,4BAA6B,SAAQD,eAAe;EAG7D;;;;;;;;;EASAE,YAAmBC,SAAqC,EAAEC,QAAiB,EAAEC,MAAqB,EAAEC,YAAqB,EAAEC,UAA+B;IACtJ,KAAK,CAACH,QAAQ,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,CAAC;IACjD,IAAI,CAACC,aAAa,GAAGL,SAAS;EAClC;EAEA;;;;;;;EAOA,IAAWA,SAASA,CAAA;IAChB,OAAO,IAAI,CAACK,aAAa;EAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}