{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts.js\";\nimport { AvatarVideoFormat } from \"./Exports.js\";\n/**\n * Defines the talking avatar configuration.\n * @class AvatarConfig\n * Added in version 1.33.0\n *\n * @experimental This feature is experimental and might change or have limited support.\n */\nexport class AvatarConfig {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {string} character - The avatar character.\n   * @param {string} style - The avatar style.\n   * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\n   */\n  constructor(character, style, videoFormat) {\n    this.privCustomized = false;\n    Contracts.throwIfNullOrWhitespace(character, \"character\");\n    this.character = character;\n    this.style = style;\n    if (videoFormat === undefined) {\n      videoFormat = new AvatarVideoFormat();\n    }\n    this.videoFormat = videoFormat;\n  }\n  /**\n   * Indicates if the talking avatar is customized.\n   */\n  get customized() {\n    return this.privCustomized;\n  }\n  /**\n   * Sets if the talking avatar is customized.\n   */\n  set customized(value) {\n    this.privCustomized = value;\n  }\n  /**\n   * Sets the background color.\n   */\n  get backgroundColor() {\n    return this.privBackgroundColor;\n  }\n  /**\n   * Gets the background color.\n   */\n  set backgroundColor(value) {\n    this.privBackgroundColor = value;\n  }\n}","map":{"version":3,"names":["Contracts","AvatarVideoFormat","AvatarConfig","constructor","character","style","videoFormat","privCustomized","throwIfNullOrWhitespace","undefined","customized","value","backgroundColor","privBackgroundColor"],"sources":["src/sdk/AvatarConfig.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { AvatarVideoFormat } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines the talking avatar configuration.\r\n * @class AvatarConfig\r\n * Added in version 1.33.0\r\n *\r\n * @experimental This feature is experimental and might change or have limited support.\r\n */\r\nexport class AvatarConfig {\r\n    private privCustomized: boolean = false;\r\n    private privBackgroundColor: string;\r\n\r\n    /**\r\n     * Defines the avatar character.\r\n     */\r\n    public character: string;\r\n    /**\r\n     * Defines the avatar style.\r\n     */\r\n    public style: string;\r\n    /**\r\n     * Defines the talking avatar output video format.\r\n     */\r\n    public videoFormat: AvatarVideoFormat;\r\n\r\n    /**\r\n     * Indicates if the talking avatar is customized.\r\n     */\r\n    public get customized(): boolean {\r\n        return this.privCustomized;\r\n    }\r\n\r\n    /**\r\n     * Sets if the talking avatar is customized.\r\n     */\r\n    public set customized(value: boolean) {\r\n        this.privCustomized = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the background color.\r\n     */\r\n    public get backgroundColor(): string {\r\n        return this.privBackgroundColor;\r\n    }\r\n\r\n    /**\r\n     * Gets the background color.\r\n     */\r\n    public set backgroundColor(value: string) {\r\n        this.privBackgroundColor = value;\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {string} character - The avatar character.\r\n     * @param {string} style - The avatar style.\r\n     * @param {AvatarVideoFormat} videoFormat - The talking avatar output video format.\r\n     */\r\n    public constructor(character: string, style: string, videoFormat: AvatarVideoFormat) {\r\n        Contracts.throwIfNullOrWhitespace(character, \"character\");\r\n        this.character = character;\r\n        this.style = style;\r\n        if (videoFormat === undefined) {\r\n            videoFormat = new AvatarVideoFormat();\r\n        }\r\n        this.videoFormat = videoFormat;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,iBAAiB,QAAQ,cAAc;AAEhD;;;;;;;AAOA,OAAM,MAAOC,YAAY;EA6CrB;;;;;;;EAOAC,YAAmBC,SAAiB,EAAEC,KAAa,EAAEC,WAA8B;IAnD3E,KAAAC,cAAc,GAAY,KAAK;IAoDnCP,SAAS,CAACQ,uBAAuB,CAACJ,SAAS,EAAE,WAAW,CAAC;IACzD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAIC,WAAW,KAAKG,SAAS,EAAE;MAC3BH,WAAW,GAAG,IAAIL,iBAAiB,EAAE;;IAEzC,IAAI,CAACK,WAAW,GAAGA,WAAW;EAClC;EA3CA;;;EAGA,IAAWI,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACH,cAAc;EAC9B;EAEA;;;EAGA,IAAWG,UAAUA,CAACC,KAAc;IAChC,IAAI,CAACJ,cAAc,GAAGI,KAAK;EAC/B;EAEA;;;EAGA,IAAWC,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACC,mBAAmB;EACnC;EAEA;;;EAGA,IAAWD,eAAeA,CAACD,KAAa;IACpC,IAAI,CAACE,mBAAmB,GAAGF,KAAK;EACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}