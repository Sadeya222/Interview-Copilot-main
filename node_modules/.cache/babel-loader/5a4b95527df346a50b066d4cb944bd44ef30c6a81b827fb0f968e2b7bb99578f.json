{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"div\", {\n    staticClass: \"desc_text\"\n  }, [_vm._v(\" The following settings are only retained locally in your browser. See \"), _c(\"a\", {\n    attrs: {\n      href: _vm.github_url,\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"Github\")]), _vm._v(\" for setup instructions. \")]), _c(\"h1\", [_vm._v(\"Open AI\")]), _c(\"div\", {\n    staticClass: \"desc_text\"\n  }, [_vm._v(\"To use GPT, you need an API Key from the \"), _c(\"a\", {\n    attrs: {\n      href: _vm.open_ai_api_url,\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"Open AI\")])]), _c(\"div\", [_c(\"el-input\", {\n    attrs: {\n      placeholder: \"sk-xxxx\"\n    },\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"openai_key\");\n      }\n    },\n    model: {\n      value: _vm.openai_key,\n      callback: function ($$v) {\n        _vm.openai_key = $$v;\n      },\n      expression: \"openai_key\"\n    }\n  }, [_c(\"template\", {\n    slot: \"prepend\"\n  }, [_vm._v(\"API Key:\")])], 2)], 1), _c(\"div\", {\n    staticClass: \"separator\"\n  }, [_vm._v(\" GPT Model: \"), _c(\"el-radio-group\", {\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"gpt_model\");\n      }\n    },\n    model: {\n      value: _vm.gpt_model,\n      callback: function ($$v) {\n        _vm.gpt_model = $$v;\n      },\n      expression: \"gpt_model\"\n    }\n  }, [_c(\"el-radio\", {\n    attrs: {\n      label: \"gpt-3.5-turbo\"\n    }\n  }), _c(\"el-radio\", {\n    attrs: {\n      label: \"gpt-4\"\n    }\n  })], 1)], 1), _c(\"div\", {\n    staticClass: \"separator\"\n  }, [_c(\"div\", {\n    staticClass: \"desc_text\"\n  }, [_vm._v(\"GPT Prompt:\")]), _c(\"el-input\", {\n    attrs: {\n      type: \"textarea\",\n      placeholder: \"You can setup custom prompt here\",\n      rows: 5\n    },\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"gpt_system_prompt\");\n      }\n    },\n    model: {\n      value: _vm.gpt_system_prompt,\n      callback: function ($$v) {\n        _vm.gpt_system_prompt = $$v;\n      },\n      expression: \"gpt_system_prompt\"\n    }\n  })], 1), _c(\"h1\", [_vm._v(\"Azure Speech Recognition\")]), _c(\"div\", {\n    staticClass: \"desc_text\"\n  }, [_vm._v(\" We use Microsoft Azure's speech recognition service. You can apply for a free Azure token by referring to \"), _c(\"a\", {\n    attrs: {\n      href: _vm.azure_application_url,\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"this tutorial\")]), _vm._v(\": \")]), _c(\"el-input\", {\n    attrs: {\n      placeholder: \"Input Your Azure Speech Resource Token (KEY 1)\"\n    },\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"azure_token\");\n      }\n    },\n    model: {\n      value: _vm.azure_token,\n      callback: function ($$v) {\n        _vm.azure_token = $$v;\n      },\n      expression: \"azure_token\"\n    }\n  }, [_c(\"template\", {\n    slot: \"prepend\"\n  }, [_vm._v(\"Azure token:\")])], 2), _c(\"div\", {\n    staticClass: \"separator\"\n  }), _c(\"el-input\", {\n    attrs: {\n      placeholder: \"e.g. eastasia\"\n    },\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"azure_region\");\n      }\n    },\n    model: {\n      value: _vm.azure_region,\n      callback: function ($$v) {\n        _vm.azure_region = $$v;\n      },\n      expression: \"azure_region\"\n    }\n  }, [_c(\"template\", {\n    slot: \"prepend\"\n  }, [_vm._v(\"Location/Region\")])], 2), _c(\"div\", {\n    staticClass: \"separator\"\n  }), _c(\"el-input\", {\n    attrs: {\n      placeholder: \"e.g. en-US\"\n    },\n    on: {\n      change: function ($event) {\n        return _vm.onKeyChange(\"azure_language\");\n      }\n    },\n    model: {\n      value: _vm.azure_language,\n      callback: function ($$v) {\n        _vm.azure_language = $$v;\n      },\n      expression: \"azure_language\"\n    }\n  }, [_c(\"template\", {\n    slot: \"prepend\"\n  }, [_vm._v(\"Recognition Language\")])], 2), _c(\"div\", {\n    staticClass: \"desc_text\"\n  }, [_c(\"span\", {\n    staticStyle: {\n      \"text-decoration\": \"gray\"\n    }\n  }, [_vm._v(\"zh-CN\")]), _vm._v(\" for Chinese, See \"), _c(\"a\", {\n    attrs: {\n      href: _vm.full_language_codec_url,\n      target: \"_blank\"\n    }\n  }, [_vm._v(\"here\")]), _vm._v(\" for other language codes \")])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","staticClass","_v","attrs","href","github_url","target","open_ai_api_url","placeholder","on","change","$event","onKeyChange","model","value","openai_key","callback","$$v","expression","slot","gpt_model","label","type","rows","gpt_system_prompt","azure_application_url","azure_token","azure_region","azure_language","staticStyle","full_language_codec_url","staticRenderFns","_withStripped"],"sources":["C:/Users/Perfect/Interview-Copilot-main/Interview-Copilot-main/src/views/Setting.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"desc_text\" }, [\n        _vm._v(\n          \" The following settings are only retained locally in your browser. See \"\n        ),\n        _c(\"a\", { attrs: { href: _vm.github_url, target: \"_blank\" } }, [\n          _vm._v(\"Github\"),\n        ]),\n        _vm._v(\" for setup instructions. \"),\n      ]),\n      _c(\"h1\", [_vm._v(\"Open AI\")]),\n      _c(\"div\", { staticClass: \"desc_text\" }, [\n        _vm._v(\"To use GPT, you need an API Key from the \"),\n        _c(\"a\", { attrs: { href: _vm.open_ai_api_url, target: \"_blank\" } }, [\n          _vm._v(\"Open AI\"),\n        ]),\n      ]),\n      _c(\n        \"div\",\n        [\n          _c(\n            \"el-input\",\n            {\n              attrs: { placeholder: \"sk-xxxx\" },\n              on: {\n                change: function ($event) {\n                  return _vm.onKeyChange(\"openai_key\")\n                },\n              },\n              model: {\n                value: _vm.openai_key,\n                callback: function ($$v) {\n                  _vm.openai_key = $$v\n                },\n                expression: \"openai_key\",\n              },\n            },\n            [_c(\"template\", { slot: \"prepend\" }, [_vm._v(\"API Key:\")])],\n            2\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"separator\" },\n        [\n          _vm._v(\" GPT Model: \"),\n          _c(\n            \"el-radio-group\",\n            {\n              on: {\n                change: function ($event) {\n                  return _vm.onKeyChange(\"gpt_model\")\n                },\n              },\n              model: {\n                value: _vm.gpt_model,\n                callback: function ($$v) {\n                  _vm.gpt_model = $$v\n                },\n                expression: \"gpt_model\",\n              },\n            },\n            [\n              _c(\"el-radio\", { attrs: { label: \"gpt-3.5-turbo\" } }),\n              _c(\"el-radio\", { attrs: { label: \"gpt-4\" } }),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"separator\" },\n        [\n          _c(\"div\", { staticClass: \"desc_text\" }, [_vm._v(\"GPT Prompt:\")]),\n          _c(\"el-input\", {\n            attrs: {\n              type: \"textarea\",\n              placeholder: \"You can setup custom prompt here\",\n              rows: 5,\n            },\n            on: {\n              change: function ($event) {\n                return _vm.onKeyChange(\"gpt_system_prompt\")\n              },\n            },\n            model: {\n              value: _vm.gpt_system_prompt,\n              callback: function ($$v) {\n                _vm.gpt_system_prompt = $$v\n              },\n              expression: \"gpt_system_prompt\",\n            },\n          }),\n        ],\n        1\n      ),\n      _c(\"h1\", [_vm._v(\"Azure Speech Recognition\")]),\n      _c(\"div\", { staticClass: \"desc_text\" }, [\n        _vm._v(\n          \" We use Microsoft Azure's speech recognition service. You can apply for a free Azure token by referring to \"\n        ),\n        _c(\n          \"a\",\n          { attrs: { href: _vm.azure_application_url, target: \"_blank\" } },\n          [_vm._v(\"this tutorial\")]\n        ),\n        _vm._v(\": \"),\n      ]),\n      _c(\n        \"el-input\",\n        {\n          attrs: {\n            placeholder: \"Input Your Azure Speech Resource Token (KEY 1)\",\n          },\n          on: {\n            change: function ($event) {\n              return _vm.onKeyChange(\"azure_token\")\n            },\n          },\n          model: {\n            value: _vm.azure_token,\n            callback: function ($$v) {\n              _vm.azure_token = $$v\n            },\n            expression: \"azure_token\",\n          },\n        },\n        [_c(\"template\", { slot: \"prepend\" }, [_vm._v(\"Azure token:\")])],\n        2\n      ),\n      _c(\"div\", { staticClass: \"separator\" }),\n      _c(\n        \"el-input\",\n        {\n          attrs: { placeholder: \"e.g. eastasia\" },\n          on: {\n            change: function ($event) {\n              return _vm.onKeyChange(\"azure_region\")\n            },\n          },\n          model: {\n            value: _vm.azure_region,\n            callback: function ($$v) {\n              _vm.azure_region = $$v\n            },\n            expression: \"azure_region\",\n          },\n        },\n        [_c(\"template\", { slot: \"prepend\" }, [_vm._v(\"Location/Region\")])],\n        2\n      ),\n      _c(\"div\", { staticClass: \"separator\" }),\n      _c(\n        \"el-input\",\n        {\n          attrs: { placeholder: \"e.g. en-US\" },\n          on: {\n            change: function ($event) {\n              return _vm.onKeyChange(\"azure_language\")\n            },\n          },\n          model: {\n            value: _vm.azure_language,\n            callback: function ($$v) {\n              _vm.azure_language = $$v\n            },\n            expression: \"azure_language\",\n          },\n        },\n        [_c(\"template\", { slot: \"prepend\" }, [_vm._v(\"Recognition Language\")])],\n        2\n      ),\n      _c(\"div\", { staticClass: \"desc_text\" }, [\n        _c(\"span\", { staticStyle: { \"text-decoration\": \"gray\" } }, [\n          _vm._v(\"zh-CN\"),\n        ]),\n        _vm._v(\" for Chinese, See \"),\n        _c(\n          \"a\",\n          { attrs: { href: _vm.full_language_codec_url, target: \"_blank\" } },\n          [_vm._v(\"here\")]\n        ),\n        _vm._v(\" for other language codes \"),\n      ]),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}