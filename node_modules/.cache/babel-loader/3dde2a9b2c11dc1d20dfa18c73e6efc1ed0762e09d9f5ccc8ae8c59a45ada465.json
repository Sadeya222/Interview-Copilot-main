{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class RestConfigBase {\n  static get requestOptions() {\n    return RestConfigBase.privDefaultRequestOptions;\n  }\n  static get configParams() {\n    return RestConfigBase.privDefaultParams;\n  }\n  static get restErrors() {\n    return RestConfigBase.privRestErrors;\n  }\n}\nRestConfigBase.privDefaultRequestOptions = {\n  headers: {\n    Accept: \"application/json\"\n  },\n  ignoreCache: false,\n  timeout: 10000\n};\nRestConfigBase.privRestErrors = {\n  authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\n  authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\n  invalidArgs: \"Required input not found: {arg}.\",\n  invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\n  invalidParticipantRequest: \"The requested participant was not found.\",\n  permissionDeniedConnect: \"Required credentials not found.\",\n  permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\n  permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\n  permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\n  permissionDeniedStart: \"Invalid operation: there is already an active conversation.\"\n};\nRestConfigBase.privDefaultParams = {\n  apiVersion: \"api-version\",\n  authorization: \"Authorization\",\n  clientAppId: \"X-ClientAppId\",\n  contentTypeKey: \"Content-Type\",\n  correlationId: \"X-CorrelationId\",\n  languageCode: \"language\",\n  nickname: \"nickname\",\n  profanity: \"profanity\",\n  requestId: \"X-RequestId\",\n  roomId: \"roomid\",\n  sessionToken: \"token\",\n  subscriptionKey: \"Ocp-Apim-Subscription-Key\",\n  subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\n  token: \"X-CapitoToken\"\n};","map":{"version":3,"names":["RestConfigBase","requestOptions","privDefaultRequestOptions","configParams","privDefaultParams","restErrors","privRestErrors","headers","Accept","ignoreCache","timeout","authInvalidSubscriptionKey","authInvalidSubscriptionRegion","invalidArgs","invalidCreateJoinConversationResponse","invalidParticipantRequest","permissionDeniedConnect","permissionDeniedConversation","permissionDeniedParticipant","permissionDeniedSend","permissionDeniedStart","apiVersion","authorization","clientAppId","contentTypeKey","correlationId","languageCode","nickname","profanity","requestId","roomId","sessionToken","subscriptionKey","subscriptionRegion","token"],"sources":["src/common.browser/RestConfigBase.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IErrorMessages } from \"../common/Exports.js\";\r\n/**\r\n * HTTP request helper\r\n */\r\nexport interface IRequestOptions {\r\n    headers?: {[key: string]: string};\r\n    ignoreCache?: boolean;\r\n    timeout?: number;\r\n}\r\n\r\nexport interface IRestParams {\r\n    apiVersion: string;\r\n    authorization: string;\r\n    clientAppId: string;\r\n    contentTypeKey: string;\r\n    correlationId: string;\r\n    languageCode: string;\r\n    nickname: string;\r\n    profanity: string;\r\n    requestId: string;\r\n    roomId: string;\r\n    sessionToken: string;\r\n    subscriptionKey: string;\r\n    subscriptionRegion: string;\r\n    token: string;\r\n}\r\n\r\nexport class RestConfigBase {\r\n\r\n    public static get requestOptions(): IRequestOptions {\r\n        return RestConfigBase.privDefaultRequestOptions;\r\n    }\r\n\r\n    public static get configParams(): IRestParams {\r\n        return RestConfigBase.privDefaultParams;\r\n    }\r\n\r\n    public static get restErrors(): IErrorMessages {\r\n        return RestConfigBase.privRestErrors;\r\n    }\r\n\r\n    private static readonly privDefaultRequestOptions: IRequestOptions = {\r\n        headers: {\r\n            Accept: \"application/json\",\r\n        },\r\n        ignoreCache: false,\r\n        timeout: 10000,\r\n    };\r\n\r\n    private static readonly privRestErrors: IErrorMessages = {\r\n        authInvalidSubscriptionKey: \"You must specify either an authentication token to use, or a Cognitive Speech subscription key.\",\r\n        authInvalidSubscriptionRegion: \"You must specify the Cognitive Speech region to use.\",\r\n        invalidArgs: \"Required input not found: {arg}.\",\r\n        invalidCreateJoinConversationResponse: \"Creating/Joining conversation failed with HTTP {status}.\",\r\n        invalidParticipantRequest: \"The requested participant was not found.\",\r\n        permissionDeniedConnect: \"Required credentials not found.\",\r\n        permissionDeniedConversation: \"Invalid operation: only the host can {command} the conversation.\",\r\n        permissionDeniedParticipant: \"Invalid operation: only the host can {command} a participant.\",\r\n        permissionDeniedSend: \"Invalid operation: the conversation is not in a connected state.\",\r\n        permissionDeniedStart: \"Invalid operation: there is already an active conversation.\",\r\n    };\r\n\r\n    private static readonly privDefaultParams: IRestParams = {\r\n        apiVersion: \"api-version\",\r\n        authorization: \"Authorization\",\r\n        clientAppId: \"X-ClientAppId\",\r\n        contentTypeKey: \"Content-Type\",\r\n        correlationId: \"X-CorrelationId\",\r\n        languageCode: \"language\",\r\n        nickname: \"nickname\",\r\n        profanity: \"profanity\",\r\n        requestId: \"X-RequestId\",\r\n        roomId: \"roomid\",\r\n        sessionToken: \"token\",\r\n        subscriptionKey: \"Ocp-Apim-Subscription-Key\",\r\n        subscriptionRegion: \"Ocp-Apim-Subscription-Region\",\r\n        token: \"X-CapitoToken\",\r\n    };\r\n\r\n}\r\n"],"mappings":"AAAA;AACA;AA6BA,OAAM,MAAOA,cAAc;EAEhB,WAAWC,cAAcA,CAAA;IAC5B,OAAOD,cAAc,CAACE,yBAAyB;EACnD;EAEO,WAAWC,YAAYA,CAAA;IAC1B,OAAOH,cAAc,CAACI,iBAAiB;EAC3C;EAEO,WAAWC,UAAUA,CAAA;IACxB,OAAOL,cAAc,CAACM,cAAc;EACxC;;AAEwBN,cAAA,CAAAE,yBAAyB,GAAoB;EACjEK,OAAO,EAAE;IACLC,MAAM,EAAE;GACX;EACDC,WAAW,EAAE,KAAK;EAClBC,OAAO,EAAE;CACZ;AAEuBV,cAAA,CAAAM,cAAc,GAAmB;EACrDK,0BAA0B,EAAE,iGAAiG;EAC7HC,6BAA6B,EAAE,sDAAsD;EACrFC,WAAW,EAAE,kCAAkC;EAC/CC,qCAAqC,EAAE,0DAA0D;EACjGC,yBAAyB,EAAE,0CAA0C;EACrEC,uBAAuB,EAAE,iCAAiC;EAC1DC,4BAA4B,EAAE,kEAAkE;EAChGC,2BAA2B,EAAE,+DAA+D;EAC5FC,oBAAoB,EAAE,kEAAkE;EACxFC,qBAAqB,EAAE;CAC1B;AAEuBpB,cAAA,CAAAI,iBAAiB,GAAgB;EACrDiB,UAAU,EAAE,aAAa;EACzBC,aAAa,EAAE,eAAe;EAC9BC,WAAW,EAAE,eAAe;EAC5BC,cAAc,EAAE,cAAc;EAC9BC,aAAa,EAAE,iBAAiB;EAChCC,YAAY,EAAE,UAAU;EACxBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,aAAa;EACxBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE,OAAO;EACrBC,eAAe,EAAE,2BAA2B;EAC5CC,kBAAkB,EAAE,8BAA8B;EAClDC,KAAK,EAAE;CACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}