{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable max-classes-per-file */\nimport { AutoDetectSourceLanguagesOpenRangeOptionName, CognitiveSubscriptionKeyAuthentication, CognitiveTokenAuthentication, Context, OS, SpeechServiceConfig, SynthesizerConfig } from \"../common.speech/Exports.js\";\nimport { Queue } from \"../common/Exports.js\";\nimport { Contracts } from \"./Contracts.js\";\nimport { PropertyId } from \"./Exports.js\";\nexport class Synthesizer {\n  /**\n   * Creates and initializes an instance of a Recognizer\n   * @constructor\n   * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\n   */\n  constructor(speechConfig) {\n    const speechConfigImpl = speechConfig;\n    Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\n    this.privProperties = speechConfigImpl.properties.clone();\n    this.privDisposed = false;\n    this.privSynthesizing = false;\n    this.synthesisRequestQueue = new Queue();\n  }\n  /**\n   * Gets the authorization token used to communicate with the service.\n   * @member Synthesizer.prototype.authorizationToken\n   * @function\n   * @public\n   * @returns {string} Authorization token.\n   */\n  get authorizationToken() {\n    return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\n  }\n  /**\n   * Gets/Sets the authorization token used to communicate with the service.\n   * @member Synthesizer.prototype.authorizationToken\n   * @function\n   * @public\n   * @param {string} token - Authorization token.\n   */\n  set authorizationToken(token) {\n    Contracts.throwIfNullOrWhitespace(token, \"token\");\n    this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\n  }\n  /**\n   * The collection of properties and their values defined for this Synthesizer.\n   * @member Synthesizer.prototype.properties\n   * @function\n   * @public\n   * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\n   */\n  get properties() {\n    return this.privProperties;\n  }\n  /**\n   * Indicates if auto detect source language is enabled\n   * @member Synthesizer.prototype.autoDetectSourceLanguage\n   * @function\n   * @public\n   * @returns {boolean} if auto detect source language is enabled\n   */\n  get autoDetectSourceLanguage() {\n    return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\n  }\n  buildSsml(text) {\n    const languageToDefaultVoice = {\n      [\"af-ZA\"]: \"af-ZA-AdriNeural\",\n      [\"am-ET\"]: \"am-ET-AmehaNeural\",\n      [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\n      [\"ar-BH\"]: \"ar-BH-AliNeural\",\n      [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\n      [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\n      [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\n      [\"ar-JO\"]: \"ar-JO-SanaNeural\",\n      [\"ar-KW\"]: \"ar-KW-FahedNeural\",\n      [\"ar-LY\"]: \"ar-LY-ImanNeural\",\n      [\"ar-MA\"]: \"ar-MA-JamalNeural\",\n      [\"ar-QA\"]: \"ar-QA-AmalNeural\",\n      [\"ar-SA\"]: \"ar-SA-HamedNeural\",\n      [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\n      [\"ar-TN\"]: \"ar-TN-HediNeural\",\n      [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\n      [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\n      [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\n      [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\n      [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\n      [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\n      [\"cy-GB\"]: \"cy-GB-AledNeural\",\n      [\"da-DK\"]: \"da-DK-ChristelNeural\",\n      [\"de-AT\"]: \"de-AT-IngridNeural\",\n      [\"de-CH\"]: \"de-CH-JanNeural\",\n      [\"de-DE\"]: \"de-DE-KatjaNeural\",\n      [\"el-GR\"]: \"el-GR-AthinaNeural\",\n      [\"en-AU\"]: \"en-AU-NatashaNeural\",\n      [\"en-CA\"]: \"en-CA-ClaraNeural\",\n      [\"en-GB\"]: \"en-GB-LibbyNeural\",\n      [\"en-HK\"]: \"en-HK-SamNeural\",\n      [\"en-IE\"]: \"en-IE-ConnorNeural\",\n      [\"en-IN\"]: \"en-IN-NeerjaNeural\",\n      [\"en-KE\"]: \"en-KE-AsiliaNeural\",\n      [\"en-NG\"]: \"en-NG-AbeoNeural\",\n      [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\n      [\"en-PH\"]: \"en-PH-JamesNeural\",\n      [\"en-SG\"]: \"en-SG-LunaNeural\",\n      [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\n      [\"en-US\"]: \"en-US-JennyNeural\",\n      [\"en-ZA\"]: \"en-ZA-LeahNeural\",\n      [\"es-AR\"]: \"es-AR-ElenaNeural\",\n      [\"es-BO\"]: \"es-BO-MarceloNeural\",\n      [\"es-CL\"]: \"es-CL-CatalinaNeural\",\n      [\"es-CO\"]: \"es-CO-GonzaloNeural\",\n      [\"es-CR\"]: \"es-CR-JuanNeural\",\n      [\"es-CU\"]: \"es-CU-BelkysNeural\",\n      [\"es-DO\"]: \"es-DO-EmilioNeural\",\n      [\"es-EC\"]: \"es-EC-AndreaNeural\",\n      [\"es-ES\"]: \"es-ES-AlvaroNeural\",\n      [\"es-GQ\"]: \"es-GQ-JavierNeural\",\n      [\"es-GT\"]: \"es-GT-AndresNeural\",\n      [\"es-HN\"]: \"es-HN-CarlosNeural\",\n      [\"es-MX\"]: \"es-MX-DaliaNeural\",\n      [\"es-NI\"]: \"es-NI-FedericoNeural\",\n      [\"es-PA\"]: \"es-PA-MargaritaNeural\",\n      [\"es-PE\"]: \"es-PE-AlexNeural\",\n      [\"es-PR\"]: \"es-PR-KarinaNeural\",\n      [\"es-PY\"]: \"es-PY-MarioNeural\",\n      [\"es-SV\"]: \"es-SV-LorenaNeural\",\n      [\"es-US\"]: \"es-US-AlonsoNeural\",\n      [\"es-UY\"]: \"es-UY-MateoNeural\",\n      [\"es-VE\"]: \"es-VE-PaolaNeural\",\n      [\"et-EE\"]: \"et-EE-AnuNeural\",\n      [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\n      [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\n      [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\n      [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\n      [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\n      [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\n      [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\n      [\"ga-IE\"]: \"ga-IE-ColmNeural\",\n      [\"gl-ES\"]: \"gl-ES-RoiNeural\",\n      [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\n      [\"he-IL\"]: \"he-IL-AvriNeural\",\n      [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\n      [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\n      [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\n      [\"id-ID\"]: \"id-ID-ArdiNeural\",\n      [\"is-IS\"]: \"is-IS-GudrunNeural\",\n      [\"it-IT\"]: \"it-IT-IsabellaNeural\",\n      [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\n      [\"jv-ID\"]: \"jv-ID-DimasNeural\",\n      [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\n      [\"km-KH\"]: \"km-KH-PisethNeural\",\n      [\"kn-IN\"]: \"kn-IN-GaganNeural\",\n      [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\n      [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\n      [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\n      [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\n      [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\n      [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\n      [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\n      [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\n      [\"mt-MT\"]: \"mt-MT-GraceNeural\",\n      [\"my-MM\"]: \"my-MM-NilarNeural\",\n      [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\n      [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\n      [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\n      [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\n      [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\n      [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\n      [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\n      [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\n      [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\n      [\"si-LK\"]: \"si-LK-SameeraNeural\",\n      [\"sk-SK\"]: \"sk-SK-LukasNeural\",\n      [\"sl-SI\"]: \"sl-SI-PetraNeural\",\n      [\"so-SO\"]: \"so-SO-MuuseNeural\",\n      [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\n      [\"su-ID\"]: \"su-ID-JajangNeural\",\n      [\"sv-SE\"]: \"sv-SE-SofieNeural\",\n      [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\n      [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\n      [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\n      [\"ta-LK\"]: \"ta-LK-KumarNeural\",\n      [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\n      [\"te-IN\"]: \"te-IN-MohanNeural\",\n      [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\n      [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\n      [\"uk-UA\"]: \"uk-UA-OstapNeural\",\n      [\"ur-IN\"]: \"ur-IN-GulNeural\",\n      [\"ur-PK\"]: \"ur-PK-AsadNeural\",\n      [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\n      [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\n      [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\n      [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\n      [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\n      [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\"\n    };\n    let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\n    let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\n    let ssml = Synthesizer.XMLEncode(text);\n    if (this.autoDetectSourceLanguage) {\n      language = \"en-US\";\n    } else {\n      voice = voice || languageToDefaultVoice[language];\n    }\n    if (voice) {\n      ssml = `<voice name='${voice}'>${ssml}</voice>`;\n    }\n    ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\n    return ssml;\n  }\n  /**\n   * This method performs cleanup of resources.\n   * The Boolean parameter disposing indicates whether the method is called\n   * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\n   * Derived classes should override this method to dispose resource if needed.\n   * @member Synthesizer.prototype.dispose\n   * @function\n   * @public\n   * @param {boolean} disposing - Flag to request disposal.\n   */\n  dispose(disposing) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.privDisposed) {\n        return;\n      }\n      if (disposing) {\n        if (this.privAdapter) {\n          yield this.privAdapter.dispose();\n        }\n      }\n      this.privDisposed = true;\n    });\n  }\n  adapterSpeak() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.privDisposed && !this.privSynthesizing) {\n        this.privSynthesizing = true;\n        const request = yield this.synthesisRequestQueue.dequeue();\n        return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\n      }\n    });\n  }\n  createSynthesizerConfig(speechConfig) {\n    return new SynthesizerConfig(speechConfig, this.privProperties);\n  }\n  // Does the generic synthesizer setup that is common across all synthesizer types.\n  implCommonSynthesizeSetup() {\n    let osPlatform = typeof window !== \"undefined\" ? \"Browser\" : \"Node\";\n    let osName = \"unknown\";\n    let osVersion = \"unknown\";\n    if (typeof navigator !== \"undefined\") {\n      osPlatform = osPlatform + \"/\" + navigator.platform;\n      osName = navigator.userAgent;\n      osVersion = navigator.appVersion;\n    }\n    const synthesizerConfig = this.createSynthesizerConfig(new SpeechServiceConfig(new Context(new OS(osPlatform, osName, osVersion))));\n    const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\n    const authentication = subscriptionKey && subscriptionKey !== \"\" ? new CognitiveSubscriptionKeyAuthentication(subscriptionKey) : new CognitiveTokenAuthentication(() => {\n      const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n      return Promise.resolve(authorizationToken);\n    }, () => {\n      const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\n      return Promise.resolve(authorizationToken);\n    });\n    this.privAdapter = this.createSynthesisAdapter(authentication, this.privConnectionFactory, synthesizerConfig);\n    this.privRestAdapter = this.createRestSynthesisAdapter(authentication, synthesizerConfig);\n  }\n  static XMLEncode(text) {\n    return text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");\n  }\n}\nexport class SynthesisRequest {\n  constructor(requestId, text, isSSML, cb, err, dataStream) {\n    this.requestId = requestId;\n    this.text = text;\n    this.isSSML = isSSML;\n    this.cb = cb;\n    this.err = err;\n    this.dataStream = dataStream;\n  }\n}","map":{"version":3,"names":["AutoDetectSourceLanguagesOpenRangeOptionName","CognitiveSubscriptionKeyAuthentication","CognitiveTokenAuthentication","Context","OS","SpeechServiceConfig","SynthesizerConfig","Queue","Contracts","PropertyId","Synthesizer","constructor","speechConfig","speechConfigImpl","throwIfNull","privProperties","properties","clone","privDisposed","privSynthesizing","synthesisRequestQueue","authorizationToken","getProperty","SpeechServiceAuthorization_Token","token","throwIfNullOrWhitespace","setProperty","autoDetectSourceLanguage","SpeechServiceConnection_AutoDetectSourceLanguages","buildSsml","text","languageToDefaultVoice","language","SpeechServiceConnection_SynthLanguage","voice","SpeechServiceConnection_SynthVoice","ssml","XMLEncode","dispose","disposing","privAdapter","adapterSpeak","request","dequeue","Speak","isSSML","requestId","cb","err","dataStream","createSynthesizerConfig","implCommonSynthesizeSetup","osPlatform","window","osName","osVersion","navigator","platform","userAgent","appVersion","synthesizerConfig","subscriptionKey","SpeechServiceConnection_Key","undefined","authentication","Promise","resolve","createSynthesisAdapter","privConnectionFactory","privRestAdapter","createRestSynthesisAdapter","replace","SynthesisRequest"],"sources":["src/sdk/Synthesizer.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport {\r\n    AutoDetectSourceLanguagesOpenRangeOptionName,\r\n    CognitiveSubscriptionKeyAuthentication,\r\n    CognitiveTokenAuthentication,\r\n    Context,\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    OS,\r\n    SpeechServiceConfig,\r\n    SynthesisAdapterBase,\r\n    SynthesisRestAdapter,\r\n    SynthesizerConfig } from \"../common.speech/Exports.js\";\r\nimport { IAudioDestination, IStringDictionary, Queue } from \"../common/Exports.js\";\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { PropertyCollection, PropertyId, SpeechConfig, SpeechConfigImpl, SpeechSynthesisResult } from \"./Exports.js\";\r\n\r\nexport abstract class Synthesizer {\r\n    protected privAdapter: SynthesisAdapterBase;\r\n    protected privRestAdapter: SynthesisRestAdapter;\r\n    protected privProperties: PropertyCollection;\r\n    protected privConnectionFactory: ISynthesisConnectionFactory;\r\n    protected privDisposed: boolean;\r\n    protected privSynthesizing: boolean;\r\n    protected synthesisRequestQueue: Queue<SynthesisRequest>;\r\n\r\n    /**\r\n     * Gets the authorization token used to communicate with the service.\r\n     * @member Synthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @returns {string} Authorization token.\r\n     */\r\n    public get authorizationToken(): string {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceAuthorization_Token);\r\n    }\r\n\r\n    /**\r\n     * Gets/Sets the authorization token used to communicate with the service.\r\n     * @member Synthesizer.prototype.authorizationToken\r\n     * @function\r\n     * @public\r\n     * @param {string} token - Authorization token.\r\n     */\r\n    public set authorizationToken(token: string) {\r\n        Contracts.throwIfNullOrWhitespace(token, \"token\");\r\n        this.properties.setProperty(PropertyId.SpeechServiceAuthorization_Token, token);\r\n    }\r\n\r\n    /**\r\n     * The collection of properties and their values defined for this Synthesizer.\r\n     * @member Synthesizer.prototype.properties\r\n     * @function\r\n     * @public\r\n     * @returns {PropertyCollection} The collection of properties and their values defined for this SpeechSynthesizer.\r\n     */\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    /**\r\n     * Indicates if auto detect source language is enabled\r\n     * @member Synthesizer.prototype.autoDetectSourceLanguage\r\n     * @function\r\n     * @public\r\n     * @returns {boolean} if auto detect source language is enabled\r\n     */\r\n    public get autoDetectSourceLanguage(): boolean {\r\n        return this.properties.getProperty(PropertyId.SpeechServiceConnection_AutoDetectSourceLanguages) === AutoDetectSourceLanguagesOpenRangeOptionName;\r\n    }\r\n\r\n    /**\r\n     * Creates and initializes an instance of a Recognizer\r\n     * @constructor\r\n     * @param {SpeechConfig} speechConfig - The speech config to initialize the synthesizer.\r\n     */\r\n    protected constructor(speechConfig: SpeechConfig) {\r\n        const speechConfigImpl: SpeechConfigImpl = speechConfig as SpeechConfigImpl;\r\n        Contracts.throwIfNull(speechConfigImpl, \"speechConfig\");\r\n\r\n        this.privProperties = speechConfigImpl.properties.clone();\r\n        this.privDisposed = false;\r\n        this.privSynthesizing = false;\r\n        this.synthesisRequestQueue = new Queue<SynthesisRequest>();\r\n    }\r\n\r\n    public buildSsml(text: string): string {\r\n        const languageToDefaultVoice: IStringDictionary<string>  = {\r\n            [\"af-ZA\"]: \"af-ZA-AdriNeural\",\r\n            [\"am-ET\"]: \"am-ET-AmehaNeural\",\r\n            [\"ar-AE\"]: \"ar-AE-FatimaNeural\",\r\n            [\"ar-BH\"]: \"ar-BH-AliNeural\",\r\n            [\"ar-DZ\"]: \"ar-DZ-AminaNeural\",\r\n            [\"ar-EG\"]: \"ar-EG-SalmaNeural\",\r\n            [\"ar-IQ\"]: \"ar-IQ-BasselNeural\",\r\n            [\"ar-JO\"]: \"ar-JO-SanaNeural\",\r\n            [\"ar-KW\"]: \"ar-KW-FahedNeural\",\r\n            [\"ar-LY\"]: \"ar-LY-ImanNeural\",\r\n            [\"ar-MA\"]: \"ar-MA-JamalNeural\",\r\n            [\"ar-QA\"]: \"ar-QA-AmalNeural\",\r\n            [\"ar-SA\"]: \"ar-SA-HamedNeural\",\r\n            [\"ar-SY\"]: \"ar-SY-AmanyNeural\",\r\n            [\"ar-TN\"]: \"ar-TN-HediNeural\",\r\n            [\"ar-YE\"]: \"ar-YE-MaryamNeural\",\r\n            [\"bg-BG\"]: \"bg-BG-BorislavNeural\",\r\n            [\"bn-BD\"]: \"bn-BD-NabanitaNeural\",\r\n            [\"bn-IN\"]: \"bn-IN-BashkarNeural\",\r\n            [\"ca-ES\"]: \"ca-ES-JoanaNeural\",\r\n            [\"cs-CZ\"]: \"cs-CZ-AntoninNeural\",\r\n            [\"cy-GB\"]: \"cy-GB-AledNeural\",\r\n            [\"da-DK\"]: \"da-DK-ChristelNeural\",\r\n            [\"de-AT\"]: \"de-AT-IngridNeural\",\r\n            [\"de-CH\"]: \"de-CH-JanNeural\",\r\n            [\"de-DE\"]: \"de-DE-KatjaNeural\",\r\n            [\"el-GR\"]: \"el-GR-AthinaNeural\",\r\n            [\"en-AU\"]: \"en-AU-NatashaNeural\",\r\n            [\"en-CA\"]: \"en-CA-ClaraNeural\",\r\n            [\"en-GB\"]: \"en-GB-LibbyNeural\",\r\n            [\"en-HK\"]: \"en-HK-SamNeural\",\r\n            [\"en-IE\"]: \"en-IE-ConnorNeural\",\r\n            [\"en-IN\"]: \"en-IN-NeerjaNeural\",\r\n            [\"en-KE\"]: \"en-KE-AsiliaNeural\",\r\n            [\"en-NG\"]: \"en-NG-AbeoNeural\",\r\n            [\"en-NZ\"]: \"en-NZ-MitchellNeural\",\r\n            [\"en-PH\"]: \"en-PH-JamesNeural\",\r\n            [\"en-SG\"]: \"en-SG-LunaNeural\",\r\n            [\"en-TZ\"]: \"en-TZ-ElimuNeural\",\r\n            [\"en-US\"]: \"en-US-JennyNeural\",\r\n            [\"en-ZA\"]: \"en-ZA-LeahNeural\",\r\n            [\"es-AR\"]: \"es-AR-ElenaNeural\",\r\n            [\"es-BO\"]: \"es-BO-MarceloNeural\",\r\n            [\"es-CL\"]: \"es-CL-CatalinaNeural\",\r\n            [\"es-CO\"]: \"es-CO-GonzaloNeural\",\r\n            [\"es-CR\"]: \"es-CR-JuanNeural\",\r\n            [\"es-CU\"]: \"es-CU-BelkysNeural\",\r\n            [\"es-DO\"]: \"es-DO-EmilioNeural\",\r\n            [\"es-EC\"]: \"es-EC-AndreaNeural\",\r\n            [\"es-ES\"]: \"es-ES-AlvaroNeural\",\r\n            [\"es-GQ\"]: \"es-GQ-JavierNeural\",\r\n            [\"es-GT\"]: \"es-GT-AndresNeural\",\r\n            [\"es-HN\"]: \"es-HN-CarlosNeural\",\r\n            [\"es-MX\"]: \"es-MX-DaliaNeural\",\r\n            [\"es-NI\"]: \"es-NI-FedericoNeural\",\r\n            [\"es-PA\"]: \"es-PA-MargaritaNeural\",\r\n            [\"es-PE\"]: \"es-PE-AlexNeural\",\r\n            [\"es-PR\"]: \"es-PR-KarinaNeural\",\r\n            [\"es-PY\"]: \"es-PY-MarioNeural\",\r\n            [\"es-SV\"]: \"es-SV-LorenaNeural\",\r\n            [\"es-US\"]: \"es-US-AlonsoNeural\",\r\n            [\"es-UY\"]: \"es-UY-MateoNeural\",\r\n            [\"es-VE\"]: \"es-VE-PaolaNeural\",\r\n            [\"et-EE\"]: \"et-EE-AnuNeural\",\r\n            [\"fa-IR\"]: \"fa-IR-DilaraNeural\",\r\n            [\"fi-FI\"]: \"fi-FI-SelmaNeural\",\r\n            [\"fil-PH\"]: \"fil-PH-AngeloNeural\",\r\n            [\"fr-BE\"]: \"fr-BE-CharlineNeural\",\r\n            [\"fr-CA\"]: \"fr-CA-SylvieNeural\",\r\n            [\"fr-CH\"]: \"fr-CH-ArianeNeural\",\r\n            [\"fr-FR\"]: \"fr-FR-DeniseNeural\",\r\n            [\"ga-IE\"]: \"ga-IE-ColmNeural\",\r\n            [\"gl-ES\"]: \"gl-ES-RoiNeural\",\r\n            [\"gu-IN\"]: \"gu-IN-DhwaniNeural\",\r\n            [\"he-IL\"]: \"he-IL-AvriNeural\",\r\n            [\"hi-IN\"]: \"hi-IN-MadhurNeural\",\r\n            [\"hr-HR\"]: \"hr-HR-GabrijelaNeural\",\r\n            [\"hu-HU\"]: \"hu-HU-NoemiNeural\",\r\n            [\"id-ID\"]: \"id-ID-ArdiNeural\",\r\n            [\"is-IS\"]: \"is-IS-GudrunNeural\",\r\n            [\"it-IT\"]: \"it-IT-IsabellaNeural\",\r\n            [\"ja-JP\"]: \"ja-JP-NanamiNeural\",\r\n            [\"jv-ID\"]: \"jv-ID-DimasNeural\",\r\n            [\"kk-KZ\"]: \"kk-KZ-AigulNeural\",\r\n            [\"km-KH\"]: \"km-KH-PisethNeural\",\r\n            [\"kn-IN\"]: \"kn-IN-GaganNeural\",\r\n            [\"ko-KR\"]: \"ko-KR-SunHiNeural\",\r\n            [\"lo-LA\"]: \"lo-LA-ChanthavongNeural\",\r\n            [\"lt-LT\"]: \"lt-LT-LeonasNeural\",\r\n            [\"lv-LV\"]: \"lv-LV-EveritaNeural\",\r\n            [\"mk-MK\"]: \"mk-MK-AleksandarNeural\",\r\n            [\"ml-IN\"]: \"ml-IN-MidhunNeural\",\r\n            [\"mr-IN\"]: \"mr-IN-AarohiNeural\",\r\n            [\"ms-MY\"]: \"ms-MY-OsmanNeural\",\r\n            [\"mt-MT\"]: \"mt-MT-GraceNeural\",\r\n            [\"my-MM\"]: \"my-MM-NilarNeural\",\r\n            [\"nb-NO\"]: \"nb-NO-PernilleNeural\",\r\n            [\"nl-BE\"]: \"nl-BE-ArnaudNeural\",\r\n            [\"nl-NL\"]: \"nl-NL-ColetteNeural\",\r\n            [\"pl-PL\"]: \"pl-PL-AgnieszkaNeural\",\r\n            [\"ps-AF\"]: \"ps-AF-GulNawazNeural\",\r\n            [\"pt-BR\"]: \"pt-BR-FranciscaNeural\",\r\n            [\"pt-PT\"]: \"pt-PT-DuarteNeural\",\r\n            [\"ro-RO\"]: \"ro-RO-AlinaNeural\",\r\n            [\"ru-RU\"]: \"ru-RU-SvetlanaNeural\",\r\n            [\"si-LK\"]: \"si-LK-SameeraNeural\",\r\n            [\"sk-SK\"]: \"sk-SK-LukasNeural\",\r\n            [\"sl-SI\"]: \"sl-SI-PetraNeural\",\r\n            [\"so-SO\"]: \"so-SO-MuuseNeural\",\r\n            [\"sr-RS\"]: \"sr-RS-NicholasNeural\",\r\n            [\"su-ID\"]: \"su-ID-JajangNeural\",\r\n            [\"sv-SE\"]: \"sv-SE-SofieNeural\",\r\n            [\"sw-KE\"]: \"sw-KE-RafikiNeural\",\r\n            [\"sw-TZ\"]: \"sw-TZ-DaudiNeural\",\r\n            [\"ta-IN\"]: \"ta-IN-PallaviNeural\",\r\n            [\"ta-LK\"]: \"ta-LK-KumarNeural\",\r\n            [\"ta-SG\"]: \"ta-SG-AnbuNeural\",\r\n            [\"te-IN\"]: \"te-IN-MohanNeural\",\r\n            [\"th-TH\"]: \"th-TH-PremwadeeNeural\",\r\n            [\"tr-TR\"]: \"tr-TR-AhmetNeural\",\r\n            [\"uk-UA\"]: \"uk-UA-OstapNeural\",\r\n            [\"ur-IN\"]: \"ur-IN-GulNeural\",\r\n            [\"ur-PK\"]: \"ur-PK-AsadNeural\",\r\n            [\"uz-UZ\"]: \"uz-UZ-MadinaNeural\",\r\n            [\"vi-VN\"]: \"vi-VN-HoaiMyNeural\",\r\n            [\"zh-CN\"]: \"zh-CN-XiaoxiaoNeural\",\r\n            [\"zh-HK\"]: \"zh-HK-HiuMaanNeural\",\r\n            [\"zh-TW\"]: \"zh-TW-HsiaoChenNeural\",\r\n            [\"zu-ZA\"]: \"zu-ZA-ThandoNeural\",\r\n        };\r\n\r\n        let language = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthLanguage, \"en-US\");\r\n        let voice = this.properties.getProperty(PropertyId.SpeechServiceConnection_SynthVoice, \"\");\r\n        let ssml: string = Synthesizer.XMLEncode(text);\r\n        if (this.autoDetectSourceLanguage) {\r\n            language = \"en-US\";\r\n        } else {\r\n            voice = voice || languageToDefaultVoice[language];\r\n        }\r\n        if (voice) {\r\n            ssml = `<voice name='${voice}'>${ssml}</voice>`;\r\n        }\r\n        ssml = `<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xmlns:mstts='http://www.w3.org/2001/mstts' xmlns:emo='http://www.w3.org/2009/10/emotionml' xml:lang='${language}'>${ssml}</speak>`;\r\n        return ssml;\r\n    }\r\n\r\n    /**\r\n     * This method performs cleanup of resources.\r\n     * The Boolean parameter disposing indicates whether the method is called\r\n     * from Dispose (if disposing is true) or from the finalizer (if disposing is false).\r\n     * Derived classes should override this method to dispose resource if needed.\r\n     * @member Synthesizer.prototype.dispose\r\n     * @function\r\n     * @public\r\n     * @param {boolean} disposing - Flag to request disposal.\r\n     */\r\n    protected async dispose(disposing: boolean): Promise<void> {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        if (disposing) {\r\n            if (this.privAdapter) {\r\n                await this.privAdapter.dispose();\r\n            }\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n\r\n    protected async adapterSpeak(): Promise<void> {\r\n        if (!this.privDisposed && !this.privSynthesizing) {\r\n            this.privSynthesizing = true;\r\n            const request: SynthesisRequest = await this.synthesisRequestQueue.dequeue();\r\n            return this.privAdapter.Speak(request.text, request.isSSML, request.requestId, request.cb, request.err, request.dataStream);\r\n        }\r\n    }\r\n\r\n    //\r\n    // ################################################################################################################\r\n    // IMPLEMENTATION.\r\n    // Move to independent class\r\n    // ################################################################################################################\r\n    //\r\n\r\n    // Creates the synthesis adapter\r\n    protected abstract createSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisAdapterBase;\r\n\r\n    // Creates the REST synthesis adapter\r\n    protected abstract createRestSynthesisAdapter(\r\n        authentication: IAuthentication,\r\n        synthesizerConfig: SynthesizerConfig): SynthesisRestAdapter;\r\n\r\n    protected createSynthesizerConfig(speechConfig: SpeechServiceConfig): SynthesizerConfig {\r\n        return new SynthesizerConfig(\r\n            speechConfig,\r\n            this.privProperties);\r\n    }\r\n\r\n    // Does the generic synthesizer setup that is common across all synthesizer types.\r\n    protected implCommonSynthesizeSetup(): void {\r\n\r\n        let osPlatform = (typeof window !== \"undefined\") ? \"Browser\" : \"Node\";\r\n        let osName = \"unknown\";\r\n        let osVersion = \"unknown\";\r\n\r\n        if (typeof navigator !== \"undefined\") {\r\n            osPlatform = osPlatform + \"/\" + navigator.platform;\r\n            osName = navigator.userAgent;\r\n            osVersion = navigator.appVersion;\r\n        }\r\n\r\n        const synthesizerConfig: SynthesizerConfig = this.createSynthesizerConfig(\r\n            new SpeechServiceConfig(\r\n                new Context(new OS(osPlatform, osName, osVersion))));\r\n\r\n        const subscriptionKey = this.privProperties.getProperty(PropertyId.SpeechServiceConnection_Key, undefined);\r\n        const authentication = (subscriptionKey && subscriptionKey !== \"\") ?\r\n            new CognitiveSubscriptionKeyAuthentication(subscriptionKey) :\r\n            new CognitiveTokenAuthentication(\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                },\r\n                (): Promise<string> => {\r\n                    const authorizationToken = this.privProperties.getProperty(PropertyId.SpeechServiceAuthorization_Token, undefined);\r\n                    return Promise.resolve(authorizationToken);\r\n                });\r\n\r\n        this.privAdapter = this.createSynthesisAdapter(\r\n            authentication,\r\n            this.privConnectionFactory,\r\n            synthesizerConfig);\r\n\r\n        this.privRestAdapter = this.createRestSynthesisAdapter(\r\n            authentication,\r\n            synthesizerConfig);\r\n    }\r\n\r\n    protected static XMLEncode(text: string): string {\r\n        return text.replace(/&/g, \"&amp;\")\r\n            .replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\")\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/'/g, \"&apos;\");\r\n    }\r\n}\r\n\r\nexport class SynthesisRequest {\r\n    public requestId: string;\r\n    public text: string;\r\n    public isSSML: boolean;\r\n    public cb: (e: SpeechSynthesisResult) => void;\r\n    public err: (e: string) => void;\r\n    public dataStream: IAudioDestination;\r\n\r\n    public constructor(requestId: string, text: string, isSSML: boolean, cb?: (e: SpeechSynthesisResult) => void, err?: (e: string) => void, dataStream?: IAudioDestination) {\r\n        this.requestId = requestId;\r\n        this.text = text;\r\n        this.isSSML = isSSML;\r\n        this.cb = cb;\r\n        this.err = err;\r\n        this.dataStream = dataStream;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}