{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\nexport class ServiceEvent extends PlatformEvent {\n  constructor(eventName, jsonstring, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privJsonResult = jsonstring;\n  }\n  get jsonString() {\n    return this.privJsonResult;\n  }\n}\nexport class ConnectionEvent extends PlatformEvent {\n  constructor(eventName, connectionId, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privConnectionId = connectionId;\n  }\n  get connectionId() {\n    return this.privConnectionId;\n  }\n}\nexport class ConnectionStartEvent extends ConnectionEvent {\n  constructor(connectionId, uri, headers) {\n    super(\"ConnectionStartEvent\", connectionId);\n    this.privUri = uri;\n    this.privHeaders = headers;\n  }\n  get uri() {\n    return this.privUri;\n  }\n  get headers() {\n    return this.privHeaders;\n  }\n}\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\n  constructor(connectionId) {\n    super(\"ConnectionEstablishedEvent\", connectionId);\n  }\n}\nexport class ConnectionClosedEvent extends ConnectionEvent {\n  constructor(connectionId, statusCode, reason) {\n    super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\n    this.privReason = reason;\n    this.privStatusCode = statusCode;\n  }\n  get reason() {\n    return this.privReason;\n  }\n  get statusCode() {\n    return this.privStatusCode;\n  }\n}\nexport class ConnectionErrorEvent extends ConnectionEvent {\n  constructor(connectionId, message, type) {\n    super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\n    this.privMessage = message;\n    this.privType = type;\n  }\n  get message() {\n    return this.privMessage;\n  }\n  get type() {\n    return this.privType;\n  }\n}\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\n  constructor(connectionId, statuscode, reason) {\n    super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\n    this.privStatusCode = statuscode;\n    this.privReason = reason;\n  }\n  get reason() {\n    return this.privReason;\n  }\n  get statusCode() {\n    return this.privStatusCode;\n  }\n}\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\n  constructor(connectionId, networkReceivedTimeISO, message) {\n    super(\"ConnectionMessageReceivedEvent\", connectionId);\n    this.privNetworkReceivedTime = networkReceivedTimeISO;\n    this.privMessage = message;\n  }\n  get networkReceivedTime() {\n    return this.privNetworkReceivedTime;\n  }\n  get message() {\n    return this.privMessage;\n  }\n}\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\n  constructor(connectionId, networkSentTimeISO, message) {\n    super(\"ConnectionMessageSentEvent\", connectionId);\n    this.privNetworkSentTime = networkSentTimeISO;\n    this.privMessage = message;\n  }\n  get networkSentTime() {\n    return this.privNetworkSentTime;\n  }\n  get message() {\n    return this.privMessage;\n  }\n}","map":{"version":3,"names":["EventType","PlatformEvent","ServiceEvent","constructor","eventName","jsonstring","eventType","Info","privJsonResult","jsonString","ConnectionEvent","connectionId","privConnectionId","ConnectionStartEvent","uri","headers","privUri","privHeaders","ConnectionEstablishedEvent","ConnectionClosedEvent","statusCode","reason","Debug","privReason","privStatusCode","ConnectionErrorEvent","message","type","privMessage","privType","ConnectionEstablishErrorEvent","statuscode","Error","ConnectionMessageReceivedEvent","networkReceivedTimeISO","privNetworkReceivedTime","networkReceivedTime","ConnectionMessageSentEvent","networkSentTimeISO","privNetworkSentTime","networkSentTime"],"sources":["src/common/ConnectionEvents.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n\r\nimport { ConnectionMessage } from \"./ConnectionMessage.js\";\r\nimport { IStringDictionary } from \"./IDictionary.js\";\r\nimport { EventType, PlatformEvent } from \"./PlatformEvent.js\";\r\n\r\nexport class ServiceEvent extends PlatformEvent {\r\n    private privJsonResult: string;\r\n\r\n    public constructor(eventName: string, jsonstring: string, eventType: EventType = EventType.Info) {\r\n      super(eventName, eventType);\r\n      this.privJsonResult = jsonstring;\r\n    }\r\n\r\n    public get jsonString(): string {\r\n        return this.privJsonResult;\r\n    }\r\n}\r\n\r\nexport class ConnectionEvent extends PlatformEvent {\r\n    private privConnectionId: string;\r\n\r\n    public constructor(eventName: string, connectionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n        this.privConnectionId = connectionId;\r\n    }\r\n\r\n    public get connectionId(): string {\r\n        return this.privConnectionId;\r\n    }\r\n}\r\n\r\nexport class ConnectionStartEvent extends ConnectionEvent {\r\n    private privUri: string;\r\n    private privHeaders: IStringDictionary<string>;\r\n\r\n    public constructor(connectionId: string, uri: string, headers?: IStringDictionary<string>) {\r\n        super(\"ConnectionStartEvent\", connectionId);\r\n        this.privUri = uri;\r\n        this.privHeaders = headers;\r\n    }\r\n\r\n    public get uri(): string {\r\n        return this.privUri;\r\n    }\r\n\r\n    public get headers(): IStringDictionary<string> {\r\n        return this.privHeaders;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishedEvent extends ConnectionEvent {\r\n    public constructor(connectionId: string) {\r\n        super(\"ConnectionEstablishedEvent\", connectionId);\r\n    }\r\n}\r\n\r\nexport class ConnectionClosedEvent extends ConnectionEvent {\r\n    private privReason: string;\r\n    private privStatusCode: number;\r\n\r\n    public constructor(connectionId: string, statusCode: number, reason: string) {\r\n        super(\"ConnectionClosedEvent\", connectionId, EventType.Debug);\r\n        this.privReason = reason;\r\n        this.privStatusCode = statusCode;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionErrorEvent extends ConnectionEvent {\r\n    private readonly privMessage: string;\r\n    private readonly privType: string;\r\n\r\n    public constructor(connectionId: string, message: string, type: string) {\r\n        super(\"ConnectionErrorEvent\", connectionId, EventType.Debug);\r\n        this.privMessage = message;\r\n        this.privType = type;\r\n    }\r\n\r\n    public get message(): string {\r\n        return this.privMessage;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privType;\r\n    }\r\n}\r\n\r\nexport class ConnectionEstablishErrorEvent extends ConnectionEvent {\r\n    private privStatusCode: number;\r\n    private privReason: string;\r\n\r\n    public constructor(connectionId: string, statuscode: number, reason: string) {\r\n        super(\"ConnectionEstablishErrorEvent\", connectionId, EventType.Error);\r\n        this.privStatusCode = statuscode;\r\n        this.privReason = reason;\r\n    }\r\n\r\n    public get reason(): string {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get statusCode(): number {\r\n        return this.privStatusCode;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageReceivedEvent extends ConnectionEvent {\r\n    private privNetworkReceivedTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkReceivedTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageReceivedEvent\", connectionId);\r\n        this.privNetworkReceivedTime = networkReceivedTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkReceivedTime(): string {\r\n        return this.privNetworkReceivedTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n\r\nexport class ConnectionMessageSentEvent extends ConnectionEvent {\r\n    private privNetworkSentTime: string;\r\n    private privMessage: ConnectionMessage;\r\n\r\n    public constructor(connectionId: string, networkSentTimeISO: string, message: ConnectionMessage) {\r\n        super(\"ConnectionMessageSentEvent\", connectionId);\r\n        this.privNetworkSentTime = networkSentTimeISO;\r\n        this.privMessage = message;\r\n    }\r\n\r\n    public get networkSentTime(): string {\r\n        return this.privNetworkSentTime;\r\n    }\r\n\r\n    public get message(): ConnectionMessage {\r\n        return this.privMessage;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAMA,SAASA,SAAS,EAAEC,aAAa,QAAQ,oBAAoB;AAE7D,OAAM,MAAOC,YAAa,SAAQD,aAAa;EAG3CE,YAAmBC,SAAiB,EAAEC,UAAkB,EAAEC,SAAA,GAAuBN,SAAS,CAACO,IAAI;IAC7F,KAAK,CAACH,SAAS,EAAEE,SAAS,CAAC;IAC3B,IAAI,CAACE,cAAc,GAAGH,UAAU;EAClC;EAEA,IAAWI,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACD,cAAc;EAC9B;;AAGJ,OAAM,MAAOE,eAAgB,SAAQT,aAAa;EAG9CE,YAAmBC,SAAiB,EAAEO,YAAoB,EAAEL,SAAA,GAAuBN,SAAS,CAACO,IAAI;IAC7F,KAAK,CAACH,SAAS,EAAEE,SAAS,CAAC;IAC3B,IAAI,CAACM,gBAAgB,GAAGD,YAAY;EACxC;EAEA,IAAWA,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACC,gBAAgB;EAChC;;AAGJ,OAAM,MAAOC,oBAAqB,SAAQH,eAAe;EAIrDP,YAAmBQ,YAAoB,EAAEG,GAAW,EAAEC,OAAmC;IACrF,KAAK,CAAC,sBAAsB,EAAEJ,YAAY,CAAC;IAC3C,IAAI,CAACK,OAAO,GAAGF,GAAG;IAClB,IAAI,CAACG,WAAW,GAAGF,OAAO;EAC9B;EAEA,IAAWD,GAAGA,CAAA;IACV,OAAO,IAAI,CAACE,OAAO;EACvB;EAEA,IAAWD,OAAOA,CAAA;IACd,OAAO,IAAI,CAACE,WAAW;EAC3B;;AAGJ,OAAM,MAAOC,0BAA2B,SAAQR,eAAe;EAC3DP,YAAmBQ,YAAoB;IACnC,KAAK,CAAC,4BAA4B,EAAEA,YAAY,CAAC;EACrD;;AAGJ,OAAM,MAAOQ,qBAAsB,SAAQT,eAAe;EAItDP,YAAmBQ,YAAoB,EAAES,UAAkB,EAAEC,MAAc;IACvE,KAAK,CAAC,uBAAuB,EAAEV,YAAY,EAAEX,SAAS,CAACsB,KAAK,CAAC;IAC7D,IAAI,CAACC,UAAU,GAAGF,MAAM;IACxB,IAAI,CAACG,cAAc,GAAGJ,UAAU;EACpC;EAEA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACE,UAAU;EAC1B;EAEA,IAAWH,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACI,cAAc;EAC9B;;AAGJ,OAAM,MAAOC,oBAAqB,SAAQf,eAAe;EAIrDP,YAAmBQ,YAAoB,EAAEe,OAAe,EAAEC,IAAY;IAClE,KAAK,CAAC,sBAAsB,EAAEhB,YAAY,EAAEX,SAAS,CAACsB,KAAK,CAAC;IAC5D,IAAI,CAACM,WAAW,GAAGF,OAAO;IAC1B,IAAI,CAACG,QAAQ,GAAGF,IAAI;EACxB;EAEA,IAAWD,OAAOA,CAAA;IACd,OAAO,IAAI,CAACE,WAAW;EAC3B;EAEA,IAAWD,IAAIA,CAAA;IACX,OAAO,IAAI,CAACE,QAAQ;EACxB;;AAGJ,OAAM,MAAOC,6BAA8B,SAAQpB,eAAe;EAI9DP,YAAmBQ,YAAoB,EAAEoB,UAAkB,EAAEV,MAAc;IACvE,KAAK,CAAC,+BAA+B,EAAEV,YAAY,EAAEX,SAAS,CAACgC,KAAK,CAAC;IACrE,IAAI,CAACR,cAAc,GAAGO,UAAU;IAChC,IAAI,CAACR,UAAU,GAAGF,MAAM;EAC5B;EAEA,IAAWA,MAAMA,CAAA;IACb,OAAO,IAAI,CAACE,UAAU;EAC1B;EAEA,IAAWH,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACI,cAAc;EAC9B;;AAGJ,OAAM,MAAOS,8BAA+B,SAAQvB,eAAe;EAI/DP,YAAmBQ,YAAoB,EAAEuB,sBAA8B,EAAER,OAA0B;IAC/F,KAAK,CAAC,gCAAgC,EAAEf,YAAY,CAAC;IACrD,IAAI,CAACwB,uBAAuB,GAAGD,sBAAsB;IACrD,IAAI,CAACN,WAAW,GAAGF,OAAO;EAC9B;EAEA,IAAWU,mBAAmBA,CAAA;IAC1B,OAAO,IAAI,CAACD,uBAAuB;EACvC;EAEA,IAAWT,OAAOA,CAAA;IACd,OAAO,IAAI,CAACE,WAAW;EAC3B;;AAGJ,OAAM,MAAOS,0BAA2B,SAAQ3B,eAAe;EAI3DP,YAAmBQ,YAAoB,EAAE2B,kBAA0B,EAAEZ,OAA0B;IAC3F,KAAK,CAAC,4BAA4B,EAAEf,YAAY,CAAC;IACjD,IAAI,CAAC4B,mBAAmB,GAAGD,kBAAkB;IAC7C,IAAI,CAACV,WAAW,GAAGF,OAAO;EAC9B;EAEA,IAAWc,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACD,mBAAmB;EACnC;EAEA,IAAWb,OAAOA,CAAA;IACd,OAAO,IAAI,CAACE,WAAW;EAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}