{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts.js\";\nimport { VoiceProfileType } from \"./Exports.js\";\n/**\n * Defines SpeakerIdentificationModel class for Speaker Recognition\n * Model contains a set of profiles against which to identify speaker(s)\n * @class SpeakerIdentificationModel\n */\nexport class SpeakerIdentificationModel {\n  constructor(profiles) {\n    this.privVoiceProfiles = [];\n    this.privProfileIds = [];\n    Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\n    if (profiles.length === 0) {\n      throw new Error(\"Empty Voice Profiles array\");\n    }\n    for (const profile of profiles) {\n      if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\n        throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\n      }\n      this.privVoiceProfiles.push(profile);\n      this.privProfileIds.push(profile.profileId);\n    }\n  }\n  static fromProfiles(profiles) {\n    return new SpeakerIdentificationModel(profiles);\n  }\n  get voiceProfileIds() {\n    return this.privProfileIds.join(\",\");\n  }\n  get profileIds() {\n    return this.privProfileIds;\n  }\n  get scenario() {\n    return \"TextIndependentIdentification\";\n  }\n}","map":{"version":3,"names":["Contracts","VoiceProfileType","SpeakerIdentificationModel","constructor","profiles","privVoiceProfiles","privProfileIds","throwIfNullOrUndefined","length","Error","profile","profileType","TextIndependentIdentification","profileId","push","fromProfiles","voiceProfileIds","join","profileIds","scenario"],"sources":["src/sdk/SpeakerIdentificationModel.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport { SpeakerRecognitionModel } from \"./SpeakerRecognitionModel.js\";\r\nimport {\r\n    VoiceProfile,\r\n    VoiceProfileType,\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Defines SpeakerIdentificationModel class for Speaker Recognition\r\n * Model contains a set of profiles against which to identify speaker(s)\r\n * @class SpeakerIdentificationModel\r\n */\r\nexport class SpeakerIdentificationModel implements SpeakerRecognitionModel {\r\n    private privVoiceProfiles: VoiceProfile[] = [];\r\n    private privProfileIds: string[] = [];\r\n\r\n    private constructor(profiles: VoiceProfile[]) {\r\n        Contracts.throwIfNullOrUndefined(profiles, \"VoiceProfiles\");\r\n        if (profiles.length === 0) {\r\n            throw new Error(\"Empty Voice Profiles array\");\r\n        }\r\n        for (const profile of profiles) {\r\n            if (profile.profileType !== VoiceProfileType.TextIndependentIdentification) {\r\n                throw new Error(\"Identification model can only be created from Identification profile: \" + profile.profileId);\r\n            }\r\n            this.privVoiceProfiles.push(profile);\r\n            this.privProfileIds.push(profile.profileId);\r\n        }\r\n    }\r\n    public static fromProfiles(profiles: VoiceProfile[]): SpeakerIdentificationModel {\r\n        return new SpeakerIdentificationModel(profiles);\r\n    }\r\n\r\n    public get voiceProfileIds(): string {\r\n        return this.privProfileIds.join(\",\");\r\n    }\r\n\r\n    public get profileIds(): string[] {\r\n        return this.privProfileIds;\r\n    }\r\n\r\n    public get scenario(): string {\r\n        return \"TextIndependentIdentification\";\r\n    }\r\n}\r\n"],"mappings":";AAAA;AACA;AAEA,SAASA,SAAS,QAAQ,gBAAgB;AAE1C,SAEIC,gBAAgB,QACb,cAAc;AAErB;;;;;AAKA,OAAM,MAAOC,0BAA0B;EAInCC,YAAoBC,QAAwB;IAHpC,KAAAC,iBAAiB,GAAmB,EAAE;IACtC,KAAAC,cAAc,GAAa,EAAE;IAGjCN,SAAS,CAACO,sBAAsB,CAACH,QAAQ,EAAE,eAAe,CAAC;IAC3D,IAAIA,QAAQ,CAACI,MAAM,KAAK,CAAC,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;;IAEjD,KAAK,MAAMC,OAAO,IAAIN,QAAQ,EAAE;MAC5B,IAAIM,OAAO,CAACC,WAAW,KAAKV,gBAAgB,CAACW,6BAA6B,EAAE;QACxE,MAAM,IAAIH,KAAK,CAAC,wEAAwE,GAAGC,OAAO,CAACG,SAAS,CAAC;;MAEjH,IAAI,CAACR,iBAAiB,CAACS,IAAI,CAACJ,OAAO,CAAC;MACpC,IAAI,CAACJ,cAAc,CAACQ,IAAI,CAACJ,OAAO,CAACG,SAAS,CAAC;;EAEnD;EACO,OAAOE,YAAYA,CAACX,QAAwB;IAC/C,OAAO,IAAIF,0BAA0B,CAACE,QAAQ,CAAC;EACnD;EAEA,IAAWY,eAAeA,CAAA;IACtB,OAAO,IAAI,CAACV,cAAc,CAACW,IAAI,CAAC,GAAG,CAAC;EACxC;EAEA,IAAWC,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACZ,cAAc;EAC9B;EAEA,IAAWa,QAAQA,CAAA;IACf,OAAO,+BAA+B;EAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}