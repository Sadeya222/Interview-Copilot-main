{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts.js\";\n/**\n * Represents a keyword recognition model for recognizing when\n * the user says a keyword to initiate further speech recognition.\n * @class KeywordRecognitionModel\n */\nexport class KeywordRecognitionModel {\n  /**\n   * Create and initializes a new instance.\n   * @constructor\n   */\n  constructor() {\n    this.privDisposed = false;\n    return;\n  }\n  /**\n   * Creates a keyword recognition model using the specified filename.\n   * @member KeywordRecognitionModel.fromFile\n   * @function\n   * @public\n   * @param {string} fileName - A string that represents file name for the keyword recognition model.\n   * Note, the file can point to a zip file in which case the model\n   * will be extracted from the zip.\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n   */\n  static fromFile(fileName) {\n    Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\n   * Creates a keyword recognition model using the specified filename.\n   * @member KeywordRecognitionModel.fromStream\n   * @function\n   * @public\n   * @param {string} file - A File that represents file for the keyword recognition model.\n   * Note, the file can point to a zip file in which case the model will be extracted from the zip.\n   * @returns {KeywordRecognitionModel} The keyword recognition model being created.\n   */\n  static fromStream(file) {\n    Contracts.throwIfNull(file, \"file\");\n    throw new Error(\"Not yet implemented.\");\n  }\n  /**\n   * Dispose of associated resources.\n   * @member KeywordRecognitionModel.prototype.close\n   * @function\n   * @public\n   */\n  close() {\n    if (this.privDisposed) {\n      return;\n    }\n    this.privDisposed = true;\n  }\n}","map":{"version":3,"names":["Contracts","KeywordRecognitionModel","constructor","privDisposed","fromFile","fileName","throwIfFileDoesNotExist","Error","fromStream","file","throwIfNull","close"],"sources":["src/sdk/KeywordRecognitionModel.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\n\r\n/**\r\n * Represents a keyword recognition model for recognizing when\r\n * the user says a keyword to initiate further speech recognition.\r\n * @class KeywordRecognitionModel\r\n */\r\nexport class KeywordRecognitionModel {\r\n    private privDisposed: boolean = false;\r\n\r\n    /**\r\n     * Create and initializes a new instance.\r\n     * @constructor\r\n     */\r\n    private constructor() {\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromFile\r\n     * @function\r\n     * @public\r\n     * @param {string} fileName - A string that represents file name for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model\r\n     * will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromFile(fileName: string): KeywordRecognitionModel {\r\n        Contracts.throwIfFileDoesNotExist(fileName, \"fileName\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Creates a keyword recognition model using the specified filename.\r\n     * @member KeywordRecognitionModel.fromStream\r\n     * @function\r\n     * @public\r\n     * @param {string} file - A File that represents file for the keyword recognition model.\r\n     * Note, the file can point to a zip file in which case the model will be extracted from the zip.\r\n     * @returns {KeywordRecognitionModel} The keyword recognition model being created.\r\n     */\r\n    public static fromStream(file: File): KeywordRecognitionModel {\r\n        Contracts.throwIfNull(file, \"file\");\r\n\r\n        throw new Error(\"Not yet implemented.\");\r\n    }\r\n\r\n    /**\r\n     * Dispose of associated resources.\r\n     * @member KeywordRecognitionModel.prototype.close\r\n     * @function\r\n     * @public\r\n     */\r\n    public close(): void {\r\n        if (this.privDisposed) {\r\n            return;\r\n        }\r\n\r\n        this.privDisposed = true;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,QAAQ,gBAAgB;AAE1C;;;;;AAKA,OAAM,MAAOC,uBAAuB;EAGhC;;;;EAIAC,YAAA;IANQ,KAAAC,YAAY,GAAY,KAAK;IAOjC;EACJ;EAEA;;;;;;;;;;EAUO,OAAOC,QAAQA,CAACC,QAAgB;IACnCL,SAAS,CAACM,uBAAuB,CAACD,QAAQ,EAAE,UAAU,CAAC;IAEvD,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EAEA;;;;;;;;;EASO,OAAOC,UAAUA,CAACC,IAAU;IAC/BT,SAAS,CAACU,WAAW,CAACD,IAAI,EAAE,MAAM,CAAC;IAEnC,MAAM,IAAIF,KAAK,CAAC,sBAAsB,CAAC;EAC3C;EAEA;;;;;;EAMOI,KAAKA,CAAA;IACR,IAAI,IAAI,CAACR,YAAY,EAAE;MACnB;;IAGJ,IAAI,CAACA,YAAY,GAAG,IAAI;EAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}