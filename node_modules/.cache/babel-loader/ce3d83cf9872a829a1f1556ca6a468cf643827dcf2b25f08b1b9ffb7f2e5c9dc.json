{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { MessageType } from \"./ConnectionMessage.js\";\nimport { ArgumentNullError, InvalidOperationError } from \"./Error.js\";\nimport { createNoDashGuid } from \"./Guid.js\";\nexport class RawWebsocketMessage {\n  constructor(messageType, payload, id) {\n    this.privPayload = null;\n    if (!payload) {\n      throw new ArgumentNullError(\"payload\");\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\n      throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\n    }\n    if (messageType === MessageType.Text && !(typeof payload === \"string\")) {\n      throw new InvalidOperationError(\"Payload must be a string\");\n    }\n    this.privMessageType = messageType;\n    this.privPayload = payload;\n    this.privId = id ? id : createNoDashGuid();\n  }\n  get messageType() {\n    return this.privMessageType;\n  }\n  get payload() {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return this.privPayload;\n  }\n  get textContent() {\n    if (this.privMessageType === MessageType.Binary) {\n      throw new InvalidOperationError(\"Not supported for binary message\");\n    }\n    return this.privPayload;\n  }\n  get binaryContent() {\n    if (this.privMessageType === MessageType.Text) {\n      throw new InvalidOperationError(\"Not supported for text message\");\n    }\n    return this.privPayload;\n  }\n  get id() {\n    return this.privId;\n  }\n}","map":{"version":3,"names":["MessageType","ArgumentNullError","InvalidOperationError","createNoDashGuid","RawWebsocketMessage","constructor","messageType","payload","id","privPayload","Binary","__proto__","name","Text","privMessageType","privId","textContent","binaryContent"],"sources":["src/common/RawWebsocketMessage.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { MessageType } from \"./ConnectionMessage.js\";\r\nimport { ArgumentNullError, InvalidOperationError } from \"./Error.js\";\r\nimport { createNoDashGuid } from \"./Guid.js\";\r\n\r\nexport class RawWebsocketMessage {\r\n    private privMessageType: MessageType;\r\n    private privPayload: any = null;\r\n    private privId: string;\r\n\r\n    public constructor(messageType: MessageType, payload: any, id?: string) {\r\n        if (!payload) {\r\n            throw new ArgumentNullError(\"payload\");\r\n        }\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n        if (messageType === MessageType.Binary && payload.__proto__.constructor.name !== \"ArrayBuffer\") {\r\n            throw new InvalidOperationError(\"Payload must be ArrayBuffer\");\r\n        }\r\n\r\n        if (messageType === MessageType.Text && !(typeof (payload) === \"string\")) {\r\n            throw new InvalidOperationError(\"Payload must be a string\");\r\n        }\r\n\r\n        this.privMessageType = messageType;\r\n        this.privPayload = payload;\r\n        this.privId = id ? id : createNoDashGuid();\r\n    }\r\n\r\n    public get messageType(): MessageType {\r\n        return this.privMessageType;\r\n    }\r\n\r\n    public get payload(): any {\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n        return this.privPayload;\r\n    }\r\n\r\n    public get textContent(): string {\r\n        if (this.privMessageType === MessageType.Binary) {\r\n            throw new InvalidOperationError(\"Not supported for binary message\");\r\n        }\r\n\r\n        return this.privPayload as string;\r\n    }\r\n\r\n    public get binaryContent(): ArrayBuffer {\r\n        if (this.privMessageType === MessageType.Text) {\r\n            throw new InvalidOperationError(\"Not supported for text message\");\r\n        }\r\n\r\n        return this.privPayload as ArrayBuffer;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,iBAAiB,EAAEC,qBAAqB,QAAQ,YAAY;AACrE,SAASC,gBAAgB,QAAQ,WAAW;AAE5C,OAAM,MAAOC,mBAAmB;EAK5BC,YAAmBC,WAAwB,EAAEC,OAAY,EAAEC,EAAW;IAH9D,KAAAC,WAAW,GAAQ,IAAI;IAI3B,IAAI,CAACF,OAAO,EAAE;MACV,MAAM,IAAIN,iBAAiB,CAAC,SAAS,CAAC;;IAG1C;IACA,IAAIK,WAAW,KAAKN,WAAW,CAACU,MAAM,IAAIH,OAAO,CAACI,SAAS,CAACN,WAAW,CAACO,IAAI,KAAK,aAAa,EAAE;MAC5F,MAAM,IAAIV,qBAAqB,CAAC,6BAA6B,CAAC;;IAGlE,IAAII,WAAW,KAAKN,WAAW,CAACa,IAAI,IAAI,EAAE,OAAQN,OAAQ,KAAK,QAAQ,CAAC,EAAE;MACtE,MAAM,IAAIL,qBAAqB,CAAC,0BAA0B,CAAC;;IAG/D,IAAI,CAACY,eAAe,GAAGR,WAAW;IAClC,IAAI,CAACG,WAAW,GAAGF,OAAO;IAC1B,IAAI,CAACQ,MAAM,GAAGP,EAAE,GAAGA,EAAE,GAAGL,gBAAgB,EAAE;EAC9C;EAEA,IAAWG,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACQ,eAAe;EAC/B;EAEA,IAAWP,OAAOA,CAAA;IACd;IACA,OAAO,IAAI,CAACE,WAAW;EAC3B;EAEA,IAAWO,WAAWA,CAAA;IAClB,IAAI,IAAI,CAACF,eAAe,KAAKd,WAAW,CAACU,MAAM,EAAE;MAC7C,MAAM,IAAIR,qBAAqB,CAAC,kCAAkC,CAAC;;IAGvE,OAAO,IAAI,CAACO,WAAqB;EACrC;EAEA,IAAWQ,aAAaA,CAAA;IACpB,IAAI,IAAI,CAACH,eAAe,KAAKd,WAAW,CAACa,IAAI,EAAE;MAC3C,MAAM,IAAIX,qBAAqB,CAAC,gCAAgC,CAAC;;IAGrE,OAAO,IAAI,CAACO,WAA0B;EAC1C;EAEA,IAAWD,EAAEA,CAAA;IACT,OAAO,IAAI,CAACO,MAAM;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}