{"ast":null,"code":"'use strict';\n\nconst encodings = new Set(['json', 'buffer', 'string']);\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set();\n  let method;\n  let encoding;\n  let headers;\n  let baseurl = '';\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`;\n          throw new Error(msg);\n        } else {\n          method = arg;\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg;\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg;\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`);\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg);\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code));\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.');\n        }\n        headers = arg;\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`);\n    }\n  });\n  if (!method) method = 'GET';\n  if (statusCodes.size === 0) {\n    statusCodes.add(200);\n  }\n  return mkrequest(statusCodes, method, encoding, headers, baseurl);\n};","map":{"version":3,"names":["encodings","Set","module","exports","mkrequest","args","statusCodes","method","encoding","headers","baseurl","forEach","arg","toUpperCase","msg","Error","startsWith","has","add","Array","isArray","code","size"],"sources":["C:/Users/Perfect/Interview-Copilot-main/Interview-Copilot-main/node_modules/bent/src/core.js"],"sourcesContent":["'use strict'\nconst encodings = new Set(['json', 'buffer', 'string'])\n\nmodule.exports = mkrequest => (...args) => {\n  const statusCodes = new Set()\n  let method\n  let encoding\n  let headers\n  let baseurl = ''\n\n  args.forEach(arg => {\n    if (typeof arg === 'string') {\n      if (arg.toUpperCase() === arg) {\n        if (method) {\n          const msg = `Can't set method to ${arg}, already set to ${method}.`\n          throw new Error(msg)\n        } else {\n          method = arg\n        }\n      } else if (arg.startsWith('http:') || arg.startsWith('https:')) {\n        baseurl = arg\n      } else {\n        if (encodings.has(arg)) {\n          encoding = arg\n        } else {\n          throw new Error(`Unknown encoding, ${arg}`)\n        }\n      }\n    } else if (typeof arg === 'number') {\n      statusCodes.add(arg)\n    } else if (typeof arg === 'object') {\n      if (Array.isArray(arg) || arg instanceof Set) {\n        arg.forEach(code => statusCodes.add(code))\n      } else {\n        if (headers) {\n          throw new Error('Cannot set headers twice.')\n        }\n        headers = arg\n      }\n    } else {\n      throw new Error(`Unknown type: ${typeof arg}`)\n    }\n  })\n\n  if (!method) method = 'GET'\n  if (statusCodes.size === 0) {\n    statusCodes.add(200)\n  }\n\n  return mkrequest(statusCodes, method, encoding, headers, baseurl)\n}\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAEvDC,MAAM,CAACC,OAAO,GAAGC,SAAS,IAAI,CAAC,GAAGC,IAAI,KAAK;EACzC,MAAMC,WAAW,GAAG,IAAIL,GAAG,CAAC,CAAC;EAC7B,IAAIM,MAAM;EACV,IAAIC,QAAQ;EACZ,IAAIC,OAAO;EACX,IAAIC,OAAO,GAAG,EAAE;EAEhBL,IAAI,CAACM,OAAO,CAACC,GAAG,IAAI;IAClB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B,IAAIA,GAAG,CAACC,WAAW,CAAC,CAAC,KAAKD,GAAG,EAAE;QAC7B,IAAIL,MAAM,EAAE;UACV,MAAMO,GAAG,GAAI,uBAAsBF,GAAI,oBAAmBL,MAAO,GAAE;UACnE,MAAM,IAAIQ,KAAK,CAACD,GAAG,CAAC;QACtB,CAAC,MAAM;UACLP,MAAM,GAAGK,GAAG;QACd;MACF,CAAC,MAAM,IAAIA,GAAG,CAACI,UAAU,CAAC,OAAO,CAAC,IAAIJ,GAAG,CAACI,UAAU,CAAC,QAAQ,CAAC,EAAE;QAC9DN,OAAO,GAAGE,GAAG;MACf,CAAC,MAAM;QACL,IAAIZ,SAAS,CAACiB,GAAG,CAACL,GAAG,CAAC,EAAE;UACtBJ,QAAQ,GAAGI,GAAG;QAChB,CAAC,MAAM;UACL,MAAM,IAAIG,KAAK,CAAE,qBAAoBH,GAAI,EAAC,CAAC;QAC7C;MACF;IACF,CAAC,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAClCN,WAAW,CAACY,GAAG,CAACN,GAAG,CAAC;IACtB,CAAC,MAAM,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAClC,IAAIO,KAAK,CAACC,OAAO,CAACR,GAAG,CAAC,IAAIA,GAAG,YAAYX,GAAG,EAAE;QAC5CW,GAAG,CAACD,OAAO,CAACU,IAAI,IAAIf,WAAW,CAACY,GAAG,CAACG,IAAI,CAAC,CAAC;MAC5C,CAAC,MAAM;QACL,IAAIZ,OAAO,EAAE;UACX,MAAM,IAAIM,KAAK,CAAC,2BAA2B,CAAC;QAC9C;QACAN,OAAO,GAAGG,GAAG;MACf;IACF,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAE,iBAAgB,OAAOH,GAAI,EAAC,CAAC;IAChD;EACF,CAAC,CAAC;EAEF,IAAI,CAACL,MAAM,EAAEA,MAAM,GAAG,KAAK;EAC3B,IAAID,WAAW,CAACgB,IAAI,KAAK,CAAC,EAAE;IAC1BhB,WAAW,CAACY,GAAG,CAAC,GAAG,CAAC;EACtB;EAEA,OAAOd,SAAS,CAACE,WAAW,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,CAAC;AACnE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}