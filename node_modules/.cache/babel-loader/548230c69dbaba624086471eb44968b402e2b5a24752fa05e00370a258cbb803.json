{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst parseCommandResponse = json => JSON.parse(json);\nexport class CommandResponsePayload {\n  constructor(json) {\n    this.privCommandResponse = parseCommandResponse(json);\n  }\n  get type() {\n    return this.privCommandResponse.type;\n  }\n  get command() {\n    return this.privCommandResponse.command;\n  }\n  get id() {\n    return this.privCommandResponse.id;\n  }\n  get nickname() {\n    return this.privCommandResponse.nickname;\n  }\n  get participantId() {\n    return this.privCommandResponse.participantId;\n  }\n  get roomid() {\n    return this.privCommandResponse.roomid;\n  }\n  get value() {\n    return this.privCommandResponse.value;\n  }\n  get token() {\n    return this.privCommandResponse.token;\n  }\n  static fromJSON(json) {\n    return new CommandResponsePayload(json);\n  }\n}","map":{"version":3,"names":["parseCommandResponse","json","JSON","parse","CommandResponsePayload","constructor","privCommandResponse","type","command","id","nickname","participantId","roomid","value","token","fromJSON"],"sources":["src/common.speech/Transcription/ServiceMessages/CommandResponsePayload.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming websocket commands\r\n */\r\nexport interface ICommandResponsePayload {\r\n    type: string;\r\n    command?: string;\r\n    id?: string; // incoming ws\r\n    nickname?: string; // incoming ws\r\n    participantId?: string;\r\n    roomid?: string;\r\n    value: boolean | number | string;\r\n    token?: string;\r\n}\r\n\r\nconst parseCommandResponse = (json: string): ICommandResponsePayload => JSON.parse(json) as ICommandResponsePayload;\r\n\r\nexport class CommandResponsePayload implements ICommandResponsePayload {\r\n    private privCommandResponse: ICommandResponsePayload;\r\n\r\n    public constructor(json: string) {\r\n        this.privCommandResponse = parseCommandResponse(json);\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privCommandResponse.type;\r\n    }\r\n    public get command(): string {\r\n        return this.privCommandResponse.command;\r\n    }\r\n    public get id(): string {\r\n        return this.privCommandResponse.id;\r\n    }\r\n    public get nickname(): string {\r\n        return this.privCommandResponse.nickname;\r\n    }\r\n    public get participantId(): string {\r\n        return this.privCommandResponse.participantId;\r\n    }\r\n    public get roomid(): string {\r\n        return this.privCommandResponse.roomid;\r\n    }\r\n    public get value(): boolean | number | string {\r\n        return this.privCommandResponse.value;\r\n    }\r\n    public get token(): string {\r\n        return this.privCommandResponse.token;\r\n    }\r\n\r\n    public static fromJSON(json: string): CommandResponsePayload {\r\n        return new CommandResponsePayload(json);\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA;AACA;AAgBA,MAAMA,oBAAoB,GAAIC,IAAY,IAA8BC,IAAI,CAACC,KAAK,CAACF,IAAI,CAA4B;AAEnH,OAAM,MAAOG,sBAAsB;EAG/BC,YAAmBJ,IAAY;IAC3B,IAAI,CAACK,mBAAmB,GAAGN,oBAAoB,CAACC,IAAI,CAAC;EACzD;EAEA,IAAWM,IAAIA,CAAA;IACX,OAAO,IAAI,CAACD,mBAAmB,CAACC,IAAI;EACxC;EACA,IAAWC,OAAOA,CAAA;IACd,OAAO,IAAI,CAACF,mBAAmB,CAACE,OAAO;EAC3C;EACA,IAAWC,EAAEA,CAAA;IACT,OAAO,IAAI,CAACH,mBAAmB,CAACG,EAAE;EACtC;EACA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACJ,mBAAmB,CAACI,QAAQ;EAC5C;EACA,IAAWC,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACL,mBAAmB,CAACK,aAAa;EACjD;EACA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACN,mBAAmB,CAACM,MAAM;EAC1C;EACA,IAAWC,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACP,mBAAmB,CAACO,KAAK;EACzC;EACA,IAAWC,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACR,mBAAmB,CAACQ,KAAK;EACzC;EAEO,OAAOC,QAAQA,CAACd,IAAY;IAC/B,OAAO,IAAIG,sBAAsB,CAACH,IAAI,CAAC;EAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}