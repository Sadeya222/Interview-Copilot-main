{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { ResultReason, SpeechSynthesisEventArgs, SpeechSynthesisResult } from \"../sdk/Exports.js\";\nimport { SynthesisAdapterBase } from \"./Exports.js\";\nexport class SpeechSynthesisAdapter extends SynthesisAdapterBase {\n  constructor(authentication, connectionFactory, synthesizerConfig, speechSynthesizer, audioDestination) {\n    super(authentication, connectionFactory, synthesizerConfig, audioDestination);\n    this.privSpeechSynthesizer = speechSynthesizer;\n    this.privSynthesizer = speechSynthesizer;\n  }\n  setSynthesisContextSynthesisSection() {\n    this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\n  }\n  onSynthesisStarted(requestId) {\n    const synthesisStartEventArgs = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(requestId, ResultReason.SynthesizingAudioStarted));\n    if (!!this.privSpeechSynthesizer.synthesisStarted) {\n      this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\n    }\n  }\n  onSynthesizing(audio) {\n    if (!!this.privSpeechSynthesizer.synthesizing) {\n      try {\n        const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\n        const ev = new SpeechSynthesisEventArgs(new SpeechSynthesisResult(this.privSynthesisTurn.requestId, ResultReason.SynthesizingAudio, audioWithHeader));\n        this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\n      } catch (error) {\n        // Not going to let errors in the event handler\n        // trip things up.\n      }\n    }\n  }\n  onSynthesisCancelled(result) {\n    if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\n      const cancelEvent = new SpeechSynthesisEventArgs(result);\n      try {\n        this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\n        /* eslint-disable no-empty */\n      } catch (_a) {}\n    }\n  }\n  onSynthesisCompleted(result) {\n    if (this.privSpeechSynthesizer.synthesisCompleted) {\n      try {\n        this.privSpeechSynthesizer.synthesisCompleted(this.privSpeechSynthesizer, new SpeechSynthesisEventArgs(result));\n      } catch (e) {\n        // Not going to let errors in the event handler\n        // trip things up.\n      }\n    }\n  }\n  onWordBoundary(wordBoundaryEventArgs) {\n    if (!!this.privSpeechSynthesizer.wordBoundary) {\n      try {\n        this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\n      } catch (error) {\n        // Not going to let errors in the event handler\n        // trip things up.\n      }\n    }\n  }\n  onVisemeReceived(visemeEventArgs) {\n    if (!!this.privSpeechSynthesizer.visemeReceived) {\n      try {\n        this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\n      } catch (error) {\n        // Not going to let errors in the event handler\n        // trip things up.\n      }\n    }\n  }\n  onBookmarkReached(bookmarkEventArgs) {\n    if (!!this.privSpeechSynthesizer.bookmarkReached) {\n      try {\n        this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\n      } catch (error) {\n        // Not going to let errors in the event handler\n        // trip things up.\n      }\n    }\n  }\n}","map":{"version":3,"names":["ResultReason","SpeechSynthesisEventArgs","SpeechSynthesisResult","SynthesisAdapterBase","SpeechSynthesisAdapter","constructor","authentication","connectionFactory","synthesizerConfig","speechSynthesizer","audioDestination","privSpeechSynthesizer","privSynthesizer","setSynthesisContextSynthesisSection","privSynthesisContext","setSynthesisSection","onSynthesisStarted","requestId","synthesisStartEventArgs","SynthesizingAudioStarted","synthesisStarted","onSynthesizing","audio","synthesizing","audioWithHeader","privSynthesisTurn","audioOutputFormat","addHeader","ev","SynthesizingAudio","error","onSynthesisCancelled","result","SynthesisCanceled","cancelEvent","_a","onSynthesisCompleted","synthesisCompleted","e","onWordBoundary","wordBoundaryEventArgs","wordBoundary","onVisemeReceived","visemeEventArgs","visemeReceived","onBookmarkReached","bookmarkEventArgs","bookmarkReached"],"sources":["src/common.speech/SpeechSynthesisAdapter.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAudioDestination } from \"../common/Exports.js\";\r\nimport {\r\n    ResultReason,\r\n    SpeechSynthesisBookmarkEventArgs,\r\n    SpeechSynthesisEventArgs,\r\n    SpeechSynthesisResult,\r\n    SpeechSynthesisVisemeEventArgs,\r\n    SpeechSynthesisWordBoundaryEventArgs,\r\n    SpeechSynthesizer,\r\n    Synthesizer,\r\n} from \"../sdk/Exports.js\";\r\nimport {\r\n    IAuthentication,\r\n    ISynthesisConnectionFactory,\r\n    SynthesisAdapterBase,\r\n    SynthesizerConfig\r\n} from \"./Exports.js\";\r\n\r\nexport class SpeechSynthesisAdapter extends SynthesisAdapterBase {\r\n    private privSpeechSynthesizer: SpeechSynthesizer;\r\n    public constructor(\r\n        authentication: IAuthentication,\r\n        connectionFactory: ISynthesisConnectionFactory,\r\n        synthesizerConfig: SynthesizerConfig,\r\n        speechSynthesizer: SpeechSynthesizer,\r\n        audioDestination: IAudioDestination) {\r\n            super(authentication, connectionFactory, synthesizerConfig, audioDestination);\r\n            this.privSpeechSynthesizer = speechSynthesizer;\r\n            this.privSynthesizer = speechSynthesizer as Synthesizer;\r\n        }\r\n\r\n    protected setSynthesisContextSynthesisSection(): void {\r\n        this.privSynthesisContext.setSynthesisSection(this.privSpeechSynthesizer);\r\n    }\r\n\r\n    protected onSynthesisStarted(requestId: string): void {\r\n        const synthesisStartEventArgs: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n            new SpeechSynthesisResult(\r\n                requestId,\r\n                ResultReason.SynthesizingAudioStarted,\r\n            )\r\n        );\r\n\r\n        if (!!this.privSpeechSynthesizer.synthesisStarted) {\r\n            this.privSpeechSynthesizer.synthesisStarted(this.privSpeechSynthesizer, synthesisStartEventArgs);\r\n        }\r\n    }\r\n\r\n    protected onSynthesizing(audio: ArrayBuffer): void {\r\n        if (!!this.privSpeechSynthesizer.synthesizing) {\r\n            try {\r\n                const audioWithHeader = this.privSynthesisTurn.audioOutputFormat.addHeader(audio);\r\n                const ev: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(\r\n                    new SpeechSynthesisResult(\r\n                        this.privSynthesisTurn.requestId,\r\n                        ResultReason.SynthesizingAudio,\r\n                        audioWithHeader));\r\n                this.privSpeechSynthesizer.synthesizing(this.privSpeechSynthesizer, ev);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onSynthesisCancelled(result: SpeechSynthesisResult): void {\r\n        if (!!this.privSpeechSynthesizer.SynthesisCanceled) {\r\n            const cancelEvent: SpeechSynthesisEventArgs = new SpeechSynthesisEventArgs(result);\r\n            try {\r\n                this.privSpeechSynthesizer.SynthesisCanceled(this.privSpeechSynthesizer, cancelEvent);\r\n                /* eslint-disable no-empty */\r\n            } catch { }\r\n        }\r\n    }\r\n\r\n    protected onSynthesisCompleted(result: SpeechSynthesisResult): void {\r\n        if (this.privSpeechSynthesizer.synthesisCompleted) {\r\n            try {\r\n                this.privSpeechSynthesizer.synthesisCompleted(\r\n                    this.privSpeechSynthesizer,\r\n                    new SpeechSynthesisEventArgs(result)\r\n                );\r\n            } catch (e) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onWordBoundary(wordBoundaryEventArgs: SpeechSynthesisWordBoundaryEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.wordBoundary) {\r\n            try {\r\n                this.privSpeechSynthesizer.wordBoundary(this.privSpeechSynthesizer, wordBoundaryEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onVisemeReceived(visemeEventArgs: SpeechSynthesisVisemeEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.visemeReceived) {\r\n            try {\r\n                this.privSpeechSynthesizer.visemeReceived(this.privSpeechSynthesizer, visemeEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onBookmarkReached(bookmarkEventArgs: SpeechSynthesisBookmarkEventArgs): void {\r\n        if (!!this.privSpeechSynthesizer.bookmarkReached) {\r\n            try {\r\n                this.privSpeechSynthesizer.bookmarkReached(this.privSpeechSynthesizer, bookmarkEventArgs);\r\n            } catch (error) {\r\n                // Not going to let errors in the event handler\r\n                // trip things up.\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}