{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError } from 'openai/error';\nimport { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n  constructor() {\n    super(...arguments);\n    _ChatCompletionStream_instances.add(this);\n    _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n  }\n  get currentChatCompletionSnapshot() {\n    return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n  }\n  /**\n   * Intended for use on the frontend, consuming a stream produced with\n   * `.toReadableStream()` on the backend.\n   *\n   * Note that messages sent to the model do not appear in `.on('message')`\n   * in this context.\n   */\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStream();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n  static createChatCompletion(completions, params, options) {\n    const runner = new ChatCompletionStream();\n    runner._run(() => runner._runChatCompletion(completions, {\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      headers: {\n        ...options?.headers,\n        'X-Stainless-Helper-Method': 'stream'\n      }\n    }));\n    return runner;\n  }\n  async _createChatCompletion(completions, params, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    const stream = await completions.create({\n      ...params,\n      stream: true\n    }, {\n      ...options,\n      signal: this.controller.signal\n    });\n    this._connected();\n    for await (const chunk of stream) {\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  async _fromReadableStream(readableStream, options) {\n    const signal = options?.signal;\n    if (signal) {\n      if (signal.aborted) this.controller.abort();\n      signal.addEventListener('abort', () => this.controller.abort());\n    }\n    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n    this._connected();\n    const stream = Stream.fromReadableStream(readableStream, this.controller);\n    let chatId;\n    for await (const chunk of stream) {\n      if (chatId && chatId !== chunk.id) {\n        // A new request has been made.\n        this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n      }\n      __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n      chatId = chunk.id;\n    }\n    if (stream.controller.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n    return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n  }\n  [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n    if (this.ended) return;\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n  }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n    if (this.ended) return;\n    const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n    this._emit('chunk', chunk, completion);\n    const delta = chunk.choices[0]?.delta?.content;\n    const snapshot = completion.choices[0]?.message;\n    if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n      this._emit('content', delta, snapshot.content);\n    }\n  }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n    if (this.ended) {\n      throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    if (!snapshot) {\n      throw new OpenAIError(`request ended without sending any chunks`);\n    }\n    __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    return finalizeChatCompletion(snapshot);\n  }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n    var _a, _b;\n    let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    const {\n      choices,\n      ...rest\n    } = chunk;\n    if (!snapshot) {\n      snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n        ...rest,\n        choices: []\n      }, \"f\");\n    } else {\n      Object.assign(snapshot, rest);\n    }\n    for (const {\n      delta,\n      finish_reason,\n      index,\n      ...other\n    } of chunk.choices) {\n      let choice = snapshot.choices[index];\n      if (!choice) {\n        snapshot.choices[index] = {\n          finish_reason,\n          index,\n          message: delta,\n          ...other\n        };\n        continue;\n      }\n      if (finish_reason) choice.finish_reason = finish_reason;\n      Object.assign(choice, other);\n      if (!delta) continue; // Shouldn't happen; just in case.\n      const {\n        content,\n        function_call,\n        role,\n        tool_calls\n      } = delta;\n      if (content) choice.message.content = (choice.message.content || '') + content;\n      if (role) choice.message.role = role;\n      if (function_call) {\n        if (!choice.message.function_call) {\n          choice.message.function_call = function_call;\n        } else {\n          if (function_call.name) choice.message.function_call.name = function_call.name;\n          if (function_call.arguments) {\n            (_a = choice.message.function_call).arguments ?? (_a.arguments = '');\n            choice.message.function_call.arguments += function_call.arguments;\n          }\n        }\n      }\n      if (tool_calls) {\n        if (!choice.message.tool_calls) choice.message.tool_calls = [];\n        for (const {\n          index,\n          id,\n          type,\n          function: fn\n        } of tool_calls) {\n          const tool_call = (_b = choice.message.tool_calls)[index] ?? (_b[index] = {});\n          if (id) tool_call.id = id;\n          if (type) tool_call.type = type;\n          if (fn) tool_call.function ?? (tool_call.function = {\n            arguments: ''\n          });\n          if (fn?.name) tool_call.function.name = fn.name;\n          if (fn?.arguments) tool_call.function.arguments += fn.arguments;\n        }\n      }\n    }\n    return snapshot;\n  }, Symbol.asyncIterator)]() {\n    const pushQueue = [];\n    const readQueue = [];\n    let done = false;\n    this.on('chunk', chunk => {\n      const reader = readQueue.shift();\n      if (reader) {\n        reader(chunk);\n      } else {\n        pushQueue.push(chunk);\n      }\n    });\n    this.on('end', () => {\n      done = true;\n      for (const reader of readQueue) {\n        reader(undefined);\n      }\n      readQueue.length = 0;\n    });\n    return {\n      next: async () => {\n        if (!pushQueue.length) {\n          if (done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n          return new Promise(resolve => readQueue.push(resolve)).then(chunk => chunk ? {\n            value: chunk,\n            done: false\n          } : {\n            value: undefined,\n            done: true\n          });\n        }\n        const chunk = pushQueue.shift();\n        return {\n          value: chunk,\n          done: false\n        };\n      }\n    };\n  }\n  toReadableStream() {\n    const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n    return stream.toReadableStream();\n  }\n}\nfunction finalizeChatCompletion(snapshot) {\n  const {\n    id,\n    choices,\n    created,\n    model\n  } = snapshot;\n  return {\n    id,\n    choices: choices.map(({\n      message,\n      finish_reason,\n      index\n    }) => {\n      if (!finish_reason) throw new OpenAIError(`missing finish_reason for choice ${index}`);\n      const {\n        content = null,\n        function_call,\n        tool_calls\n      } = message;\n      const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n      if (!role) throw new OpenAIError(`missing role for choice ${index}`);\n      if (function_call) {\n        const {\n          arguments: args,\n          name\n        } = function_call;\n        if (args == null) throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n        if (!name) throw new OpenAIError(`missing function_call.name for choice ${index}`);\n        return {\n          message: {\n            content,\n            function_call: {\n              arguments: args,\n              name\n            },\n            role\n          },\n          finish_reason,\n          index\n        };\n      }\n      if (tool_calls) {\n        return {\n          index,\n          finish_reason,\n          message: {\n            role,\n            content,\n            tool_calls: tool_calls.map((tool_call, i) => {\n              const {\n                function: fn,\n                type,\n                id\n              } = tool_call;\n              const {\n                arguments: args,\n                name\n              } = fn || {};\n              if (id == null) throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n              if (type == null) throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n              if (name == null) throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n              if (args == null) throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n              return {\n                id,\n                type,\n                function: {\n                  name,\n                  arguments: args\n                }\n              };\n            })\n          }\n        };\n      }\n      return {\n        message: {\n          content: content,\n          role\n        },\n        finish_reason,\n        index\n      };\n    }),\n    created,\n    model,\n    object: 'chat.completion'\n  };\n}\nfunction str(x) {\n  return JSON.stringify(x);\n}","map":{"version":3,"names":["OpenAIError","APIUserAbortError","AbstractChatCompletionRunner","Stream","ChatCompletionStream","constructor","_ChatCompletionStream_currentChatCompletionSnapshot","set","currentChatCompletionSnapshot","__classPrivateFieldGet","fromReadableStream","stream","runner","_run","_fromReadableStream","createChatCompletion","completions","params","options","_runChatCompletion","headers","_createChatCompletion","signal","aborted","controller","abort","addEventListener","_ChatCompletionStream_instances","_ChatCompletionStream_beginRequest","call","create","_connected","chunk","_ChatCompletionStream_addChunk","_addChatCompletion","_ChatCompletionStream_endRequest","readableStream","chatId","id","WeakMap","WeakSet","ended","__classPrivateFieldSet","undefined","completion","_ChatCompletionStream_accumulateChatCompletion","_emit","delta","choices","content","snapshot","message","role","finalizeChatCompletion","rest","Object","assign","finish_reason","index","other","choice","function_call","tool_calls","name","arguments","_a","type","function","fn","tool_call","_b","Symbol","asyncIterator","pushQueue","readQueue","done","on","reader","shift","push","length","next","value","Promise","resolve","then","toReadableStream","bind","created","model","map","args","i","str","object","x","JSON","stringify"],"sources":["../src/lib/ChatCompletionStream.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}