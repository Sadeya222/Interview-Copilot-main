{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports.js\";\nimport { NoMatchReason } from \"./Exports.js\";\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\nexport class NoMatchDetails {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {NoMatchReason} reason - The no-match reason.\n   */\n  constructor(reason) {\n    this.privReason = reason;\n  }\n  /**\n   * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n   * @member NoMatchDetails.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n   * result - The recognition result that was not recognized.\n   * @returns {NoMatchDetails} The no match details object being created.\n   */\n  static fromResult(result) {\n    const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n    let reason = NoMatchReason.NotRecognized;\n    switch (simpleSpeech.RecognitionStatus) {\n      case RecognitionStatus.BabbleTimeout:\n        reason = NoMatchReason.InitialBabbleTimeout;\n        break;\n      case RecognitionStatus.InitialSilenceTimeout:\n        reason = NoMatchReason.InitialSilenceTimeout;\n        break;\n      default:\n        reason = NoMatchReason.NotRecognized;\n        break;\n    }\n    return new NoMatchDetails(reason);\n  }\n  /**\n   * The reason the recognition was canceled.\n   * @member NoMatchDetails.prototype.reason\n   * @function\n   * @public\n   * @returns {NoMatchReason} Specifies the reason canceled.\n   */\n  get reason() {\n    return this.privReason;\n  }\n}","map":{"version":3,"names":["RecognitionStatus","SimpleSpeechPhrase","NoMatchReason","NoMatchDetails","constructor","reason","privReason","fromResult","result","simpleSpeech","fromJSON","json","NotRecognized","BabbleTimeout","InitialBabbleTimeout","InitialSilenceTimeout"],"sources":["src/sdk/NoMatchDetails.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports.js\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     * result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,iBAAiB,EAAEC,kBAAkB,QAAQ,oCAAoC;AAC1F,SAAkCC,aAAa,QAA+D,cAAc;AAE5H;;;;AAIA,OAAM,MAAOC,cAAc;EAGvB;;;;;EAKAC,YAAoBC,MAAqB;IACrC,IAAI,CAACC,UAAU,GAAGD,MAAM;EAC5B;EAEA;;;;;;;;;EASO,OAAOE,UAAUA,CAACC,MAAwF;IAC7G,MAAMC,YAAY,GAAuBR,kBAAkB,CAACS,QAAQ,CAACF,MAAM,CAACG,IAAI,CAAC;IAEjF,IAAIN,MAAM,GAAkBH,aAAa,CAACU,aAAa;IAEvD,QAAQH,YAAY,CAACT,iBAAiB;MAClC,KAAKA,iBAAiB,CAACa,aAAa;QAChCR,MAAM,GAAGH,aAAa,CAACY,oBAAoB;QAC3C;MACJ,KAAKd,iBAAiB,CAACe,qBAAqB;QACxCV,MAAM,GAAGH,aAAa,CAACa,qBAAqB;QAC5C;MACJ;QACIV,MAAM,GAAGH,aAAa,CAACU,aAAa;QACpC;;IAGR,OAAO,IAAIT,cAAc,CAACE,MAAM,CAAC;EACrC;EAEA;;;;;;;EAOA,IAAWA,MAAMA,CAAA;IACb,OAAO,IAAI,CAACC,UAAU;EAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}