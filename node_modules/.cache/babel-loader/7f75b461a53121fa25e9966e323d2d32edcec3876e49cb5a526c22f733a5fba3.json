{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nconst parseSpeechResponse = json => JSON.parse(json);\nconst parseTextResponse = json => JSON.parse(json);\nexport class SpeechResponsePayload {\n  constructor(json) {\n    this.privSpeechResponse = parseSpeechResponse(json);\n  }\n  get recognition() {\n    return this.privSpeechResponse.recognition;\n  }\n  get translations() {\n    return this.privSpeechResponse.translations;\n  }\n  get id() {\n    return this.privSpeechResponse.id;\n  }\n  get language() {\n    return this.privSpeechResponse.language;\n  }\n  get nickname() {\n    return this.privSpeechResponse.nickname;\n  }\n  get participantId() {\n    return this.privSpeechResponse.participantId;\n  }\n  get roomid() {\n    return this.privSpeechResponse.roomid;\n  }\n  get timestamp() {\n    return this.privSpeechResponse.timestamp;\n  }\n  get type() {\n    return this.privSpeechResponse.type;\n  }\n  get isFinal() {\n    return this.privSpeechResponse.type === \"final\";\n  }\n  static fromJSON(json) {\n    return new SpeechResponsePayload(json);\n  }\n}\nexport class TextResponsePayload {\n  constructor(json) {\n    this.privTextResponse = parseTextResponse(json);\n  }\n  get originalText() {\n    return this.privTextResponse.originalText;\n  }\n  get translations() {\n    return this.privTextResponse.translations;\n  }\n  get id() {\n    return this.privTextResponse.id;\n  }\n  get language() {\n    return this.privTextResponse.language;\n  }\n  get nickname() {\n    return this.privTextResponse.nickname;\n  }\n  get participantId() {\n    return this.privTextResponse.participantId;\n  }\n  get roomid() {\n    return this.privTextResponse.roomid;\n  }\n  get timestamp() {\n    return this.privTextResponse.timestamp;\n  }\n  get type() {\n    return this.privTextResponse.type;\n  }\n  static fromJSON(json) {\n    return new TextResponsePayload(json);\n  }\n}","map":{"version":3,"names":["parseSpeechResponse","json","JSON","parse","parseTextResponse","SpeechResponsePayload","constructor","privSpeechResponse","recognition","translations","id","language","nickname","participantId","roomid","timestamp","type","isFinal","fromJSON","TextResponsePayload","privTextResponse","originalText"],"sources":["src/common.speech/Transcription/ServiceMessages/TranslationResponsePayload.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\n/**\r\n * Defines the payload for incoming translation messages\r\n */\r\nexport interface ITranslationResponsePayload {\r\n    lang: string;\r\n    translation: string;\r\n}\r\n\r\nexport interface ITranslationCommandMessage {\r\n    translations: ITranslationResponsePayload[];\r\n    id: string;\r\n    language: string;\r\n    nickname: string;\r\n    participantId: string;\r\n    roomid: string;\r\n    timestamp: string;\r\n    type: string;\r\n}\r\n\r\nexport interface ISpeechResponsePayload extends ITranslationCommandMessage {\r\n    recognition: string;\r\n    isFinal: boolean;\r\n}\r\n\r\nexport interface ITextResponsePayload extends ITranslationCommandMessage {\r\n    originalText: string;\r\n}\r\n\r\nconst parseSpeechResponse = (json: string): ISpeechResponsePayload => JSON.parse(json) as ISpeechResponsePayload;\r\nconst parseTextResponse = (json: string): ITextResponsePayload => JSON.parse(json) as ITextResponsePayload;\r\n\r\nexport class SpeechResponsePayload implements ISpeechResponsePayload {\r\n\r\n    private privSpeechResponse: ISpeechResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechResponse = parseSpeechResponse(json);\r\n    }\r\n\r\n    public get recognition(): string {\r\n        return this.privSpeechResponse.recognition;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privSpeechResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privSpeechResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privSpeechResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privSpeechResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privSpeechResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privSpeechResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privSpeechResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privSpeechResponse.type;\r\n    }\r\n\r\n    public get isFinal(): boolean {\r\n        return this.privSpeechResponse.type === \"final\";\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechResponsePayload {\r\n        return new SpeechResponsePayload(json);\r\n    }\r\n\r\n}\r\n\r\nexport class TextResponsePayload implements ITextResponsePayload {\r\n\r\n    private privTextResponse: ITextResponsePayload;\r\n\r\n    private constructor(json: string) {\r\n        this.privTextResponse = parseTextResponse(json);\r\n    }\r\n\r\n    public get originalText(): string {\r\n        return this.privTextResponse.originalText;\r\n    }\r\n\r\n    public get translations(): ITranslationResponsePayload[] {\r\n        return this.privTextResponse.translations;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privTextResponse.id;\r\n    }\r\n\r\n    public get language(): string {\r\n        return this.privTextResponse.language;\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privTextResponse.nickname;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privTextResponse.participantId;\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privTextResponse.roomid;\r\n    }\r\n\r\n    public get timestamp(): string {\r\n        return this.privTextResponse.timestamp;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privTextResponse.type;\r\n    }\r\n\r\n    public static fromJSON(json: string): TextResponsePayload {\r\n        return new TextResponsePayload(json);\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA;AACA;AA+BA,MAAMA,mBAAmB,GAAIC,IAAY,IAA6BC,IAAI,CAACC,KAAK,CAACF,IAAI,CAA2B;AAChH,MAAMG,iBAAiB,GAAIH,IAAY,IAA2BC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAyB;AAE1G,OAAM,MAAOI,qBAAqB;EAI9BC,YAAoBL,IAAY;IAC5B,IAAI,CAACM,kBAAkB,GAAGP,mBAAmB,CAACC,IAAI,CAAC;EACvD;EAEA,IAAWO,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACD,kBAAkB,CAACC,WAAW;EAC9C;EAEA,IAAWC,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACF,kBAAkB,CAACE,YAAY;EAC/C;EAEA,IAAWC,EAAEA,CAAA;IACT,OAAO,IAAI,CAACH,kBAAkB,CAACG,EAAE;EACrC;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACJ,kBAAkB,CAACI,QAAQ;EAC3C;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACL,kBAAkB,CAACK,QAAQ;EAC3C;EAEA,IAAWC,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACN,kBAAkB,CAACM,aAAa;EAChD;EAEA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACP,kBAAkB,CAACO,MAAM;EACzC;EAEA,IAAWC,SAASA,CAAA;IAChB,OAAO,IAAI,CAACR,kBAAkB,CAACQ,SAAS;EAC5C;EAEA,IAAWC,IAAIA,CAAA;IACX,OAAO,IAAI,CAACT,kBAAkB,CAACS,IAAI;EACvC;EAEA,IAAWC,OAAOA,CAAA;IACd,OAAO,IAAI,CAACV,kBAAkB,CAACS,IAAI,KAAK,OAAO;EACnD;EAEO,OAAOE,QAAQA,CAACjB,IAAY;IAC/B,OAAO,IAAII,qBAAqB,CAACJ,IAAI,CAAC;EAC1C;;AAIJ,OAAM,MAAOkB,mBAAmB;EAI5Bb,YAAoBL,IAAY;IAC5B,IAAI,CAACmB,gBAAgB,GAAGhB,iBAAiB,CAACH,IAAI,CAAC;EACnD;EAEA,IAAWoB,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACD,gBAAgB,CAACC,YAAY;EAC7C;EAEA,IAAWZ,YAAYA,CAAA;IACnB,OAAO,IAAI,CAACW,gBAAgB,CAACX,YAAY;EAC7C;EAEA,IAAWC,EAAEA,CAAA;IACT,OAAO,IAAI,CAACU,gBAAgB,CAACV,EAAE;EACnC;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACS,gBAAgB,CAACT,QAAQ;EACzC;EAEA,IAAWC,QAAQA,CAAA;IACf,OAAO,IAAI,CAACQ,gBAAgB,CAACR,QAAQ;EACzC;EAEA,IAAWC,aAAaA,CAAA;IACpB,OAAO,IAAI,CAACO,gBAAgB,CAACP,aAAa;EAC9C;EAEA,IAAWC,MAAMA,CAAA;IACb,OAAO,IAAI,CAACM,gBAAgB,CAACN,MAAM;EACvC;EAEA,IAAWC,SAASA,CAAA;IAChB,OAAO,IAAI,CAACK,gBAAgB,CAACL,SAAS;EAC1C;EAEA,IAAWC,IAAIA,CAAA;IACX,OAAO,IAAI,CAACI,gBAAgB,CAACJ,IAAI;EACrC;EAEO,OAAOE,QAAQA,CAACjB,IAAY;IAC/B,OAAO,IAAIkB,mBAAmB,CAAClB,IAAI,CAAC;EACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}