{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Contracts } from \"./Contracts.js\";\n/**\n * Output format\n * @class AutoDetectSourceLanguageResult\n */\nexport class AutoDetectSourceLanguageResult {\n  constructor(language, languageDetectionConfidence) {\n    Contracts.throwIfNullOrUndefined(language, \"language\");\n    Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\n    this.privLanguage = language;\n    this.privLanguageDetectionConfidence = languageDetectionConfidence;\n  }\n  /**\n   * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\n   * @member AutoDetectSourceLanguageResult.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult} result - The recognition result.\n   * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n   */\n  static fromResult(result) {\n    return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n  }\n  /**\n   * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\n   * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\n   * @function\n   * @public\n   * @param {ConversationTranscriptionResult} result - The transcription result.\n   * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\n   */\n  static fromConversationTranscriptionResult(result) {\n    return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\n  }\n  get language() {\n    return this.privLanguage;\n  }\n  get languageDetectionConfidence() {\n    return this.privLanguageDetectionConfidence;\n  }\n}","map":{"version":3,"names":["Contracts","AutoDetectSourceLanguageResult","constructor","language","languageDetectionConfidence","throwIfNullOrUndefined","privLanguage","privLanguageDetectionConfidence","fromResult","result","fromConversationTranscriptionResult"],"sources":["src/sdk/AutoDetectSourceLanguageResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { Contracts } from \"./Contracts.js\";\r\nimport {\r\n    SpeechRecognitionResult,\r\n    ConversationTranscriptionResult\r\n} from \"./Exports.js\";\r\n\r\n/**\r\n * Output format\r\n * @class AutoDetectSourceLanguageResult\r\n */\r\nexport class AutoDetectSourceLanguageResult {\r\n\r\n    private privLanguage: string;\r\n    private privLanguageDetectionConfidence: string;\r\n\r\n    private constructor(language: string, languageDetectionConfidence: string) {\r\n        Contracts.throwIfNullOrUndefined(language, \"language\");\r\n        Contracts.throwIfNullOrUndefined(languageDetectionConfidence, \"languageDetectionConfidence\");\r\n        this.privLanguage = language;\r\n        this.privLanguageDetectionConfidence = languageDetectionConfidence;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a SpeechRecognitionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult} result - The recognition result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult): AutoDetectSourceLanguageResult {\r\n        return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of AutoDetectSourceLanguageResult object from a ConversationTranscriptionResult instance.\r\n     * @member AutoDetectSourceLanguageResult.fromConversationTranscriptionResult\r\n     * @function\r\n     * @public\r\n     * @param {ConversationTranscriptionResult} result - The transcription result.\r\n     * @returns {AutoDetectSourceLanguageResult} AutoDetectSourceLanguageResult object being created.\r\n     */\r\n        public static fromConversationTranscriptionResult(result: ConversationTranscriptionResult): AutoDetectSourceLanguageResult {\r\n            return new AutoDetectSourceLanguageResult(result.language, result.languageDetectionConfidence);\r\n        }\r\n\r\n    public get language(): string {\r\n        return this.privLanguage;\r\n    }\r\n\r\n    public get languageDetectionConfidence(): string {\r\n        return this.privLanguageDetectionConfidence;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA,SAASA,SAAS,QAAQ,gBAAgB;AAM1C;;;;AAIA,OAAM,MAAOC,8BAA8B;EAKvCC,YAAoBC,QAAgB,EAAEC,2BAAmC;IACrEJ,SAAS,CAACK,sBAAsB,CAACF,QAAQ,EAAE,UAAU,CAAC;IACtDH,SAAS,CAACK,sBAAsB,CAACD,2BAA2B,EAAE,6BAA6B,CAAC;IAC5F,IAAI,CAACE,YAAY,GAAGH,QAAQ;IAC5B,IAAI,CAACI,+BAA+B,GAAGH,2BAA2B;EACtE;EAEA;;;;;;;;EAQO,OAAOI,UAAUA,CAACC,MAA+B;IACpD,OAAO,IAAIR,8BAA8B,CAACQ,MAAM,CAACN,QAAQ,EAAEM,MAAM,CAACL,2BAA2B,CAAC;EAClG;EAEA;;;;;;;;EAQW,OAAOM,mCAAmCA,CAACD,MAAuC;IACrF,OAAO,IAAIR,8BAA8B,CAACQ,MAAM,CAACN,QAAQ,EAAEM,MAAM,CAACL,2BAA2B,CAAC;EAClG;EAEJ,IAAWD,QAAQA,CAAA;IACf,OAAO,IAAI,CAACG,YAAY;EAC5B;EAEA,IAAWF,2BAA2BA,CAAA;IAClC,OAAO,IAAI,CAACG,+BAA+B;EAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}