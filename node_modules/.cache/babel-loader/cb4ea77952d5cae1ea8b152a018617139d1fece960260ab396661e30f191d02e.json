{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class SpeechDetected {\n  constructor(json) {\n    this.privSpeechStartDetected = JSON.parse(json);\n  }\n  static fromJSON(json) {\n    return new SpeechDetected(json);\n  }\n  get Offset() {\n    return this.privSpeechStartDetected.Offset;\n  }\n}","map":{"version":3,"names":["SpeechDetected","constructor","json","privSpeechStartDetected","JSON","parse","fromJSON","Offset"],"sources":["src/common.speech/ServiceMessages/SpeechDetected.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n// speech.endDetected\r\nexport interface ISpeechDetected {\r\n    Offset: number;\r\n}\r\n\r\nexport class SpeechDetected implements ISpeechDetected {\r\n    private privSpeechStartDetected: ISpeechDetected;\r\n\r\n    private constructor(json: string) {\r\n        this.privSpeechStartDetected = JSON.parse(json) as ISpeechDetected;\r\n    }\r\n\r\n    public static fromJSON(json: string): SpeechDetected {\r\n        return new SpeechDetected(json);\r\n    }\r\n\r\n    public get Offset(): number {\r\n        return this.privSpeechStartDetected.Offset;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AAOA,OAAM,MAAOA,cAAc;EAGvBC,YAAoBC,IAAY;IAC5B,IAAI,CAACC,uBAAuB,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAoB;EACtE;EAEO,OAAOI,QAAQA,CAACJ,IAAY;IAC/B,OAAO,IAAIF,cAAc,CAACE,IAAI,CAAC;EACnC;EAEA,IAAWK,MAAMA,CAAA;IACb,OAAO,IAAI,CAACJ,uBAAuB,CAACI,MAAM;EAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}