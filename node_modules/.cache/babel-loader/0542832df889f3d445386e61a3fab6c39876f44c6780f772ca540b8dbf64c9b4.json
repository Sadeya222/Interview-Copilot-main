{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {}\nexport class APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    const data = error;\n    this.error = data;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse?.['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined;\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({\n    message\n  } = {}) {\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n}\nexport class AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n}\nexport class PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n}\nexport class NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n}\nexport class ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n}\nexport class UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n}\nexport class RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n}\nexport class InternalServerError extends APIError {}","map":{"version":3,"names":["castToError","OpenAIError","Error","APIError","constructor","status","error","message","headers","makeMessage","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError"],"sources":["src/error.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}