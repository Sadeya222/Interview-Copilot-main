{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport * as fs from \"fs\";\nimport { LogLevel } from \"../sdk/LogLevel.js\";\nimport { Contracts } from \"../sdk/Contracts.js\";\nexport class ConsoleLoggingListener {\n  constructor(logLevelFilter = LogLevel.None) {\n    this.privLogPath = undefined;\n    this.privEnableConsoleOutput = true;\n    this.privLogLevelFilter = logLevelFilter;\n  }\n  set logPath(path) {\n    Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\n    this.privLogPath = path;\n  }\n  set enableConsoleOutput(enableOutput) {\n    this.privEnableConsoleOutput = enableOutput;\n  }\n  onEvent(event) {\n    if (event.eventType >= this.privLogLevelFilter) {\n      const log = this.toString(event);\n      if (!!this.privLogPath) {\n        fs.writeFileSync(this.privLogPath, log + \"\\n\", {\n          flag: \"a+\"\n        });\n      }\n      if (this.privEnableConsoleOutput) {\n        switch (event.eventType) {\n          case LogLevel.Debug:\n            // eslint-disable-next-line no-console\n            console.debug(log);\n            break;\n          case LogLevel.Info:\n            // eslint-disable-next-line no-console\n            console.info(log);\n            break;\n          case LogLevel.Warning:\n            // eslint-disable-next-line no-console\n            console.warn(log);\n            break;\n          case LogLevel.Error:\n            // eslint-disable-next-line no-console\n            console.error(log);\n            break;\n          default:\n            // eslint-disable-next-line no-console\n            console.log(log);\n            break;\n        }\n      }\n    }\n  }\n  toString(event) {\n    const logFragments = [`${event.eventTime}`, `${event.name}`];\n    const e = event;\n    for (const prop in e) {\n      if (prop && event.hasOwnProperty(prop) && prop !== \"eventTime\" && prop !== \"eventType\" && prop !== \"eventId\" && prop !== \"name\" && prop !== \"constructor\") {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        const value = e[prop];\n        let valueToLog = \"<NULL>\";\n        if (value !== undefined && value !== null) {\n          if (typeof value === \"number\" || typeof value === \"string\") {\n            valueToLog = value.toString();\n          } else {\n            valueToLog = JSON.stringify(value);\n          }\n        }\n        logFragments.push(`${prop}: ${valueToLog}`);\n      }\n    }\n    return logFragments.join(\" | \");\n  }\n}","map":{"version":3,"names":["fs","LogLevel","Contracts","ConsoleLoggingListener","constructor","logLevelFilter","None","privLogPath","undefined","privEnableConsoleOutput","privLogLevelFilter","logPath","path","throwIfNullOrUndefined","openSync","enableConsoleOutput","enableOutput","onEvent","event","eventType","log","toString","writeFileSync","flag","Debug","console","debug","Info","info","Warning","warn","Error","error","logFragments","eventTime","name","e","prop","hasOwnProperty","value","valueToLog","JSON","stringify","push","join"],"sources":["src/common.browser/ConsoleLoggingListener.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\r\n// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport * as fs from \"fs\";\r\nimport { LogLevel } from \"../sdk/LogLevel.js\";\r\nimport { IEventListener, PlatformEvent } from \"../common/Exports.js\";\r\nimport { Contracts } from \"../sdk/Contracts.js\";\r\n\r\nexport class ConsoleLoggingListener implements IEventListener<PlatformEvent> {\r\n    private privLogLevelFilter: LogLevel;\r\n    private privLogPath: fs.PathLike = undefined;\r\n    private privEnableConsoleOutput: boolean = true;\r\n\r\n    public constructor(logLevelFilter: LogLevel = LogLevel.None) { // Console output disabled by default\r\n        this.privLogLevelFilter = logLevelFilter;\r\n    }\r\n\r\n    public set logPath(path: fs.PathLike) {\r\n        Contracts.throwIfNullOrUndefined(fs.openSync, \"\\nFile System access not available\");\r\n        this.privLogPath = path;\r\n    }\r\n\r\n    public set enableConsoleOutput(enableOutput: boolean) {\r\n        this.privEnableConsoleOutput = enableOutput;\r\n    }\r\n\r\n    public onEvent(event: PlatformEvent): void {\r\n        if (event.eventType >= this.privLogLevelFilter) {\r\n            const log = this.toString(event);\r\n            if (!!this.privLogPath) {\r\n                fs.writeFileSync(this.privLogPath, log + \"\\n\", { flag: \"a+\" });\r\n            }\r\n\r\n            if (this.privEnableConsoleOutput) {\r\n                switch (event.eventType) {\r\n                    case LogLevel.Debug:\r\n                        // eslint-disable-next-line no-console\r\n                        console.debug(log);\r\n                        break;\r\n                    case LogLevel.Info:\r\n                        // eslint-disable-next-line no-console\r\n                        console.info(log);\r\n                        break;\r\n                    case LogLevel.Warning:\r\n                        // eslint-disable-next-line no-console\r\n                        console.warn(log);\r\n                        break;\r\n                    case LogLevel.Error:\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(log);\r\n                        break;\r\n                    default:\r\n                        // eslint-disable-next-line no-console\r\n                        console.log(log);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private toString(event: PlatformEvent): string {\r\n        const logFragments = [\r\n            `${event.eventTime}`,\r\n            `${event.name}`,\r\n        ];\r\n\r\n        const e: any = event as any;\r\n        for (const prop in e) {\r\n            if (prop && event.hasOwnProperty(prop) &&\r\n                prop !== \"eventTime\" && prop !== \"eventType\" &&\r\n                prop !== \"eventId\" && prop !== \"name\" &&\r\n                prop !== \"constructor\") {\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                const value = e[prop];\r\n                let valueToLog = \"<NULL>\";\r\n                if (value !== undefined && value !== null) {\r\n                    if (typeof (value) === \"number\" || typeof (value) === \"string\") {\r\n                        valueToLog = value.toString();\r\n                    } else {\r\n                        valueToLog = JSON.stringify(value);\r\n                    }\r\n                }\r\n\r\n                logFragments.push(`${prop}: ${valueToLog}`);\r\n            }\r\n\r\n        }\r\n\r\n        return logFragments.join(\" | \");\r\n    }\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AAEA,OAAO,KAAKA,EAAE,MAAM,IAAI;AACxB,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAM,MAAOC,sBAAsB;EAK/BC,YAAmBC,cAAA,GAA2BJ,QAAQ,CAACK,IAAI;IAHnD,KAAAC,WAAW,GAAgBC,SAAS;IACpC,KAAAC,uBAAuB,GAAY,IAAI;IAG3C,IAAI,CAACC,kBAAkB,GAAGL,cAAc;EAC5C;EAEA,IAAWM,OAAOA,CAACC,IAAiB;IAChCV,SAAS,CAACW,sBAAsB,CAACb,EAAE,CAACc,QAAQ,EAAE,oCAAoC,CAAC;IACnF,IAAI,CAACP,WAAW,GAAGK,IAAI;EAC3B;EAEA,IAAWG,mBAAmBA,CAACC,YAAqB;IAChD,IAAI,CAACP,uBAAuB,GAAGO,YAAY;EAC/C;EAEOC,OAAOA,CAACC,KAAoB;IAC/B,IAAIA,KAAK,CAACC,SAAS,IAAI,IAAI,CAACT,kBAAkB,EAAE;MAC5C,MAAMU,GAAG,GAAG,IAAI,CAACC,QAAQ,CAACH,KAAK,CAAC;MAChC,IAAI,CAAC,CAAC,IAAI,CAACX,WAAW,EAAE;QACpBP,EAAE,CAACsB,aAAa,CAAC,IAAI,CAACf,WAAW,EAAEa,GAAG,GAAG,IAAI,EAAE;UAAEG,IAAI,EAAE;QAAI,CAAE,CAAC;;MAGlE,IAAI,IAAI,CAACd,uBAAuB,EAAE;QAC9B,QAAQS,KAAK,CAACC,SAAS;UACnB,KAAKlB,QAAQ,CAACuB,KAAK;YACf;YACAC,OAAO,CAACC,KAAK,CAACN,GAAG,CAAC;YAClB;UACJ,KAAKnB,QAAQ,CAAC0B,IAAI;YACd;YACAF,OAAO,CAACG,IAAI,CAACR,GAAG,CAAC;YACjB;UACJ,KAAKnB,QAAQ,CAAC4B,OAAO;YACjB;YACAJ,OAAO,CAACK,IAAI,CAACV,GAAG,CAAC;YACjB;UACJ,KAAKnB,QAAQ,CAAC8B,KAAK;YACf;YACAN,OAAO,CAACO,KAAK,CAACZ,GAAG,CAAC;YAClB;UACJ;YACI;YACAK,OAAO,CAACL,GAAG,CAACA,GAAG,CAAC;YAChB;;;;EAIpB;EAEQC,QAAQA,CAACH,KAAoB;IACjC,MAAMe,YAAY,GAAG,CACjB,GAAGf,KAAK,CAACgB,SAAS,EAAE,EACpB,GAAGhB,KAAK,CAACiB,IAAI,EAAE,CAClB;IAED,MAAMC,CAAC,GAAQlB,KAAY;IAC3B,KAAK,MAAMmB,IAAI,IAAID,CAAC,EAAE;MAClB,IAAIC,IAAI,IAAInB,KAAK,CAACoB,cAAc,CAACD,IAAI,CAAC,IAClCA,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,WAAW,IAC5CA,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,MAAM,IACrCA,IAAI,KAAK,aAAa,EAAE;QACxB;QACA,MAAME,KAAK,GAAGH,CAAC,CAACC,IAAI,CAAC;QACrB,IAAIG,UAAU,GAAG,QAAQ;QACzB,IAAID,KAAK,KAAK/B,SAAS,IAAI+B,KAAK,KAAK,IAAI,EAAE;UACvC,IAAI,OAAQA,KAAM,KAAK,QAAQ,IAAI,OAAQA,KAAM,KAAK,QAAQ,EAAE;YAC5DC,UAAU,GAAGD,KAAK,CAAClB,QAAQ,EAAE;WAChC,MAAM;YACHmB,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;;;QAI1CN,YAAY,CAACU,IAAI,CAAC,GAAGN,IAAI,KAAKG,UAAU,EAAE,CAAC;;;IAKnD,OAAOP,YAAY,CAACW,IAAI,CAAC,KAAK,CAAC;EACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}