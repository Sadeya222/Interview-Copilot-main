{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nexport class Threads extends APIResource {\n  constructor() {\n    super(...arguments);\n    this.runs = new RunsAPI.Runs(this._client);\n    this.messages = new MessagesAPI.Messages(this._client);\n  }\n  create(body = {}, options) {\n    if (isRequestOptions(body)) {\n      return this.create({}, body);\n    }\n    return this._client.post('/threads', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves a thread.\n   */\n  retrieve(threadId, options) {\n    return this._client.get(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Modifies a thread.\n   */\n  update(threadId, body, options) {\n    return this._client.post(`/threads/${threadId}`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete a thread.\n   */\n  del(threadId, options) {\n    return this._client.delete(`/threads/${threadId}`, {\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Create a thread and run it in one request.\n   */\n  createAndRun(body, options) {\n    return this._client.post('/threads/runs', {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n}\n(function (Threads) {\n  Threads.Runs = RunsAPI.Runs;\n  Threads.RunsPage = RunsAPI.RunsPage;\n  Threads.Messages = MessagesAPI.Messages;\n  Threads.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n})(Threads || (Threads = {}));","map":{"version":3,"names":["APIResource","isRequestOptions","MessagesAPI","RunsAPI","Threads","constructor","runs","Runs","_client","messages","Messages","create","body","options","post","headers","retrieve","threadId","get","update","del","delete","createAndRun","RunsPage","ThreadMessagesPage"],"sources":["../../../src/resources/beta/threads/threads.ts"],"sourcesContent":[null],"mappings":"AAAA;SAGSA,WAAW,QAAQ,iBAAiB;SACpCC,gBAAgB,QAAQ,aAAa;OAGvC,KAAKC,WAAW,MAAM,iDAAiD;OACvE,KAAKC,OAAO,MAAM,yCAAyC;AAElE,OAAM,MAAOC,OAAQ,SAAQJ,WAAW;EAAxCK,YAAA;;IACE,KAAAC,IAAI,GAAiB,IAAIH,OAAO,CAACI,IAAI,CAAC,IAAI,CAACC,OAAO,CAAC;IACnD,KAAAC,QAAQ,GAAyB,IAAIP,WAAW,CAACQ,QAAQ,CAAC,IAAI,CAACF,OAAO,CAAC;EA8DzE;EAvDEG,MAAMA,CACJC,IAAA,GAAiD,EAAE,EACnDC,OAA6B;IAE7B,IAAIZ,gBAAgB,CAACW,IAAI,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACD,MAAM,CAAC,EAAE,EAAEC,IAAI,CAAC;;IAE9B,OAAO,IAAI,CAACJ,OAAO,CAACM,IAAI,CAAC,UAAU,EAAE;MACnCF,IAAI;MACJ,GAAGC,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAC,QAAQA,CAACC,QAAgB,EAAEJ,OAA6B;IACtD,OAAO,IAAI,CAACL,OAAO,CAACU,GAAG,CAAC,YAAYD,QAAQ,EAAE,EAAE;MAC9C,GAAGJ,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAI,MAAMA,CAACF,QAAgB,EAAEL,IAAwB,EAAEC,OAA6B;IAC9E,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAAC,YAAYG,QAAQ,EAAE,EAAE;MAC/CL,IAAI;MACJ,GAAGC,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAK,GAAGA,CAACH,QAAgB,EAAEJ,OAA6B;IACjD,OAAO,IAAI,CAACL,OAAO,CAACa,MAAM,CAAC,YAAYJ,QAAQ,EAAE,EAAE;MACjD,GAAGJ,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;EAEA;;;EAGAO,YAAYA,CAACV,IAA8B,EAAEC,OAA6B;IACxE,OAAO,IAAI,CAACL,OAAO,CAACM,IAAI,CAAC,eAAe,EAAE;MACxCF,IAAI;MACJ,GAAGC,OAAO;MACVE,OAAO,EAAE;QAAE,aAAa,EAAE,eAAe;QAAE,GAAGF,OAAO,EAAEE;MAAO;KAC/D,CAAC;EACJ;;AA0NF,WAAiBX,OAAO;EAMRA,OAAA,CAAAG,IAAI,GAAGJ,OAAO,CAACI,IAAI;EAGnBH,OAAA,CAAAmB,QAAQ,GAAGpB,OAAO,CAACoB,QAAQ;EAK3BnB,OAAA,CAAAM,QAAQ,GAAGR,WAAW,CAACQ,QAAQ;EAK/BN,OAAA,CAAAoB,kBAAkB,GAAGtB,WAAW,CAACsB,kBAAkB;AAInE,CAAC,EAvBgBpB,OAAO,KAAPA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}