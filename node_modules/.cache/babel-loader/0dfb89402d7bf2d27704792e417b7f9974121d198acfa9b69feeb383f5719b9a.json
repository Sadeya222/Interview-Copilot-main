{"ast":null,"code":"export default {\n  name: 'Timer',\n  props: {},\n  data() {\n    return {\n      start_time: 0,\n      show_text: null\n    };\n  },\n  methods: {\n    start() {\n      this.start_time = new Date().getTime();\n      this.cur_interval_pointer = setInterval(() => {\n        //更新内容\n        const time_last_seconds = parseInt((new Date().getTime() - this.start_time) / 1000);\n        this.show_text = formatTime(time_last_seconds);\n      }, 1000);\n    },\n    stop() {\n      clearInterval(this.cur_interval_pointer);\n      this.show_text = null;\n    }\n  }\n};\nfunction formatTime(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  const formattedMinutes = String(minutes).padStart(2, '0');\n  const formattedSeconds = String(remainingSeconds).padStart(2, '0');\n  return `${formattedMinutes}:${formattedSeconds}`;\n}","map":{"version":3,"names":["name","props","data","start_time","show_text","methods","start","Date","getTime","cur_interval_pointer","setInterval","time_last_seconds","parseInt","formatTime","stop","clearInterval","seconds","minutes","Math","floor","remainingSeconds","formattedMinutes","String","padStart","formattedSeconds"],"sources":["src/components/MyTimer.vue"],"sourcesContent":["<template>\n  <span>\n    {{ show_text }}\n  </span>\n</template>\n\n<script>\n\nexport default {\n  name: 'Timer',\n  props: {},\n  data() {\n    return {\n      start_time: 0,\n      show_text: null\n\n    }\n  },\n  methods: {\n    start() {\n      this.start_time = new Date().getTime()\n      this.cur_interval_pointer = setInterval(() => {\n        //更新内容\n        const time_last_seconds = parseInt((new Date().getTime() - this.start_time) / 1000)\n        this.show_text = formatTime(time_last_seconds)\n      }, 1000)\n    },\n    stop() {\n      clearInterval(this.cur_interval_pointer)\n      this.show_text = null\n    },\n  }\n}\n\nfunction formatTime(seconds) {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n\n  const formattedMinutes = String(minutes).padStart(2, '0');\n  const formattedSeconds = String(remainingSeconds).padStart(2, '0');\n\n  return `${formattedMinutes}:${formattedSeconds}`;\n}\n</script>\n<style scoped>\n\n\n</style>\n"],"mappings":"AAQA;EACAA,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,SAAA;IAEA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAH,UAAA,OAAAI,IAAA,GAAAC,OAAA;MACA,KAAAC,oBAAA,GAAAC,WAAA;QACA;QACA,MAAAC,iBAAA,GAAAC,QAAA,MAAAL,IAAA,GAAAC,OAAA,UAAAL,UAAA;QACA,KAAAC,SAAA,GAAAS,UAAA,CAAAF,iBAAA;MACA;IACA;IACAG,KAAA;MACAC,aAAA,MAAAN,oBAAA;MACA,KAAAL,SAAA;IACA;EACA;AACA;AAEA,SAAAS,WAAAG,OAAA;EACA,MAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAH,OAAA;EACA,MAAAI,gBAAA,GAAAJ,OAAA;EAEA,MAAAK,gBAAA,GAAAC,MAAA,CAAAL,OAAA,EAAAM,QAAA;EACA,MAAAC,gBAAA,GAAAF,MAAA,CAAAF,gBAAA,EAAAG,QAAA;EAEA,UAAAF,gBAAA,IAAAG,gBAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}