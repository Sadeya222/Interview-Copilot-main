{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n// Multi-device Conversation is a Preview feature.\n/* eslint-disable max-classes-per-file */\nimport { PropertyCollection } from \"../Exports.js\";\nexport class User {\n  constructor(userId) {\n    this.privUserId = userId;\n  }\n  get userId() {\n    return this.privUserId;\n  }\n}\nexport class Participant {\n  constructor(id, avatar, displayName, isHost, isMuted, isUsingTts, preferredLanguage, voice) {\n    this.privId = id;\n    this.privAvatar = avatar;\n    this.privDisplayName = displayName;\n    this.privIsHost = isHost;\n    this.privIsMuted = isMuted;\n    this.privIsUsingTts = isUsingTts;\n    this.privPreferredLanguage = preferredLanguage;\n    this.privVoice = voice;\n    this.privProperties = new PropertyCollection();\n  }\n  get avatar() {\n    return this.privAvatar;\n  }\n  get displayName() {\n    return this.privDisplayName;\n  }\n  get id() {\n    return this.privId;\n  }\n  get preferredLanguage() {\n    return this.privPreferredLanguage;\n  }\n  get isHost() {\n    return this.privIsHost;\n  }\n  get isMuted() {\n    return this.privIsMuted;\n  }\n  get isUsingTts() {\n    return this.privIsUsingTts;\n  }\n  get voice() {\n    return this.privVoice;\n  }\n  get properties() {\n    return this.privProperties;\n  }\n  static From(id, language, voice) {\n    return new Participant(id, \"\", id, false, false, false, language, voice);\n  }\n}","map":{"version":3,"names":["PropertyCollection","User","constructor","userId","privUserId","Participant","id","avatar","displayName","isHost","isMuted","isUsingTts","preferredLanguage","voice","privId","privAvatar","privDisplayName","privIsHost","privIsMuted","privIsUsingTts","privPreferredLanguage","privVoice","privProperties","properties","From","language"],"sources":["src/sdk/Transcription/IParticipant.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n// Multi-device Conversation is a Preview feature.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { PropertyCollection } from \"../Exports.js\";\r\n\r\n/**\r\n * Represents a user in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IUser {\r\n    /** Gets the user's ID */\r\n    readonly userId: string;\r\n}\r\n\r\nexport class User implements IUser {\r\n    private privUserId: string;\r\n\r\n    public constructor(userId: string) {\r\n        this.privUserId = userId;\r\n    }\r\n\r\n    public get userId(): string {\r\n        return this.privUserId;\r\n    }\r\n}\r\n\r\nexport interface VoiceSignature {\r\n    Version: number;\r\n    Tag: string;\r\n    Data: string;\r\n}\r\n\r\nexport interface TranscriptionParticipant {\r\n    /** The unique identifier for the participant. */\r\n    readonly id: string;\r\n    /** The participant's preferred spoken language. */\r\n    readonly preferredLanguage: string;\r\n    /** The participant's voice signature */\r\n    readonly voice: string;\r\n}\r\n\r\n/**\r\n * Represents a participant in a conversation.\r\n * Added in version 1.4.0\r\n */\r\nexport interface IParticipant extends TranscriptionParticipant {\r\n    /** Gets the colour of the user's avatar as an HTML hex string (e.g. FF0000 for red). */\r\n    readonly avatar: string;\r\n    /**\r\n     * The participant's display name. Please note that there may be more than one participant\r\n     * with the same name. You can use <see cref=\"Id\"/> property to tell them apart.\r\n     */\r\n    readonly displayName: string;\r\n    /** Gets whether or not this participant is the host. */\r\n    readonly isHost: boolean;\r\n    /** Gets whether or not this participant is muted. */\r\n    readonly isMuted: boolean;\r\n    /** Gets whether or not the participant is using Text To Speech (TTS). */\r\n    readonly isUsingTts: boolean;\r\n    /** Contains properties of the participant. */\r\n    readonly properties: PropertyCollection;\r\n}\r\n\r\nexport class Participant implements IParticipant {\r\n    private privAvatar: string;\r\n    private privDisplayName: string;\r\n    private privId: string;\r\n    private privIsHost: boolean;\r\n    private privIsMuted: boolean;\r\n    private privIsUsingTts: boolean;\r\n    private privPreferredLanguage: string;\r\n    private privVoice: string;\r\n    private privProperties: PropertyCollection;\r\n\r\n    public constructor(id: string, avatar: string, displayName: string, isHost: boolean, isMuted: boolean, isUsingTts: boolean, preferredLanguage: string, voice?: string) {\r\n        this.privId = id;\r\n        this.privAvatar = avatar;\r\n        this.privDisplayName = displayName;\r\n        this.privIsHost = isHost;\r\n        this.privIsMuted = isMuted;\r\n        this.privIsUsingTts = isUsingTts;\r\n        this.privPreferredLanguage = preferredLanguage;\r\n        this.privVoice = voice;\r\n        this.privProperties = new PropertyCollection();\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privAvatar;\r\n    }\r\n\r\n    public get displayName(): string {\r\n        return this.privDisplayName;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privId;\r\n    }\r\n\r\n    public get preferredLanguage(): string {\r\n        return this.privPreferredLanguage;\r\n    }\r\n\r\n    public get isHost(): boolean {\r\n        return this.privIsHost;\r\n    }\r\n\r\n    public get isMuted(): boolean {\r\n        return this.privIsMuted;\r\n    }\r\n\r\n    public get isUsingTts(): boolean {\r\n        return this.privIsUsingTts;\r\n    }\r\n\r\n    public get voice(): string {\r\n        return this.privVoice;\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public static From(id: string, language: string, voice: string): IParticipant {\r\n        return new Participant(id, \"\", id, false, false, false, language, voice);\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAASA,kBAAkB,QAAQ,eAAe;AAWlD,OAAM,MAAOC,IAAI;EAGbC,YAAmBC,MAAc;IAC7B,IAAI,CAACC,UAAU,GAAGD,MAAM;EAC5B;EAEA,IAAWA,MAAMA,CAAA;IACb,OAAO,IAAI,CAACC,UAAU;EAC1B;;AAwCJ,OAAM,MAAOC,WAAW;EAWpBH,YAAmBI,EAAU,EAAEC,MAAc,EAAEC,WAAmB,EAAEC,MAAe,EAAEC,OAAgB,EAAEC,UAAmB,EAAEC,iBAAyB,EAAEC,KAAc;IACjK,IAAI,CAACC,MAAM,GAAGR,EAAE;IAChB,IAAI,CAACS,UAAU,GAAGR,MAAM;IACxB,IAAI,CAACS,eAAe,GAAGR,WAAW;IAClC,IAAI,CAACS,UAAU,GAAGR,MAAM;IACxB,IAAI,CAACS,WAAW,GAAGR,OAAO;IAC1B,IAAI,CAACS,cAAc,GAAGR,UAAU;IAChC,IAAI,CAACS,qBAAqB,GAAGR,iBAAiB;IAC9C,IAAI,CAACS,SAAS,GAAGR,KAAK;IACtB,IAAI,CAACS,cAAc,GAAG,IAAItB,kBAAkB,EAAE;EAClD;EAEA,IAAWO,MAAMA,CAAA;IACb,OAAO,IAAI,CAACQ,UAAU;EAC1B;EAEA,IAAWP,WAAWA,CAAA;IAClB,OAAO,IAAI,CAACQ,eAAe;EAC/B;EAEA,IAAWV,EAAEA,CAAA;IACT,OAAO,IAAI,CAACQ,MAAM;EACtB;EAEA,IAAWF,iBAAiBA,CAAA;IACxB,OAAO,IAAI,CAACQ,qBAAqB;EACrC;EAEA,IAAWX,MAAMA,CAAA;IACb,OAAO,IAAI,CAACQ,UAAU;EAC1B;EAEA,IAAWP,OAAOA,CAAA;IACd,OAAO,IAAI,CAACQ,WAAW;EAC3B;EAEA,IAAWP,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACQ,cAAc;EAC9B;EAEA,IAAWN,KAAKA,CAAA;IACZ,OAAO,IAAI,CAACQ,SAAS;EACzB;EAEA,IAAWE,UAAUA,CAAA;IACjB,OAAO,IAAI,CAACD,cAAc;EAC9B;EAEO,OAAOE,IAAIA,CAAClB,EAAU,EAAEmB,QAAgB,EAAEZ,KAAa;IAC1D,OAAO,IAAIR,WAAW,CAACC,EAAE,EAAE,EAAE,EAAEA,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAEmB,QAAQ,EAAEZ,KAAK,CAAC;EAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}