{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nimport { RecognitionEventArgs } from \"./Exports.js\";\n/**\n * Defines contents of speech recognizing/recognized event.\n * @class SpeechRecognitionEventArgs\n */\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {SpeechRecognitionResult} result - The speech recognition result.\n   * @param {number} offset - The offset.\n   * @param {string} sessionId - The session id.\n   */\n  constructor(result, offset, sessionId) {\n    super(offset, sessionId);\n    this.privResult = result;\n  }\n  /**\n   * Specifies the recognition result.\n   * @member SpeechRecognitionEventArgs.prototype.result\n   * @function\n   * @public\n   * @returns {SpeechRecognitionResult} the recognition result.\n   */\n  get result() {\n    return this.privResult;\n  }\n}\n/**\n * Defines contents of conversation transcribed/transcribing event.\n * @class ConversationTranscriptionEventArgs\n */\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {ConversationTranscriptionResult} result - The conversation transcription result.\n   * @param {number} offset - The offset.\n   * @param {string} sessionId - The session id.\n   */\n  constructor(result, offset, sessionId) {\n    super(offset, sessionId);\n    this.privResult = result;\n  }\n  /**\n   * Specifies the transcription result.\n   * @member ConversationTranscription1EventArgs.prototype.result\n   * @function\n   * @public\n   * @returns {ConversationTranscriptionResult} the recognition result.\n   */\n  get result() {\n    return this.privResult;\n  }\n}\n/**\n * Defines contents of meeting transcribed/transcribing event.\n * @class MeetingTranscriptionEventArgs\n */\nexport class MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {}","map":{"version":3,"names":["RecognitionEventArgs","SpeechRecognitionEventArgs","constructor","result","offset","sessionId","privResult","ConversationTranscriptionEventArgs","MeetingTranscriptionEventArgs"],"sources":["src/sdk/SpeechRecognitionEventArgs.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { RecognitionEventArgs, SpeechRecognitionResult, ConversationTranscriptionResult } from \"./Exports.js\";\r\n\r\n/**\r\n * Defines contents of speech recognizing/recognized event.\r\n * @class SpeechRecognitionEventArgs\r\n */\r\nexport class SpeechRecognitionEventArgs extends RecognitionEventArgs {\r\n    private privResult: SpeechRecognitionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {SpeechRecognitionResult} result - The speech recognition result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: SpeechRecognitionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the recognition result.\r\n     * @member SpeechRecognitionEventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {SpeechRecognitionResult} the recognition result.\r\n     */\r\n    public get result(): SpeechRecognitionResult {\r\n        return this.privResult;\r\n    }\r\n}\r\n\r\n/**\r\n * Defines contents of conversation transcribed/transcribing event.\r\n * @class ConversationTranscriptionEventArgs\r\n */\r\nexport class ConversationTranscriptionEventArgs extends RecognitionEventArgs {\r\n    private privResult: ConversationTranscriptionResult;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {ConversationTranscriptionResult} result - The conversation transcription result.\r\n     * @param {number} offset - The offset.\r\n     * @param {string} sessionId - The session id.\r\n     */\r\n    public constructor(result: ConversationTranscriptionResult, offset?: number, sessionId?: string) {\r\n        super(offset, sessionId);\r\n\r\n        this.privResult = result;\r\n    }\r\n\r\n    /**\r\n     * Specifies the transcription result.\r\n     * @member ConversationTranscription1EventArgs.prototype.result\r\n     * @function\r\n     * @public\r\n     * @returns {ConversationTranscriptionResult} the recognition result.\r\n     */\r\n        public get result(): ConversationTranscriptionResult {\r\n            return this.privResult;\r\n        }\r\n}\r\n\r\n/**\r\n * Defines contents of meeting transcribed/transcribing event.\r\n * @class MeetingTranscriptionEventArgs\r\n */\r\nexport class MeetingTranscriptionEventArgs extends SpeechRecognitionEventArgs {\r\n}\r\n"],"mappings":"AAAA;AACA;AAEA;AACA,SAASA,oBAAoB,QAAkE,cAAc;AAE7G;;;;AAIA,OAAM,MAAOC,0BAA2B,SAAQD,oBAAoB;EAGhE;;;;;;;EAOAE,YAAmBC,MAA+B,EAAEC,MAAe,EAAEC,SAAkB;IACnF,KAAK,CAACD,MAAM,EAAEC,SAAS,CAAC;IAExB,IAAI,CAACC,UAAU,GAAGH,MAAM;EAC5B;EAEA;;;;;;;EAOA,IAAWA,MAAMA,CAAA;IACb,OAAO,IAAI,CAACG,UAAU;EAC1B;;AAGJ;;;;AAIA,OAAM,MAAOC,kCAAmC,SAAQP,oBAAoB;EAGxE;;;;;;;EAOAE,YAAmBC,MAAuC,EAAEC,MAAe,EAAEC,SAAkB;IAC3F,KAAK,CAACD,MAAM,EAAEC,SAAS,CAAC;IAExB,IAAI,CAACC,UAAU,GAAGH,MAAM;EAC5B;EAEA;;;;;;;EAOI,IAAWA,MAAMA,CAAA;IACb,OAAO,IAAI,CAACG,UAAU;EAC1B;;AAGR;;;;AAIA,OAAM,MAAOE,6BAA8B,SAAQP,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}